"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["11022"],{73733:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>h,metadata:()=>r,assets:()=>d,contentTitle:()=>a});var r=JSON.parse('{"id":"middleware/session","title":"Session","description":"The Session middleware adds session management to Fiber apps through the Storage package, which offers a unified interface for multiple databases. By default, sessions live in memory, but you can plug in any storage backend.","source":"@site/docs/core/middleware/session.md","sourceDirName":"middleware","slug":"/middleware/session","permalink":"/next/middleware/session","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/fiber/edit/main/docs/middleware/session.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"frontMatter":{"id":"session"},"sidebar":"left_sidebar","previous":{"title":"Rewrite","permalink":"/next/middleware/rewrite"},"next":{"title":"Skip","permalink":"/next/middleware/skip"}}'),i=s(74848),t=s(84429);let o={id:"session"},a="Session",d={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Production Configuration",id:"production-configuration",level:3},{value:"Usage Patterns",id:"usage-patterns",level:2},{value:"Middleware Pattern (Recommended)",id:"middleware-pattern-recommended",level:3},{value:"Store Pattern (Advanced)",id:"store-pattern-advanced",level:3},{value:"Session Security",id:"session-security",level:2},{value:"Authentication Flow",id:"authentication-flow",level:3},{value:"Basic Login/Logout",id:"basic-loginlogout",level:4},{value:"Cart Preservation During Login",id:"cart-preservation-during-login",level:4},{value:"Security Methods Comparison",id:"security-methods-comparison",level:3},{value:"Common Security Mistakes",id:"common-security-mistakes",level:3},{value:"Authentication Middleware",id:"authentication-middleware",level:3},{value:"Automatic Session Expiration",id:"automatic-session-expiration",level:3},{value:"Session ID Extractors",id:"session-id-extractors",level:2},{value:"Built-in Extractors",id:"built-in-extractors",level:3},{value:"Multiple Sources with Fallback",id:"multiple-sources-with-fallback",level:3},{value:"Custom Extractors (Session-specific)",id:"custom-extractors-session-specific",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Storage Options",id:"storage-options",level:3},{value:"Production Security Settings",id:"production-security-settings",level:3},{value:"Custom Types",id:"custom-types",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"v2 to v3 Breaking Changes",id:"v2-to-v3-breaking-changes",level:3},{value:"Migration Examples",id:"migration-examples",level:3},{value:"KeyLookup to Extractor Migration",id:"keylookup-to-extractor-migration",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Middleware Methods (Recommended)",id:"middleware-methods-recommended",level:3},{value:"Store Methods",id:"store-methods",level:3},{value:"Session Methods (Store Pattern)",id:"session-methods-store-pattern",level:3},{value:"Extractor Functions",id:"extractor-functions",level:3},{value:"Config Properties",id:"config-properties",level:3},{value:"Examples",id:"examples",level:2},{value:"E-commerce with Cart Persistence",id:"e-commerce-with-cart-persistence",level:3},{value:"API with Header-based Sessions",id:"api-with-header-based-sessions",level:3},{value:"Multi-source Session ID Support",id:"multi-source-session-id-support",level:3}];function l(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"session",children:"Session"})}),"\n",(0,i.jsxs)(n.p,{children:["The Session middleware adds session management to Fiber apps through the ",(0,i.jsx)(n.a,{href:"https://github.com/gofiber/storage",children:"Storage"})," package, which offers a unified interface for multiple databases. By default, sessions live in memory, but you can plug in any storage backend."]}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#quick-start",children:"Quick Start"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#usage-patterns",children:"Usage Patterns"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#session-security",children:"Session Security"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#session-id-extractors",children:"Session ID Extractors"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#configuration",children:"Configuration"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#migration-guide",children:"Migration Guide"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#api-reference",children:"API Reference"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "fmt"\n    "github.com/gofiber/fiber/v3"\n    "github.com/gofiber/fiber/v3/middleware/session"\n)\n\n// Basic usage\napp.Use(session.New())\n\napp.Get("/", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n\n    // Get and update visits count\n    var visits int\n    if v := sess.Get("visits"); v != nil {\n        // Use type assertion with an ok check to prevent a panic\n        if vInt, ok := v.(int); ok {\n            visits = vInt\n        }\n    }\n    visits++\n    sess.Set("visits", visits)\n    return c.SendString(fmt.Sprintf("Visits: %d", visits))\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"production-configuration",children:"Production Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "time"\n    "github.com/gofiber/fiber/v3/extractors"\n    "github.com/gofiber/storage/redis"\n)\n\nstorage := redis.New(redis.Config{\n    Host: "localhost",\n    Port: 6379,\n})\n\napp.Use(session.New(session.Config{\n    Storage:           storage,\n    CookieSecure:      true,              // HTTPS only\n    CookieHTTPOnly:    true,              // Prevent XSS\n    CookieSameSite:    "Lax",             // CSRF protection\n    IdleTimeout:       30 * time.Minute,  // Session timeout\n    AbsoluteTimeout:   24 * time.Hour,    // Maximum session life\n    Extractor:         extractors.FromCookie("__Host-session_id"),\n}))\n\nNotes:\n\n- AbsoluteTimeout must be greater than or equal to IdleTimeout; otherwise, the middleware panics during configuration.\n- If CookieSameSite is set to "None", the middleware automatically forces CookieSecure=true when setting the cookie.\n'})}),"\n",(0,i.jsx)(n.h2,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"middleware-pattern-recommended",children:"Middleware Pattern (Recommended)"}),"\n",(0,i.jsx)(n.p,{children:"This pattern automatically manages the session lifecycle and is recommended for most applications."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Setup middleware\napp.Use(session.New())\n\n// Use in handlers\napp.Post("/login", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n\n    // Session is automatically saved when handler returns\n    sess.Set("user_id", 123)\n    sess.Set("authenticated", true)\n\n    return c.Redirect("/dashboard")\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automatic session saving"}),"\n",(0,i.jsx)(n.li,{children:"Automatic resource cleanup"}),"\n",(0,i.jsx)(n.li,{children:"No manual lifecycle management"}),"\n",(0,i.jsx)(n.li,{children:"Thread-safe operations"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"store-pattern-advanced",children:"Store Pattern (Advanced)"}),"\n",(0,i.jsx)(n.p,{children:"Use the store pattern for background tasks or when you need direct access to sessions."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "context"\n    "log"\n    "time"\n)\n\nstore := session.NewStore()\n\n// In background tasks\nfunc backgroundTask(sessionID string) {\n    sess, err := store.GetByID(context.Background(), sessionID)\n    if err != nil {\n        return\n    }\n    defer sess.Release() // Important: Manual cleanup required\n\n    // Modify session\n    sess.Set("last_task", time.Now())\n\n    // Manual save required\n    if err := sess.Save(); err != nil {\n        log.Printf("Failed to save session: %v", err)\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Must call ",(0,i.jsx)(n.code,{children:"sess.Release()"})," when done"]}),"\n",(0,i.jsxs)(n.li,{children:["Must call ",(0,i.jsx)(n.code,{children:"sess.Save()"})," to persist changes"]}),"\n",(0,i.jsx)(n.li,{children:"Handle errors manually"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"session-security",children:"Session Security"}),"\n",(0,i.jsx)(n.h3,{id:"authentication-flow",children:"Authentication Flow"}),"\n",(0,i.jsx)(n.p,{children:"Understanding session lifecycle during authentication is crucial for security."}),"\n",(0,i.jsx)(n.h4,{id:"basic-loginlogout",children:"Basic Login/Logout"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'app.Post("/login", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n\n    email := c.FormValue("email")\n    password := c.FormValue("password")\n\n    // Simple credential validation (use proper authentication in production)\n    if email == "admin@example.com" && password == "secret" {\n        // Important: Regenerate the session ID to prevent fixation\n        // This changes the session ID while preserving existing data\n        if err := sess.Regenerate(); err != nil {\n            return c.Status(500).SendString("Session error")\n        }\n\n        // Add authentication data to existing session\n        sess.Set("user_id", 1)\n        sess.Set("authenticated", true)\n\n        return c.Redirect("/dashboard")\n    }\n\n    return c.Status(401).SendString("Invalid credentials")\n})\n\napp.Post("/logout", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n\n    // Complete session reset (clears all data + new session ID)\n    if err := sess.Reset(); err != nil {\n        return c.Status(500).SendString("Session error")\n    }\n\n    return c.Redirect("/")\n})\n'})}),"\n",(0,i.jsx)(n.h4,{id:"cart-preservation-during-login",children:"Cart Preservation During Login"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'app.Post("/login", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n\n    // Validate credentials (implement your own validation)\n    email := c.FormValue("email")\n    password := c.FormValue("password")\n    if !isValidUser(email, password) {\n        return c.Status(401).JSON(fiber.Map{"error": "Invalid credentials"})\n    }\n\n    // Important: Regenerate the session ID to prevent fixation\n    // This changes the session ID while preserving existing data\n    if err := sess.Regenerate(); err != nil {\n        return c.Status(500).JSON(fiber.Map{"error": "Session error"})\n    }\n\n    // Add authentication data to existing session\n    sess.Set("user_id", getUserID(email))\n    sess.Set("authenticated", true)\n    sess.Set("login_time", time.Now())\n\n    return c.JSON(fiber.Map{"status": "logged in"})\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"security-methods-comparison",children:"Security Methods Comparison"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Session ID"}),(0,i.jsx)(n.th,{children:"Session Data"}),(0,i.jsx)(n.th,{children:"Use Case"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Regenerate()"})}),(0,i.jsx)(n.td,{children:"\u2705 Changes"}),(0,i.jsx)(n.td,{children:"\u2705 Preserved"}),(0,i.jsx)(n.td,{children:"Login, privilege escalation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Reset()"})}),(0,i.jsx)(n.td,{children:"\u2705 Changes"}),(0,i.jsx)(n.td,{children:"\u274C Cleared"}),(0,i.jsx)(n.td,{children:"Logout, security breach"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Destroy()"})}),(0,i.jsx)(n.td,{children:"\u26AA Unchanged"}),(0,i.jsx)(n.td,{children:"\u274C Cleared"}),(0,i.jsx)(n.td,{children:"Clear data only"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"common-security-mistakes",children:"Common Security Mistakes"}),"\n",(0,i.jsxs)(n.p,{children:["\u274C ",(0,i.jsx)(n.strong,{children:"Session Fixation Vulnerability:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// DANGEROUS: Keeping same session ID after login\napp.Post("/login", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n    // Validate user...\n    sess.Set("user_id", userID) // Attacker can hijack this session!\n    return c.Redirect("/dashboard")\n})\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Secure Implementation:"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// SECURE: Always regenerate session ID after authentication\napp.Post("/login", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n    // Validate user...\n    if err := sess.Regenerate(); err != nil { // Prevents session fixation\n        return err\n    }\n    sess.Set("user_id", userID)\n    return c.Redirect("/dashboard")\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"authentication-middleware",children:"Authentication Middleware"}),"\n",(0,i.jsx)(n.p,{children:"This is a basic example of an authentication middleware that checks if a user is logged in before accessing protected routes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Authentication check middleware\nfunc RequireAuth(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n    if sess == nil {\n        return c.Redirect("/login")\n    }\n\n    // Check if user is authenticated\n    if sess.Get("authenticated") != true {\n        return c.Redirect("/login")\n    }\n\n    return c.Next()\n}\n\n// Usage\napp.Use("/dashboard", RequireAuth)\napp.Use("/admin", RequireAuth)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"automatic-session-expiration",children:"Automatic Session Expiration"}),"\n",(0,i.jsx)(n.p,{children:"Sessions automatically expire based on your configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"app.Use(session.New(session.Config{\n    IdleTimeout:     30 * time.Minute, // Auto-expire after 30 min of inactivity\n    AbsoluteTimeout: 24 * time.Hour,   // Force expire after 24 hours regardless of activity\n}))\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"How it works:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"IdleTimeout"}),": Storage automatically removes sessions after inactivity period","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Any route that uses the middleware will reset the idle timer"}),"\n",(0,i.jsxs)(n.li,{children:["Calling ",(0,i.jsx)(n.code,{children:"sess.Save()"})," will also reset the idle timer"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"AbsoluteTimeout"}),": Sessions are forcibly expired after maximum duration"]}),"\n",(0,i.jsx)(n.li,{children:"No manual cleanup required - the storage layer handles this"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"session-id-extractors",children:"Session ID Extractors"}),"\n",(0,i.jsxs)(n.p,{children:["This middleware uses the shared extractors module for session ID extraction. See the ",(0,i.jsx)(n.a,{href:"../guide/extractors",children:"Extractors Guide"})," for more details."]}),"\n",(0,i.jsx)(n.h3,{id:"built-in-extractors",children:"Built-in Extractors"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Cookie-based (recommended for web apps)\nextractors.FromCookie("session_id")\n\n// Header-based (recommended for APIs)\nextractors.FromHeader("X-Session-ID")\n\n// Authorization header (read-only)\nextractors.FromAuthHeader("Bearer")\n\n// Form data\nextractors.FromForm("session_id")\n\n// URL query parameter\nextractors.FromQuery("session_id")\n\n// URL path parameter\nextractors.FromParam("id")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Session Response Behavior:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cookie extractors: set cookie in the response"}),"\n",(0,i.jsx)(n.li,{children:"Header extractors (non-Authorization): set header in the response"}),"\n",(0,i.jsx)(n.li,{children:"Authorization header, Query, Form, Param, Custom: read-only (no response values are set)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"multiple-sources-with-fallback",children:"Multiple Sources with Fallback"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'app.Use(session.New(session.Config{\n    Extractor: extractors.Chain(\n        extractors.FromCookie("session_id"),    // Try cookie first\n        extractors.FromHeader("X-Session-ID"),  // Then header\n        extractors.FromQuery("session_id"),     // Finally query\n    ),\n}))\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Response Behavior with Chained Extractors:"})}),"\n",(0,i.jsx)(n.p,{children:"Only cookie and non-Authorization header extractors contribute to response setting. Others are read-only."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cookie + Header (non-Auth) extractors: both cookie and header are set"}),"\n",(0,i.jsx)(n.li,{children:"Only Cookie extractors: only cookie is set"}),"\n",(0,i.jsx)(n.li,{children:"Only Header (non-Auth) extractors: only header is set"}),"\n",(0,i.jsx)(n.li,{children:"Any mix that includes Authorization/Query/Form/Param/Custom: those sources are read-only"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// This will set both cookie and header in response\nextractors.Chain(\n    extractors.FromCookie("session_id"),\n    extractors.FromHeader("X-Session-ID")\n)\n\n// This will set only cookie in response\nextractors.Chain(\n    extractors.FromCookie("session_id"),\n    extractors.FromQuery("session_id")   // Ignored for response\n)\n\n// This will set nothing in response (read-only mode)\nextractors.Chain(\n    extractors.FromQuery("session_id"),\n    extractors.FromForm("session_id")\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-extractors-session-specific",children:"Custom Extractors (Session-specific)"}),"\n",(0,i.jsx)(n.p,{children:"Prefer the helper constructors from the extractors module. See the Extractors Guide for the full API; below are session-specific examples and notes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Authorization Bearer tokens (read-only for sessions)\n// The session middleware will NOT set Authorization back in the response.\napp.Use(session.New(session.Config{\n    Extractor: extractors.FromAuthHeader("Bearer"),\n}))\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Custom read-only header via FromCustom (read-only for sessions)\napp.Use(session.New(session.Config{\n    Extractor: extractors.FromCustom("X-Custom-Session", func(c fiber.Ctx) (string, error) {\n        v := c.Get("X-Custom-Session")\n        if v == "" { return "", extractors.ErrNotFound }\n        return v, nil\n    }),\n}))\n'})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"storage-options",children:"Storage Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "github.com/gofiber/storage/redis"\n    "github.com/gofiber/storage/postgres"\n)\n\n// Redis (recommended for production)\nredisStorage := redis.New(redis.Config{\n    Host:     "localhost",\n    Port:     6379,\n    Password: "",\n    Database: 0,\n})\n\n// PostgreSQL\npgStorage := postgres.New(postgres.Config{\n    Host:     "localhost",\n    Port:     5432,\n    Database: "sessions",\n    Username: "user",\n    Password: "pass",\n})\n\napp.Use(session.New(session.Config{\n    Storage: redisStorage,\n}))\n'})}),"\n",(0,i.jsx)(n.h3,{id:"production-security-settings",children:"Production Security Settings"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "log"\n    "time"\n    "github.com/gofiber/utils/v2"\n    "github.com/gofiber/fiber/v3/extractors"\n)\n\napp.Use(session.New(session.Config{\n    // Storage\n    Storage: redisStorage,\n\n    // Security\n    CookieSecure:      true,    // HTTPS only (required in production)\n    CookieHTTPOnly:    true,    // No JavaScript access (prevents XSS)\n    CookieSameSite:    "Lax",   // CSRF protection\n\n    // Session Management\n    IdleTimeout:       30 * time.Minute,  // Inactivity timeout\n    AbsoluteTimeout:   24 * time.Hour,    // Maximum session duration\n\n    // Cookie Settings\n    CookiePath:        "/",\n    CookieDomain:      "example.com",\n    CookieSessionOnly: false,   // Persist across browser restarts\n\n    // Session ID\n    Extractor:         extractors.FromCookie("__Host-session_id"),\n    KeyGenerator:      utils.UUIDv4,\n\n    // Error Handling\n    ErrorHandler: func(c fiber.Ctx, err error) {\n        log.Printf("Session error: %v", err)\n    },\n}))\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-types",children:"Custom Types"}),"\n",(0,i.jsx)(n.p,{children:"Session data supports basic Go types by default:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"int"}),", ",(0,i.jsx)(n.code,{children:"int8"}),", ",(0,i.jsx)(n.code,{children:"int16"}),", ",(0,i.jsx)(n.code,{children:"int32"}),", ",(0,i.jsx)(n.code,{children:"int64"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"uint"}),", ",(0,i.jsx)(n.code,{children:"uint8"}),", ",(0,i.jsx)(n.code,{children:"uint16"}),", ",(0,i.jsx)(n.code,{children:"uint32"}),", ",(0,i.jsx)(n.code,{children:"uint64"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bool"}),", ",(0,i.jsx)(n.code,{children:"float32"}),", ",(0,i.jsx)(n.code,{children:"float64"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[]byte"}),", ",(0,i.jsx)(n.code,{children:"complex64"}),", ",(0,i.jsx)(n.code,{children:"complex128"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"interface{}"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For custom types (structs, maps, slices), you must register them for encoding/decoding:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import "fmt"\n\ntype User struct {\n    ID   int    `json:"id"`\n    Name string `json:"name"`\n    Role string `json:"role"`\n}\n\n// Method 1: Using NewWithStore\nfunc main() {\n    app := fiber.New()\n\n    sessionMiddleware, store := session.NewWithStore()\n    store.RegisterType(User{}) // Register custom type\n\n    app.Use(sessionMiddleware)\n\n    app.Get("/", func(c fiber.Ctx) error {\n        sess := session.FromContext(c)\n\n        // Use custom type\n        sess.Set("user", User{ID: 123, Name: "John", Role: "admin"})\n\n        user, ok := sess.Get("user").(User)\n        if ok {\n            return c.JSON(fiber.Map{"user": user.Name, "role": user.Role})\n        }\n        return c.SendString("No user found")\n    })\n\n    app.Listen(":3000")\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Method 2: Using separate store\nstore := session.NewStore()\nstore.RegisterType(User{})\n\napp.Use(session.New(session.Config{\n    Store: store,\n}))\n\n// Usage in handlers\nsess.Set("user", User{ID: 123, Name: "John", Role: "admin"})\nuser, ok := sess.Get("user").(User)\nif ok {\n    fmt.Printf("User: %s (Role: %s)", user.Name, user.Role)\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Important Notes:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Custom types must be registered before using them in sessions"}),"\n",(0,i.jsx)(n.li,{children:"Registration must happen during application startup"}),"\n",(0,i.jsx)(n.li,{children:"All instances of the application must register the same types"}),"\n",(0,i.jsxs)(n.li,{children:["Types are encoded using Go's ",(0,i.jsx)(n.code,{children:"gob"})," package"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,i.jsx)(n.h3,{id:"v2-to-v3-breaking-changes",children:"v2 to v3 Breaking Changes"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function Signature"}),": ",(0,i.jsx)(n.code,{children:"session.New()"})," now returns middleware handler, not store"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Session ID Extraction"}),": ",(0,i.jsx)(n.code,{children:"KeyLookup"})," replaced with ",(0,i.jsx)(n.code,{children:"Extractor"})," functions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lifecycle Management"}),": Manual ",(0,i.jsx)(n.code,{children:"Release()"})," required for store pattern"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Timeout Handling"}),": ",(0,i.jsx)(n.code,{children:"Expiration"})," split into ",(0,i.jsx)(n.code,{children:"IdleTimeout"})," and ",(0,i.jsx)(n.code,{children:"AbsoluteTimeout"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"migration-examples",children:"Migration Examples"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"v2 Code:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'store := session.New(session.Config{\n    KeyLookup: "cookie:session_id",\n})\n\napp.Get("/", func(c fiber.Ctx) error {\n    sess, err := store.Get(c)\n    if err != nil {\n        return err\n    }\n    // Session automatically saved and released\n    sess.Set("key", "value")\n    return nil\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"v3 Middleware Pattern (Recommended):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'app.Use(session.New(session.Config{\n    Extractor: extractors.FromCookie("session_id"),\n}))\n\napp.Get("/", func(c fiber.Ctx) error {\n    sess := session.FromContext(c)\n    // Session automatically saved and released\n    sess.Set("key", "value")\n    return nil\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"v3 Store Pattern (Advanced):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'store := session.NewStore(session.Config{\n    Extractor: extractors.FromCookie("session_id"),\n})\n\napp.Get("/", func(c fiber.Ctx) error {\n    sess, err := store.Get(c)\n    if err != nil {\n        return err\n    }\n    defer sess.Release() // Manual cleanup required\n\n    sess.Set("key", "value")\n    return sess.Save() // Manual save required\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"keylookup-to-extractor-migration",children:"KeyLookup to Extractor Migration"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"v2 KeyLookup"}),(0,i.jsx)(n.th,{children:"v3 Extractor"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"cookie:session_id"'})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'extractors.FromCookie("session_id")'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"header:X-Session-ID"'})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'extractors.FromHeader("X-Session-ID")'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"query:session_id"'})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'extractors.FromQuery("session_id")'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"form:session_id"'})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'extractors.FromForm("session_id")'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"cookie:sid,header:X-Sid"'})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'extractors.Chain(extractors.FromCookie("sid"), extractors.FromHeader("X-Sid"))'})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,i.jsx)(n.h3,{id:"middleware-methods-recommended",children:"Middleware Methods (Recommended)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"sess := session.FromContext(c)\n\n// Data operations\nsess.Get(key any) any\nsess.Set(key, value any)\nsess.Delete(key any)\nsess.Keys() []any\n\n// Session management\nsess.ID() string\nsess.Fresh() bool\nsess.Regenerate() error  // Change ID, keep data\nsess.Reset() error       // Change ID, clear data\nsess.Destroy() error     // Keep ID, clear data\n\n// Store access\nsess.Store() *session.Store\n"})}),"\n",(0,i.jsx)(n.h3,{id:"store-methods",children:"Store Methods"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"store := session.NewStore()\n\n// Store operations\nstore.Get(c fiber.Ctx) (*session.Session, error)\nstore.GetByID(ctx context.Context, sessionID string) (*session.Session, error)\nstore.Reset(ctx context.Context) error\nstore.Delete(ctx context.Context, sessionID string) error\n\n// Type registration\nstore.RegisterType(interface{})\n"})}),"\n",(0,i.jsx)(n.h3,{id:"session-methods-store-pattern",children:"Session Methods (Store Pattern)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"sess, err := store.Get(c)\ndefer sess.Release() // Required!\n\n// Same methods as middleware, plus:\nsess.Save() error              // Manual save required\nsess.SetIdleTimeout(duration)  // Per-session timeout\nsess.Release()                 // Manual cleanup required\n"})}),"\n",(0,i.jsx)(n.h3,{id:"extractor-functions",children:"Extractor Functions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Built-in extractors (import "github.com/gofiber/fiber/v3/extractors")\nextractors.FromCookie(key string) extractors.Extractor\nextractors.FromHeader(key string) extractors.Extractor\nextractors.FromQuery(key string) extractors.Extractor\nextractors.FromForm(key string) extractors.Extractor\nextractors.FromParam(key string) extractors.Extractor\n\n// Chaining\nextractors.Chain(extractors ...extractors.Extractor) extractors.Extractor\n'})}),"\n",(0,i.jsx)(n.h3,{id:"config-properties",children:"Config Properties"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Store"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"*session.Store"})}),(0,i.jsx)(n.td,{children:"Pre-built session store (use when you need to share/register types)"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"nil"})," (auto-created)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Storage"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"fiber.Storage"})}),(0,i.jsxs)(n.td,{children:["Session storage backend (used when creating a store if ",(0,i.jsx)(n.code,{children:"Store"})," is nil)"]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"memory.New()"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Extractor"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"extractors.Extractor"})}),(0,i.jsx)(n.td,{children:"Session ID extraction"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'extractors.FromCookie("session_id")'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"KeyGenerator"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"func() string"})}),(0,i.jsx)(n.td,{children:"Session ID generator"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"utils.UUIDv4"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"IdleTimeout"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"time.Duration"})}),(0,i.jsx)(n.td,{children:"Inactivity timeout"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"30 * time.Minute"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AbsoluteTimeout"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"time.Duration"})}),(0,i.jsx)(n.td,{children:"Maximum session duration"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"0"})," (unlimited)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CookieSecure"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bool"})}),(0,i.jsx)(n.td,{children:"HTTPS only"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CookieHTTPOnly"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bool"})}),(0,i.jsx)(n.td,{children:"No JavaScript access"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CookieSameSite"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"SameSite attribute"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Lax"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CookiePath"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Cookie path"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'""'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CookieDomain"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"Cookie domain"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'""'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CookieSessionOnly"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bool"})}),(0,i.jsx)(n.td,{children:"Session cookie"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Next"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"func(fiber.Ctx) bool"})}),(0,i.jsx)(n.td,{children:"Skip middleware when returns true"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"nil"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ErrorHandler"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"func(fiber.Ctx, error)"})}),(0,i.jsx)(n.td,{children:"Error callback"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"DefaultErrorHandler"})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"e-commerce-with-cart-persistence",children:"E-commerce with Cart Persistence"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "time"\n    "github.com/gofiber/fiber/v3"\n    "github.com/gofiber/fiber/v3/middleware/session"\n    "github.com/gofiber/fiber/v3/extractors"\n    "github.com/gofiber/storage/redis"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Session middleware\n    app.Use(session.New(session.Config{\n        Storage:           redis.New(),\n        CookieSecure:      true,\n        CookieHTTPOnly:    true,\n        CookieSameSite:    "Lax",\n        IdleTimeout:       30 * time.Minute,\n        AbsoluteTimeout:   24 * time.Hour,\n        Extractor:         extractors.FromCookie("__Host-cart_session"),\n    }))\n\n    // Add to cart (anonymous user)\n    app.Post("/cart/add", func(c fiber.Ctx) error {\n        sess := session.FromContext(c)\n\n        cart, _ := sess.Get("cart").([]string)\n        cart = append(cart, c.FormValue("item_id"))\n        sess.Set("cart", cart)\n\n        return c.JSON(fiber.Map{"items": len(cart)})\n    })\n\n    // Login (preserve session data)\n    app.Post("/login", func(c fiber.Ctx) error {\n        sess := session.FromContext(c)\n\n        // Simple validation (implement proper authentication)\n        email := c.FormValue("email")\n        password := c.FormValue("password")\n        if email != "user@example.com" || password != "password" {\n            return c.Status(401).JSON(fiber.Map{"error": "Invalid credentials"})\n        }\n\n        // Regenerate session ID for security\n        // This changes the session ID while preserving existing data\n        if err := sess.Regenerate(); err != nil {\n            return c.Status(500).JSON(fiber.Map{"error": "Session error"})\n        }\n\n        sess.Set("user_id", 1)\n        sess.Set("authenticated", true)\n\n        return c.JSON(fiber.Map{"status": "logged in"})\n    })\n\n    // Logout (clear everything)\n    app.Post("/logout", func(c fiber.Ctx) error {\n        sess := session.FromContext(c)\n\n        // Reset clears all data and generates new session ID\n        if err := sess.Reset(); err != nil {\n            return c.Status(500).JSON(fiber.Map{"error": "Session error"})\n        }\n\n        return c.JSON(fiber.Map{"status": "logged out"})\n    })\n\n    app.Listen(":3000")\n}\n\n// Helper functions (implement these properly in production)\nfunc isValidUser(email, password string) bool {\n    return email == "user@example.com" && password == "password"\n}\n\nfunc getUserID(email string) int {\n    return 1 // Return actual user ID from database\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"api-with-header-based-sessions",children:"API with Header-based Sessions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "time"\n    "github.com/gofiber/fiber/v3"\n    "github.com/gofiber/fiber/v3/middleware/session"\n    "github.com/gofiber/fiber/v3/extractors"\n    "github.com/gofiber/storage/redis"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // API session middleware with header extraction\n    app.Use(session.New(session.Config{\n        Storage:     redis.New(),\n        Extractor:   extractors.FromHeader("X-Session-Token"),\n        IdleTimeout: time.Hour,\n    }))\n\n    // API endpoint\n    app.Post("/api/data", func(c fiber.Ctx) error {\n        sess := session.FromContext(c)\n\n        // Track API usage\n        count, _ := sess.Get("api_calls").(int)\n        count++\n        sess.Set("api_calls", count)\n        sess.Set("last_call", time.Now())\n\n        return c.JSON(fiber.Map{\n            "data":  "some data",\n            "calls": count,\n        })\n    })\n\n    app.Listen(":3000")\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"multi-source-session-id-support",children:"Multi-source Session ID Support"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'import (\n    "github.com/gofiber/fiber/v3"\n    "github.com/gofiber/fiber/v3/middleware/session"\n    "github.com/gofiber/fiber/v3/extractors"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Support multiple sources with priority\n    app.Use(session.New(session.Config{\n        Extractor: extractors.Chain(\n            extractors.FromCookie("session_id"),    // 1st: Cookie (web)\n            extractors.FromHeader("X-Session-ID"),  // 2nd: Header (API)\n            extractors.FromQuery("session_id"),     // 3rd: Query (fallback)\n        ),\n    }))\n\n    app.Get("/", func(c fiber.Ctx) error {\n        sess := session.FromContext(c)\n\n        // Works with any of the above methods\n        return c.JSON(fiber.Map{\n            "session_id": sess.ID(),\n            "source":     "multi-source",\n        })\n    })\n\n    app.Listen(":3000")\n}\n'})})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},84429:function(e,n,s){s.d(n,{R:()=>o,x:()=>a});var r=s(96540);let i={},t=r.createContext(i);function o(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);