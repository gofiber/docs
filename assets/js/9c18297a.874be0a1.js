"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["92576"],{48678:function(e,l,i){i.r(l),i.d(l,{frontMatter:()=>a,toc:()=>c,default:()=>p,metadata:()=>n,assets:()=>o,contentTitle:()=>r});var n=JSON.parse('{"id":"tableflip/README","title":"Tableflip Example","description":"Use tableflip for graceful upgrades in a Go application.","source":"@site/docs/recipes/tableflip/README.md","sourceDirName":"tableflip","slug":"/tableflip/","permalink":"/recipes/tableflip/","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/recipes/edit/master/tableflip/README.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"frontMatter":{"title":"Tableflip Example","keywords":["tableflip","golang","graceful upgrade"],"description":"Use tableflip for graceful upgrades in a Go application."},"sidebar":"left_sidebar","previous":{"title":"Swagger","permalink":"/recipes/swagger/"},"next":{"title":"Template","permalink":"/recipes/template/"}}'),s=i(74848),t=i(84429);let a={title:"Tableflip Example",keywords:["tableflip","golang","graceful upgrade"],description:"Use tableflip for graceful upgrades in a Go application."},r="Tableflip Example",o={},c=[{value:"What is Tableflip?",id:"what-is-tableflip",level:2},{value:"Goals of Tableflip",id:"goals-of-tableflip",level:3},{value:"Steps",id:"steps",level:2}];function d(e){let l={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.header,{children:(0,s.jsx)(l.h1,{id:"tableflip-example",children:"Tableflip Example"})}),"\n",(0,s.jsxs)(l.p,{children:[(0,s.jsx)(l.a,{href:"https://github.com/gofiber/recipes/tree/master/tableflip",children:(0,s.jsx)(l.img,{src:"https://img.shields.io/static/v1?label=&message=Github&color=2ea44f&style=for-the-badge&logo=github",alt:"Github"})})," ",(0,s.jsx)(l.a,{href:"https://stackblitz.com/github/gofiber/recipes/tree/master/tableflip",children:(0,s.jsx)(l.img,{src:"https://img.shields.io/static/v1?label=&message=StackBlitz&color=2ea44f&style=for-the-badge&logo=StackBlitz",alt:"StackBlitz"})})]}),"\n",(0,s.jsxs)(l.p,{children:["This example demonstrates how to use ",(0,s.jsx)(l.a,{href:"https://github.com/cloudflare/tableflip",children:"tableflip"})," for graceful upgrades in a Go application."]}),"\n",(0,s.jsx)(l.h2,{id:"what-is-tableflip",children:"What is Tableflip?"}),"\n",(0,s.jsx)(l.p,{children:"Tableflip is a library that allows you to update the running code and/or configuration of a network service without disrupting existing connections. It achieves this by starting a new process, transferring clients to it, and then exiting the old process."}),"\n",(0,s.jsx)(l.h3,{id:"goals-of-tableflip",children:"Goals of Tableflip"}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"No old code keeps running after a successful upgrade."}),"\n",(0,s.jsx)(l.li,{children:"The new process has a grace period for initialization."}),"\n",(0,s.jsx)(l.li,{children:"Crashing during initialization is acceptable."}),"\n",(0,s.jsx)(l.li,{children:"Only a single upgrade is ever run in parallel."}),"\n",(0,s.jsx)(l.li,{children:"Tableflip works on Linux and macOS."}),"\n"]}),"\n",(0,s.jsx)(l.h2,{id:"steps",children:"Steps"}),"\n",(0,s.jsxs)(l.ol,{children:["\n",(0,s.jsxs)(l.li,{children:["\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.strong,{children:"Build v0.0.1 Demo:"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",children:"go build -o demo main.go\n"})}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["\n",(0,s.jsx)(l.p,{children:(0,s.jsxs)(l.strong,{children:["Run the Demo and Create a GET Request to ",(0,s.jsx)(l.code,{children:"127.0.0.1:8080/version"}),":"]})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",children:"[PID: 123] v0.0.1\n"})}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.strong,{children:"Prepare a New Version:"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["Change the ",(0,s.jsx)(l.code,{children:"main.go"}),' to update the version to "v0.0.2".']}),"\n",(0,s.jsxs)(l.li,{children:["Rebuild the demo:","\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",children:"go build -o demo main.go\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.ol,{start:"4",children:["\n",(0,s.jsxs)(l.li,{children:["\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.strong,{children:"Kill the Old Process:"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",children:"kill -s HUP 123\n"})}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.strong,{children:"Create the Request to the Version API Again:"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-bash",children:"[PID: 123] v0.0.2\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.p,{children:"The client is completely immune to server upgrades and reboots, and our application updates gracefully!"})]})}function p(e={}){let{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},84429:function(e,l,i){i.d(l,{R:()=>a,x:()=>r});var n=i(96540);let s={},t=n.createContext(s);function a(e){let l=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(t.Provider,{value:l},e.children)}}}]);