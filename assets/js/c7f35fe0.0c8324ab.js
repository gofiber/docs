"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["41599"],{99235:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>s,toc:()=>a,default:()=>d,metadata:()=>t,assets:()=>p,contentTitle:()=>o});var t=JSON.parse('{"id":"multiple-ports/README","title":"Multiple Ports","description":"Running an application on multiple ports.","source":"@site/docs/recipes/multiple-ports/README.md","sourceDirName":"multiple-ports","slug":"/multiple-ports/","permalink":"/recipes/multiple-ports/","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/recipes/edit/master/multiple-ports/README.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"frontMatter":{"title":"Multiple Ports","keywords":["multiple ports","server","port"],"description":"Running an application on multiple ports."},"sidebar":"left_sidebar","previous":{"title":"Monitoring with Apitally","permalink":"/recipes/monitoring-with-apitally/"},"next":{"title":"MySQL","permalink":"/recipes/mysql/"}}'),r=i(74848),l=i(84429);let s={title:"Multiple Ports",keywords:["multiple ports","server","port"],description:"Running an application on multiple ports."},o="Multiple Ports Example",p={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Running the Application",id:"running-the-application",level:2},{value:"Example",id:"example",level:2},{value:"References",id:"references",level:2}];function c(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"multiple-ports-example",children:"Multiple Ports Example"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/gofiber/recipes/tree/master/multiple-ports",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/static/v1?label=&message=Github&color=2ea44f&style=for-the-badge&logo=github",alt:"Github"})})," ",(0,r.jsx)(n.a,{href:"https://stackblitz.com/github/gofiber/recipes/tree/master/multiple-ports",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/static/v1?label=&message=StackBlitz&color=2ea44f&style=for-the-badge&logo=StackBlitz",alt:"StackBlitz"})})]}),"\n",(0,r.jsx)(n.p,{children:"This project demonstrates how to run a Go application using the Fiber framework on multiple ports."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Ensure you have the following installed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Golang"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/gofiber/fiber",children:"Fiber"})," package"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Clone the repository:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"git clone https://github.com/gofiber/recipes.git\ncd recipes/multiple-ports\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"go get\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"running-the-application",children:"Running the Application"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Start the application:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"go run main.go\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"Here is an example of how to run a Fiber application on multiple ports:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "log"\n    "sync"\n\n    "github.com/gofiber/fiber/v2"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/", func(c *fiber.Ctx) error {\n        return c.SendString("Hello, World!")\n    })\n\n    ports := []string{":3000", ":3001"}\n\n    var wg sync.WaitGroup\n    for _, port := range ports {\n        wg.Add(1)\n        go func(p string) {\n            defer wg.Done()\n            if err := app.Listen(p); err != nil {\n                log.Printf("Error starting server on port %s: %v", p, err)\n            }\n        }(port)\n    }\n\n    wg.Wait()\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"In this example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The application listens on multiple ports (",(0,r.jsx)(n.code,{children:":3000"})," and ",(0,r.jsx)(n.code,{children:":3001"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"sync.WaitGroup"})," is used to wait for all goroutines to finish."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.gofiber.io",children:"Fiber Documentation"})}),"\n"]})]})}function d(e={}){let{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},84429:function(e,n,i){i.d(n,{R:()=>s,x:()=>o});var t=i(96540);let r={},l=t.createContext(r);function s(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);