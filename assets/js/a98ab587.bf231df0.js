"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["37729"],{22575:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>a,toc:()=>c,default:()=>h,metadata:()=>r,assets:()=>o,contentTitle:()=>l});var r=JSON.parse('{"id":"api/ctx","title":"\u{1F9E0} Ctx","description":"The Ctx struct represents the Context which hold the HTTP request and response. It has methods for the request query string, parameters, body, HTTP headers, and so on.","source":"@site/versioned_docs/version-v2.x/api/ctx.md","sourceDirName":"api","slug":"/api/ctx","permalink":"/api/ctx","draft":false,"unlisted":false,"tags":[],"version":"v2.x","lastUpdatedAt":1762030608000,"sidebarPosition":3,"frontMatter":{"id":"ctx","title":"\u{1F9E0} Ctx","description":"The Ctx struct represents the Context which hold the HTTP request and response. It has methods for the request query string, parameters, body, HTTP headers, and so on.","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"\u{1F680} App","permalink":"/api/app"},"next":{"title":"\u{1F4CB} Constants","permalink":"/api/constants"}}'),s=t(74848),i=t(84429);let a={id:"ctx",title:"\u{1F9E0} Ctx",description:"The Ctx struct represents the Context which hold the HTTP request and response. It has methods for the request query string, parameters, body, HTTP headers, and so on.",sidebar_position:3},l,o={},c=[{value:"Accepts",id:"accepts",level:2},{value:"AllParams",id:"allparams",level:2},{value:"App",id:"app",level:2},{value:"Append",id:"append",level:2},{value:"Attachment",id:"attachment",level:2},{value:"BaseURL",id:"baseurl",level:2},{value:"Bind",id:"bind",level:2},{value:"BodyRaw",id:"bodyraw",level:2},{value:"Body",id:"body",level:2},{value:"BodyParser",id:"bodyparser",level:2},{value:"ClearCookie",id:"clearcookie",level:2},{value:"ClientHelloInfo",id:"clienthelloinfo",level:2},{value:"Context",id:"context",level:2},{value:"Cookie",id:"cookie",level:2},{value:"CookieParser",id:"cookieparser",level:2},{value:"Cookies",id:"cookies",level:2},{value:"Download",id:"download",level:2},{value:"Format",id:"format",level:2},{value:"FormFile",id:"formfile",level:2},{value:"FormValue",id:"formvalue",level:2},{value:"Fresh",id:"fresh",level:2},{value:"Get",id:"get",level:2},{value:"GetReqHeaders",id:"getreqheaders",level:2},{value:"GetRespHeader",id:"getrespheader",level:2},{value:"GetRespHeaders",id:"getrespheaders",level:2},{value:"GetRouteURL",id:"getrouteurl",level:2},{value:"Hostname",id:"hostname",level:2},{value:"IP",id:"ip",level:2},{value:"IPs",id:"ips",level:2},{value:"Is",id:"is",level:2},{value:"IsFromLocal",id:"isfromlocal",level:2},{value:"JSON",id:"json",level:2},{value:"JSONP",id:"jsonp",level:2},{value:"Links",id:"links",level:2},{value:"Locals",id:"locals",level:2},{value:"Location",id:"location",level:2},{value:"Method",id:"method",level:2},{value:"MultipartForm",id:"multipartform",level:2},{value:"Next",id:"next",level:2},{value:"OriginalURL",id:"originalurl",level:2},{value:"Params",id:"params",level:2},{value:"ParamsInt",id:"paramsint",level:2},{value:"ParamsParser",id:"paramsparser",level:2},{value:"Path",id:"path",level:2},{value:"Protocol",id:"protocol",level:2},{value:"Queries",id:"queries",level:2},{value:"Query",id:"query",level:2},{value:"QueryBool",id:"querybool",level:2},{value:"QueryFloat",id:"queryfloat",level:2},{value:"QueryInt",id:"queryint",level:2},{value:"QueryParser",id:"queryparser",level:2},{value:"Range",id:"range",level:2},{value:"Redirect",id:"redirect",level:2},{value:"RedirectToRoute",id:"redirecttoroute",level:2},{value:"RedirectBack",id:"redirectback",level:2},{value:"Render",id:"render",level:2},{value:"Request",id:"request",level:2},{value:"ReqHeaderParser",id:"reqheaderparser",level:2},{value:"Response",id:"response",level:2},{value:"RestartRouting",id:"restartrouting",level:2},{value:"Route",id:"route",level:2},{value:"SaveFile",id:"savefile",level:2},{value:"SaveFileToStorage",id:"savefiletostorage",level:2},{value:"Secure",id:"secure",level:2},{value:"Send",id:"send",level:2},{value:"SendFile",id:"sendfile",level:2},{value:"SendStatus",id:"sendstatus",level:2},{value:"Set",id:"set",level:2},{value:"SetParserDecoder",id:"setparserdecoder",level:2},{value:"SetUserContext",id:"setusercontext",level:2},{value:"Stale",id:"stale",level:2},{value:"Status",id:"status",level:2},{value:"Subdomains",id:"subdomains",level:2},{value:"Type",id:"type",level:2},{value:"UserContext",id:"usercontext",level:2},{value:"Vary",id:"vary",level:2},{value:"Write",id:"write",level:2},{value:"Writef",id:"writef",level:2},{value:"WriteString",id:"writestring",level:2},{value:"XHR",id:"xhr",level:2},{value:"XML",id:"xml",level:2}];function d(e){let n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"accepts",children:"Accepts"}),"\n",(0,s.jsxs)(n.p,{children:["Checks, if the specified ",(0,s.jsx)(n.strong,{children:"extensions"})," or ",(0,s.jsx)(n.strong,{children:"content"})," ",(0,s.jsx)(n.strong,{children:"types"})," are acceptable."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Based on the request\u2019s ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept",children:"Accept"})," HTTP header."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Accepts(offers ...string)          string\nfunc (c *Ctx) AcceptsCharsets(offers ...string)  string\nfunc (c *Ctx) AcceptsEncodings(offers ...string) string\nfunc (c *Ctx) AcceptsLanguages(offers ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Accept: text/html, application/json; q=0.8, text/plain; q=0.5; charset="utf-8"\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.Accepts("html")             // "html"\n  c.Accepts("text/html")        // "text/html"\n  c.Accepts("json", "text")     // "json"\n  c.Accepts("application/json") // "application/json"\n  c.Accepts("text/plain", "application/json") // "application/json", due to quality\n  c.Accepts("image/png")        // ""\n  c.Accepts("png")              // ""\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example 2"',children:'// Accept: text/html, text/*, application/json, */*; q=0\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.Accepts("text/plain", "application/json") // "application/json", due to specificity\n  c.Accepts("application/json", "text/html") // "text/html", due to first match\n  c.Accepts("image/png")        // "", due to */* without q factor 0 is Not Acceptable\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.p,{children:"Media-Type parameters are supported."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example 3"',children:'// Accept: text/plain, application/json; version=1; foo=bar\n\napp.Get("/", func(c *fiber.Ctx) error {\n  // Extra parameters in the accept are ignored\n  c.Accepts("text/plain;format=flowed") // "text/plain;format=flowed"\n\n  // An offer must contain all parameters present in the Accept type\n  c.Accepts("application/json") // ""\n\n  // Parameter order and capitalization does not matter. Quotes on values are stripped.\n  c.Accepts(`application/json;foo="bar";VERSION=1`) // "application/json;foo="bar";VERSION=1"\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example 4"',children:'// Accept: text/plain;format=flowed;q=0.9, text/plain\n// i.e., "I prefer text/plain;format=flowed less than other forms of text/plain"\napp.Get("/", func(c *fiber.Ctx) error {\n  // Beware: the order in which offers are listed matters.\n  // Although the client specified they prefer not to receive format=flowed,\n  // the text/plain Accept matches with "text/plain;format=flowed" first, so it is returned.\n  c.Accepts("text/plain;format=flowed", "text/plain") // "text/plain;format=flowed"\n\n  // Here, things behave as expected:\n  c.Accepts("text/plain", "text/plain;format=flowed") // "text/plain"\n})\n'})}),"\n",(0,s.jsx)(n.p,{children:"Fiber provides similar functions for the other accept headers."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Accept-Charset: utf-8, iso-8859-1;q=0.2\n// Accept-Encoding: gzip, compress;q=0.2\n// Accept-Language: en;q=0.8, nl, ru\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.AcceptsCharsets("utf-16", "iso-8859-1")\n  // "iso-8859-1"\n\n  c.AcceptsEncodings("compress", "br")\n  // "compress"\n\n  c.AcceptsLanguages("pt", "nl", "ru")\n  // "nl"\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"allparams",children:"AllParams"}),"\n",(0,s.jsx)(n.p,{children:"Params is used to get all route parameters.\nUsing Params method to get params."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) AllParams() map[string]string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/user/fenny\napp.Get("/user/:name", func(c *fiber.Ctx) error {\n  c.AllParams() // "{"name": "fenny"}"\n\n  // ...\n})\n\n// GET http://example.com/user/fenny/123\napp.Get("/user/*", func(c *fiber.Ctx) error {\n  c.AllParams()  // "{"*1": "fenny/123"}"\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"app",children:"App"}),"\n",(0,s.jsxs)(n.p,{children:["Returns the ",(0,s.jsx)(n.a,{href:"/api/ctx",children:"*App"})," reference so you could easily access all application settings."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) App() *App\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/stack", func(c *fiber.Ctx) error {\n  return c.JSON(c.App().Stack())\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"append",children:"Append"}),"\n",(0,s.jsxs)(n.p,{children:["Appends the specified ",(0,s.jsx)(n.strong,{children:"value"})," to the HTTP response header field."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["If the header is ",(0,s.jsx)(n.strong,{children:"not"})," already set, it creates the header with the specified value."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Append(field string, values ...string)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Append("Link", "http://google.com", "http://localhost")\n  // => Link: http://localhost, http://google.com\n\n  c.Append("Link", "Test")\n  // => Link: http://localhost, http://google.com, Test\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"attachment",children:"Attachment"}),"\n",(0,s.jsxs)(n.p,{children:["Sets the HTTP response ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition",children:"Content-Disposition"})," header field to ",(0,s.jsx)(n.code,{children:"attachment"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Attachment(filename ...string)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Attachment()\n  // => Content-Disposition: attachment\n\n  c.Attachment("./upload/images/logo.png")\n  // => Content-Disposition: attachment; filename="logo.png"\n  // => Content-Type: image/png\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"baseurl",children:"BaseURL"}),"\n",(0,s.jsxs)(n.p,{children:["Returns the base URL (",(0,s.jsx)(n.strong,{children:"protocol"})," + ",(0,s.jsx)(n.strong,{children:"host"}),") as a ",(0,s.jsx)(n.code,{children:"string"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) BaseURL() string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET https://example.com/page#chapter-1\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.BaseURL() // https://example.com\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"bind",children:"Bind"}),"\n",(0,s.jsx)(n.p,{children:"Add vars to default view var map binding to template engine.\nVariables are read by the Render method and may be overwritten."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Bind(vars Map) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Use(func(c *fiber.Ctx) error {\n  c.Bind(fiber.Map{\n    "Title": "Hello, World!",\n  })\n})\n\napp.Get("/", func(c *fiber.Ctx) error {\n  return c.Render("xxx.tmpl", fiber.Map{}) // Render will use Title variable\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"bodyraw",children:"BodyRaw"}),"\n",(0,s.jsxs)(n.p,{children:["Returns the raw request ",(0,s.jsx)(n.strong,{children:"body"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) BodyRaw() []byte\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// curl -X POST http://localhost:8080 -d user=john\n\napp.Post("/", func(c *fiber.Ctx) error {\n  // Get raw body from POST request:\n  return c.Send(c.BodyRaw()) // []byte("user=john")\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"body",children:"Body"}),"\n",(0,s.jsxs)(n.p,{children:["As per the header ",(0,s.jsx)(n.code,{children:"Content-Encoding"}),", this method will try to perform a file decompression from the ",(0,s.jsx)(n.strong,{children:"body"})," bytes. In case no ",(0,s.jsx)(n.code,{children:"Content-Encoding"})," header is sent, it will perform as ",(0,s.jsx)(n.a,{href:"#bodyraw",children:"BodyRaw"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Body() []byte\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// echo \'user=john\' | gzip | curl -v -i --data-binary @- -H "Content-Encoding: gzip" http://localhost:8080\n\napp.Post("/", func(c *fiber.Ctx) error {\n  // Decompress body from POST request based on the Content-Encoding and return the raw content:\n  return c.Send(c.Body()) // []byte("user=john")\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"bodyparser",children:"BodyParser"}),"\n",(0,s.jsx)(n.p,{children:"Binds the request body to a struct."}),"\n",(0,s.jsxs)(n.p,{children:["It is important to specify the correct struct tag based on the content type to be parsed. For example, if you want to parse a JSON body with a field called Pass, you would use a struct field of ",(0,s.jsx)(n.code,{children:'json:"pass"'}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"content-type"}),(0,s.jsx)(n.th,{children:"struct tag"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"application/x-www-form-urlencoded"})}),(0,s.jsx)(n.td,{children:"form"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"multipart/form-data"})}),(0,s.jsx)(n.td,{children:"form"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"application/json"})}),(0,s.jsx)(n.td,{children:"json"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"application/xml"})}),(0,s.jsx)(n.td,{children:"xml"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"text/xml"})}),(0,s.jsx)(n.td,{children:"xml"})]})]})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["When handling ",(0,s.jsx)(n.code,{children:"multipart/form-data"}),", only the form values can be directly assigned to the struct fields. Files included in the request are not automatically assigned to the struct. You must handle files separately using ",(0,s.jsx)(n.a,{href:"#formfile",children:(0,s.jsx)(n.code,{children:"FormFile"})})," or other file-specific methods."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) BodyParser(out interface{}) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Field names should start with an uppercase letter\ntype Person struct {\n    Name string `json:"name" xml:"name" form:"name"`\n    Pass string `json:"pass" xml:"pass" form:"pass"`\n}\n\napp.Post("/", func(c *fiber.Ctx) error {\n        p := new(Person)\n\n        if err := c.BodyParser(p); err != nil {\n            return err\n        }\n\n        log.Println(p.Name) // john\n        log.Println(p.Pass) // doe\n\n        // ...\n})\n\n// Run tests with the following curl commands\n\n// curl -X POST -H "Content-Type: application/json" --data "{\\"name\\":\\"john\\",\\"pass\\":\\"doe\\"}" localhost:3000\n\n// curl -X POST -H "Content-Type: application/xml" --data "<login><name>john</name><pass>doe</pass></login>" localhost:3000\n\n// curl -X POST -H "Content-Type: application/x-www-form-urlencoded" --data "name=john&pass=doe" localhost:3000\n\n// curl -X POST -F name=john -F pass=doe http://localhost:3000\n\n// curl -X POST "http://localhost:3000/?name=john&pass=doe"\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"clearcookie",children:"ClearCookie"}),"\n",(0,s.jsxs)(n.p,{children:["Expire a client cookie (",(0,s.jsx)(n.em,{children:"or all cookies if left empty)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) ClearCookie(key ...string)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  // Clears all cookies:\n  c.ClearCookie()\n\n  // Expire specific cookie by name:\n  c.ClearCookie("user")\n\n  // Expire multiple cookies by names:\n  c.ClearCookie("token", "session", "track_id", "version")\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Web browsers and other compliant clients will only clear the cookie if the given options are identical to those when creating the cookie, excluding expires and maxAge. ClearCookie will not set these values for you - a technique similar to the one shown below should be used to ensure your cookie is deleted."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/set", func(c *fiber.Ctx) error {\n    c.Cookie(&fiber.Cookie{\n        Name:     "token",\n        Value:    "randomvalue",\n        Expires:  time.Now().Add(24 * time.Hour),\n        HTTPOnly: true,\n        SameSite: "lax",\n    })\n\n    // ...\n})\n\napp.Get("/delete", func(c *fiber.Ctx) error {\n    c.Cookie(&fiber.Cookie{\n        Name:     "token",\n        // Set expiry date to the past\n        Expires:  time.Now().Add(-(time.Hour * 2)),\n        HTTPOnly: true,\n        SameSite: "lax",\n    })\n\n    // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"clienthelloinfo",children:"ClientHelloInfo"}),"\n",(0,s.jsxs)(n.p,{children:["ClientHelloInfo contains information from a ClientHello message in order to guide application logic in the GetCertificate and GetConfigForClient callbacks.\nYou can refer to the ",(0,s.jsx)(n.a,{href:"https://golang.org/pkg/crypto/tls/#ClientHelloInfo",children:"ClientHelloInfo"})," struct documentation for more information on the returned struct."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) ClientHelloInfo() *tls.ClientHelloInfo\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/hello\napp.Get("/hello", func(c *fiber.Ctx) error {\n  chi := c.ClientHelloInfo()\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,s.jsxs)(n.p,{children:["Returns ",(0,s.jsx)(n.a,{href:"https://godoc.org/github.com/valyala/fasthttp#RequestCtx",children:"*fasthttp.RequestCtx"})," that is compatible with the context.Context interface that requires a deadline, a cancellation signal, and other values across API boundaries."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Context() *fasthttp.RequestCtx\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Please read the ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/github.com/valyala/fasthttp?tab=doc",children:"Fasthttp Documentation"})," for more information."]})}),"\n",(0,s.jsx)(n.h2,{id:"cookie",children:"Cookie"}),"\n",(0,s.jsx)(n.p,{children:"Set cookie"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Cookie(cookie *Cookie)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'type Cookie struct {\n    Name        string    `json:"name"`\n    Value       string    `json:"value"`\n    Path        string    `json:"path"`\n    Domain      string    `json:"domain"`\n    MaxAge      int       `json:"max_age"`\n    Expires     time.Time `json:"expires"`\n    Secure      bool      `json:"secure"`\n    HTTPOnly    bool      `json:"http_only"`\n    SameSite    string    `json:"same_site"`\n    SessionOnly bool      `json:"session_only"`\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  // Create cookie\n  cookie := new(fiber.Cookie)\n  cookie.Name = "john"\n  cookie.Value = "doe"\n  cookie.Expires = time.Now().Add(24 * time.Hour)\n\n  // Set cookie\n  c.Cookie(cookie)\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"cookieparser",children:"CookieParser"}),"\n",(0,s.jsxs)(n.p,{children:["This method is similar to ",(0,s.jsx)(n.a,{href:"/api/ctx#bodyparser",children:"BodyParser"}),', but for cookie parameters.\nIt is important to use the struct tag "cookie". For example, if you want to parse a cookie with a field called Age, you would use a struct field of ',(0,s.jsx)(n.code,{children:'cookie:"age"'}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) CookieParser(out interface{}) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Field names should start with an uppercase letter\ntype Person struct {\n    Name     string  `cookie:"name"`\n    Age      int     `cookie:"age"`\n    Job      bool    `cookie:"job"`\n}\n\napp.Get("/", func(c *fiber.Ctx) error {\n        p := new(Person)\n\n        if err := c.CookieParser(p); err != nil {\n            return err\n        }\n\n        log.Println(p.Name)     // Joseph\n        log.Println(p.Age)      // 23\n        log.Println(p.Job)      // true\n})\n// Run tests with the following curl command\n// curl.exe --cookie "name=Joseph; age=23; job=true" http://localhost:8000/\n'})}),"\n",(0,s.jsx)(n.h2,{id:"cookies",children:"Cookies"}),"\n",(0,s.jsx)(n.p,{children:"Get cookie value by key, you could pass an optional default value that will be returned if the cookie key does not exist."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Cookies(key string, defaultValue ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  // Get cookie by key:\n  c.Cookies("name")         // "john"\n  c.Cookies("empty", "doe") // "doe"\n  // ...\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"download",children:"Download"}),"\n",(0,s.jsxs)(n.p,{children:["Transfers the file from path as an ",(0,s.jsx)(n.code,{children:"attachment"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Typically, browsers will prompt the user to download. By default, the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition",children:"Content-Disposition"})," header ",(0,s.jsx)(n.code,{children:"filename="})," parameter is the file path (",(0,s.jsx)(n.em,{children:"this typically appears in the browser dialog"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["Override this default with the ",(0,s.jsx)(n.strong,{children:"filename"})," parameter."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Download(file string, filename ...string) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  return c.Download("./files/report-12345.pdf");\n  // => Download report-12345.pdf\n\n  return c.Download("./files/report-12345.pdf", "report.pdf");\n  // => Download report.pdf\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,s.jsxs)(n.p,{children:["Performs content-negotiation on the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept",children:"Accept"})," HTTP header. It uses ",(0,s.jsx)(n.a,{href:"/api/ctx#accepts",children:"Accepts"})," to select a proper format."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If the header is ",(0,s.jsx)(n.strong,{children:"not"})," specified or there is ",(0,s.jsx)(n.strong,{children:"no"})," proper format, ",(0,s.jsx)(n.strong,{children:"text/plain"})," is used."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Format(body interface{}) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  // Accept: text/plain\n  c.Format("Hello, World!")\n  // => Hello, World!\n\n  // Accept: text/html\n  c.Format("Hello, World!")\n  // => <p>Hello, World!</p>\n\n  // Accept: application/json\n  c.Format("Hello, World!")\n  // => "Hello, World!"\n  // ..\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"formfile",children:"FormFile"}),"\n",(0,s.jsxs)(n.p,{children:["MultipartForm files can be retrieved by name, the ",(0,s.jsx)(n.strong,{children:"first"})," file from the given key is returned."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) FormFile(key string) (*multipart.FileHeader, error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Post("/", func(c *fiber.Ctx) error {\n  // Get first file from form field "document":\n  file, err := c.FormFile("document")\n\n  // Save file to root directory:\n  return c.SaveFile(file, fmt.Sprintf("./%s", file.Filename))\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"formvalue",children:"FormValue"}),"\n",(0,s.jsxs)(n.p,{children:["Any form values can be retrieved by name, the ",(0,s.jsx)(n.strong,{children:"first"})," value from the given key is returned."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) FormValue(key string, defaultValue ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Post("/", func(c *fiber.Ctx) error {\n  // Get first value from form field "name":\n  c.FormValue("name")\n  // => "john" or "" if not exist\n\n  // ..\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"fresh",children:"Fresh"}),"\n",(0,s.jsxs)(n.p,{children:["When the response is still ",(0,s.jsx)(n.strong,{children:"fresh"})," in the client's cache ",(0,s.jsx)(n.strong,{children:"true"})," is returned, otherwise ",(0,s.jsx)(n.strong,{children:"false"})," is returned to indicate that the client cache is now stale and the full response should be sent."]}),"\n",(0,s.jsxs)(n.p,{children:["When a client sends the Cache-Control: no-cache request header to indicate an end-to-end reload request, ",(0,s.jsx)(n.code,{children:"Fresh"})," will return false to make handling these requests transparent."]}),"\n",(0,s.jsxs)(n.p,{children:["Read more on ",(0,s.jsx)(n.a,{href:"https://expressjs.com/en/4x/api.html#req.fresh",children:"https://expressjs.com/en/4x/api.html#req.fresh"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Fresh() bool\n"})}),"\n",(0,s.jsx)(n.h2,{id:"get",children:"Get"}),"\n",(0,s.jsx)(n.p,{children:"Returns the HTTP request header specified by the field."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["The match is ",(0,s.jsx)(n.strong,{children:"case-insensitive"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Get(key string, defaultValue ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Get("Content-Type")       // "text/plain"\n  c.Get("CoNtEnT-TypE")       // "text/plain"\n  c.Get("something", "john")  // "john"\n  // ..\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getreqheaders",children:"GetReqHeaders"}),"\n",(0,s.jsx)(n.p,{children:"Returns the HTTP request headers as a map. Since a header can be set multiple times in a single request, the values of the map are slices of strings containing all the different values of the header."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) GetReqHeaders() map[string][]string\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getrespheader",children:"GetRespHeader"}),"\n",(0,s.jsx)(n.p,{children:"Returns the HTTP response header specified by the field."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["The match is ",(0,s.jsx)(n.strong,{children:"case-insensitive"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) GetRespHeader(key string, defaultValue ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.GetRespHeader("X-Request-Id")       // "8d7ad5e3-aaf3-450b-a241-2beb887efd54"\n  c.GetRespHeader("Content-Type")       // "text/plain"\n  c.GetRespHeader("something", "john")  // "john"\n  // ..\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getrespheaders",children:"GetRespHeaders"}),"\n",(0,s.jsx)(n.p,{children:"Returns the HTTP response headers as a map. Since a header can be set multiple times in a single request, the values of the map are slices of strings containing all the different values of the header."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) GetRespHeaders() map[string][]string\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getrouteurl",children:"GetRouteURL"}),"\n",(0,s.jsx)(n.p,{children:'Generates URLs to named routes, with parameters. URLs are relative, for example: "/user/1831"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) GetRouteURL(routeName string, params Map) (string, error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n    return c.SendString("Home page")\n}).Name("home")\n\napp.Get("/user/:id", func(c *fiber.Ctx) error {\n    return c.SendString(c.Params("id"))\n}).Name("user.show")\n\napp.Get("/test", func(c *fiber.Ctx) error {\n    location, _ := c.GetRouteURL("user.show", fiber.Map{"id": 1})\n    return c.SendString(location)\n})\n\n// /test returns "/user/1"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"hostname",children:"Hostname"}),"\n",(0,s.jsxs)(n.p,{children:["Returns the hostname derived from the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host",children:"Host"})," HTTP header."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Hostname() string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://google.com/search\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.Hostname() // "google.com"\n\n  // ...\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"ip",children:"IP"}),"\n",(0,s.jsx)(n.p,{children:"Returns the remote IP address of the request."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) IP() string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.IP() // "127.0.0.1"\n\n  // ...\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When registering the proxy request header in the fiber app, the ip address of the header is returned ",(0,s.jsx)(n.a,{href:"/api/fiber#config",children:"(Fiber configuration)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"app := fiber.New(fiber.Config{\n  ProxyHeader: fiber.HeaderXForwardedFor,\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"ips",children:"IPs"}),"\n",(0,s.jsxs)(n.p,{children:["Returns an array of IP addresses specified in the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For",children:"X-Forwarded-For"})," request header."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) IPs() []string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// X-Forwarded-For: proxy1, 127.0.0.1, proxy3\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.IPs() // ["proxy1", "127.0.0.1", "proxy3"]\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Improper use of the X-Forwarded-For header can be a security risk. For details, see the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#security_and_privacy_concerns",children:"Security and privacy concerns"})," section."]})}),"\n",(0,s.jsx)(n.h2,{id:"is",children:"Is"}),"\n",(0,s.jsxs)(n.p,{children:["Returns the matching ",(0,s.jsx)(n.strong,{children:"content type"}),", if the incoming request\u2019s ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type",children:"Content-Type"})," HTTP header field matches the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/ru/docs/Web/HTTP/Basics_of_HTTP/MIME_types",children:"MIME type"})," specified by the type parameter."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If the request has ",(0,s.jsx)(n.strong,{children:"no"})," body, it returns ",(0,s.jsx)(n.strong,{children:"false"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Is(extension string) bool\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Content-Type: text/html; charset=utf-8\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.Is("html")  // true\n  c.Is(".html") // true\n  c.Is("json")  // false\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"isfromlocal",children:"IsFromLocal"}),"\n",(0,s.jsx)(n.p,{children:"Returns true if request came from localhost"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) IsFromLocal() bool {\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'\napp.Get("/", func(c *fiber.Ctx) error {\n  // If request came from localhost, return true else return false\n  c.IsFromLocal()\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"json",children:"JSON"}),"\n",(0,s.jsxs)(n.p,{children:["Converts any ",(0,s.jsx)(n.strong,{children:"interface"})," or ",(0,s.jsx)(n.strong,{children:"string"})," to JSON using the ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/encoding/json",children:"encoding/json"})," package."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["JSON also sets the content header to the ",(0,s.jsx)(n.code,{children:"ctype"})," parameter. If no ",(0,s.jsx)(n.code,{children:"ctype"})," is passed in, the header is set to ",(0,s.jsx)(n.code,{children:"application/json"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) JSON(data interface{}, ctype ...string) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'type SomeStruct struct {\n  Name string\n  Age  uint8\n}\n\napp.Get("/json", func(c *fiber.Ctx) error {\n  // Create data struct:\n  data := SomeStruct{\n    Name: "Grame",\n    Age:  20,\n  }\n\n  return c.JSON(data)\n  // => Content-Type: application/json\n  // => "{"Name": "Grame", "Age": 20}"\n\n  return c.JSON(fiber.Map{\n    "name": "Grame",\n    "age": 20,\n  })\n  // => Content-Type: application/json\n  // => "{"name": "Grame", "age": 20}"\n\n  return c.JSON(fiber.Map{\n    "type": "https://example.com/probs/out-of-credit",\n    "title": "You do not have enough credit.",\n    "status": 403,\n    "detail": "Your current balance is 30, but that costs 50.",\n    "instance": "/account/12345/msgs/abc",\n  }, "application/problem+json")\n  // => Content-Type: application/problem+json\n  // => "{\n  // =>     "type": "https://example.com/probs/out-of-credit",\n  // =>     "title": "You do not have enough credit.",\n  // =>     "status": 403,\n  // =>     "detail": "Your current balance is 30, but that costs 50.",\n  // =>     "instance": "/account/12345/msgs/abc",\n  // => }"\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"jsonp",children:"JSONP"}),"\n",(0,s.jsxs)(n.p,{children:["Sends a JSON response with JSONP support. This method is identical to ",(0,s.jsx)(n.a,{href:"/api/ctx#json",children:"JSON"}),", except that it opts-in to JSONP callback support. By default, the callback name is simply callback."]}),"\n",(0,s.jsxs)(n.p,{children:["Override this by passing a ",(0,s.jsx)(n.strong,{children:"named string"})," in the method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) JSONP(data interface{}, callback ...string) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'type SomeStruct struct {\n  name string\n  age  uint8\n}\n\napp.Get("/", func(c *fiber.Ctx) error {\n  // Create data struct:\n  data := SomeStruct{\n    name: "Grame",\n    age:  20,\n  }\n\n  return c.JSONP(data)\n  // => callback({"name": "Grame", "age": 20})\n\n  return c.JSONP(data, "customFunc")\n  // => customFunc({"name": "Grame", "age": 20})\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(n.p,{children:["Joins the links followed by the property to populate the response\u2019s ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link",children:"Link"})," HTTP header field."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Links(link ...string)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Links(\n    "http://api.example.com/users?page=2", "next",\n    "http://api.example.com/users?page=5", "last",\n  )\n  // Link: <http://api.example.com/users?page=2>; rel="next",\n  //       <http://api.example.com/users?page=5>; rel="last"\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"locals",children:"Locals"}),"\n",(0,s.jsxs)(n.p,{children:["A method that stores variables scoped to the request and, therefore, are available only to the routes that match the request. The stored variables are removed after the request is handled. If any of the stored data implements the ",(0,s.jsx)(n.code,{children:"io.Closer"})," interface, its ",(0,s.jsx)(n.code,{children:"Close"})," method will be called before it's removed."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["This is useful if you want to pass some ",(0,s.jsx)(n.strong,{children:"specific"})," data to the next middleware. Remember to perform type assertions when retrieving the data to ensure it is of the expected type. You can also use a non-exported type as a key to avoid collisions."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Locals(key interface{}, value ...interface{}) interface{}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'type keyType struct{}\nvar userKey keyType\n\napp.Use(func(c *fiber.Ctx) error {\n  c.Locals(userKey, "admin") // Stores the string "admin" under a non-exported type key\n  return c.Next()\n})\n\napp.Get("/admin", func(c *fiber.Ctx) error {\n  user, ok := c.Locals(userKey).(string) // Retrieves the data stored under the key and performs a type assertion\n  if ok && user == "admin" {\n    return c.Status(fiber.StatusOK).SendString("Welcome, admin!")\n  }\n  return c.SendStatus(fiber.StatusForbidden)\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"location",children:"Location"}),"\n",(0,s.jsxs)(n.p,{children:["Sets the response ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Location",children:"Location"})," HTTP header to the specified path parameter."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Location(path string)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Post("/", func(c *fiber.Ctx) error {\n  c.Location("http://example.com")\n\n  c.Location("/foo/bar")\n\n  return nil\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"method",children:"Method"}),"\n",(0,s.jsxs)(n.p,{children:["Returns a string corresponding to the HTTP method of the request: ",(0,s.jsx)(n.code,{children:"GET"}),", ",(0,s.jsx)(n.code,{children:"POST"}),", ",(0,s.jsx)(n.code,{children:"PUT"}),", and so on.\nOptionally, you could override the method by passing a string."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Method(override ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Post("/", func(c *fiber.Ctx) error {\n  c.Method() // "POST"\n\n  c.Method("GET")\n  c.Method() // GET\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"multipartform",children:"MultipartForm"}),"\n",(0,s.jsxs)(n.p,{children:["To access multipart form entries, you can parse the binary with ",(0,s.jsx)(n.code,{children:"MultipartForm()"}),". This returns a ",(0,s.jsx)(n.code,{children:"map[string][]string"}),", so given a key, the value will be a string slice."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) MultipartForm() (*multipart.Form, error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Post("/", func(c *fiber.Ctx) error {\n  // Parse the multipart form:\n  if form, err := c.MultipartForm(); err == nil {\n    // => *multipart.Form\n\n    if token := form.Value["token"]; len(token) > 0 {\n      // Get key value:\n      fmt.Println(token[0])\n    }\n\n    // Get all files from "documents" key:\n    files := form.File["documents"]\n    // => []*multipart.FileHeader\n\n    // Loop through files:\n    for _, file := range files {\n      fmt.Println(file.Filename, file.Size, file.Header["Content-Type"][0])\n      // => "tutorial.pdf" 360641 "application/pdf"\n\n      // Save the files to disk:\n      if err := c.SaveFile(file, fmt.Sprintf("./%s", file.Filename)); err != nil {\n        return err\n      }\n    }\n  }\n\n  return err\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"next",children:"Next"}),"\n",(0,s.jsxs)(n.p,{children:["When ",(0,s.jsx)(n.strong,{children:"Next"})," is called, it executes the next method in the stack that matches the current route. You can pass an error struct within the method that will end the chaining and call the ",(0,s.jsx)(n.a,{href:"https://docs.gofiber.io/guide/error-handling",children:"error handler"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Next() error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  fmt.Println("1st route!")\n  return c.Next()\n})\n\napp.Get("*", func(c *fiber.Ctx) error {\n  fmt.Println("2nd route!")\n  return c.Next()\n})\n\napp.Get("/", func(c *fiber.Ctx) error {\n  fmt.Println("3rd route!")\n  return c.SendString("Hello, World!")\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"originalurl",children:"OriginalURL"}),"\n",(0,s.jsx)(n.p,{children:"Returns the original request URL."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) OriginalURL() string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/search?q=something\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.OriginalURL() // "/search?q=something"\n\n  // ...\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"params",children:"Params"}),"\n",(0,s.jsx)(n.p,{children:"Method can be used to get the route parameters, you could pass an optional default value that will be returned if the param key does not exist."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Defaults to empty string (",(0,s.jsx)(n.code,{children:'""'}),"), if the param ",(0,s.jsx)(n.strong,{children:"doesn't"})," exist."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Params(key string, defaultValue ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/user/fenny\napp.Get("/user/:name", func(c *fiber.Ctx) error {\n  c.Params("name") // "fenny"\n\n  // ...\n})\n\n// GET http://example.com/user/fenny/123\napp.Get("/user/*", func(c *fiber.Ctx) error {\n  c.Params("*")  // "fenny/123"\n  c.Params("*1") // "fenny/123"\n\n  // ...\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Unnamed route parameters(*, +) can be fetched by the ",(0,s.jsx)(n.strong,{children:"character"})," and the ",(0,s.jsx)(n.strong,{children:"counter"})," in the route."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// ROUTE: /v1/*/shop/*\n// GET:   /v1/brand/4/shop/blue/xs\nc.Params("*1")  // "brand/4"\nc.Params("*2")  // "blue/xs"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For reasons of ",(0,s.jsx)(n.strong,{children:"downward compatibility"}),", the first parameter segment for the parameter character can also be accessed without the counter."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/v1/*/shop/*", func(c *fiber.Ctx) error {\n  c.Params("*") // outputs the values of the first wildcard segment\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"paramsint",children:"ParamsInt"}),"\n",(0,s.jsx)(n.p,{children:"Method can be used to get an integer from the route parameters.\nPlease note if that parameter is not in the request, zero\nwill be returned. If the parameter is NOT a number, zero and an error\nwill be returned"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Defaults to the integer zero (",(0,s.jsx)(n.code,{children:"0"}),"), if the param ",(0,s.jsx)(n.strong,{children:"doesn't"})," exist."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) ParamsInt(key string) (int, error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/user/123\napp.Get("/user/:id", func(c *fiber.Ctx) error {\n  id, err := c.ParamsInt("id") // int 123 and no error\n\n  // ...\n})\n\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This method is equivalent of using ",(0,s.jsx)(n.code,{children:"atoi"})," with ctx.Params"]}),"\n",(0,s.jsx)(n.h2,{id:"paramsparser",children:"ParamsParser"}),"\n",(0,s.jsx)(n.p,{children:'This method is similar to BodyParser, but for path parameters. It is important to use the struct tag "params". For example, if you want to parse a path parameter with a field called Pass, you would use a struct field of params:"pass"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) ParamsParser(out interface{}) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/user/111\napp.Get("/user/:id", func(c *fiber.Ctx) error {\n  param := struct {ID uint `params:"id"`}{}\n\n  c.ParamsParser(&param) // "{"id": 111}"\n\n  // ...\n})\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"path",children:"Path"}),"\n",(0,s.jsxs)(n.p,{children:["Contains the path part of the request URL. Optionally, you could override the path by passing a string. For internal redirects, you might want to call ",(0,s.jsx)(n.a,{href:"/api/ctx#restartrouting",children:"RestartRouting"})," instead of ",(0,s.jsx)(n.a,{href:"/api/ctx#next",children:"Next"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Path(override ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/users?sort=desc\n\napp.Get("/users", func(c *fiber.Ctx) error {\n  c.Path() // "/users"\n\n  c.Path("/john")\n  c.Path() // "/john"\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"protocol",children:"Protocol"}),"\n",(0,s.jsxs)(n.p,{children:["Contains the request protocol string: ",(0,s.jsx)(n.code,{children:"http"})," or ",(0,s.jsx)(n.code,{children:"https"})," for ",(0,s.jsx)(n.strong,{children:"TLS"})," requests."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Protocol() string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.Protocol() // "http"\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"queries",children:"Queries"}),"\n",(0,s.jsx)(n.p,{children:"Queries is a function that returns an object containing a property for each query string parameter in the route."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Queries() map[string]string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/?name=alex&want_pizza=false&id=\n\napp.Get("/", func(c *fiber.Ctx) error {\n	m := c.Queries()\n	m["name"] // "alex"\n	m["want_pizza"] // "false"\n	m["id"] // ""\n	// ...\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/?field1=value1&field1=value2&field2=value3\n\napp.Get("/", func (c *fiber.Ctx) error {\n	m := c.Queries()\n	m["field1"] // "value2"\n	m["field2"] // value3\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/?list_a=1&list_a=2&list_a=3&list_b[]=1&list_b[]=2&list_b[]=3&list_c=1,2,3\n\napp.Get("/", func(c *fiber.Ctx) error {\n	m := c.Queries()\n	m["list_a"] // "3"\n	m["list_b[]"] // "3"\n	m["list_c"] // "1,2,3"\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET /api/posts?filters.author.name=John&filters.category.name=Technology\n\napp.Get("/", func(c *fiber.Ctx) error {\n	m := c.Queries()\n	m["filters.author.name"] // John\n	m["filters.category.name"] // Technology\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET /api/posts?tags=apple,orange,banana&filters[tags]=apple,orange,banana&filters[category][name]=fruits&filters.tags=apple,orange,banana&filters.category.name=fruits\n\napp.Get("/", func(c *fiber.Ctx) error {\n	m := c.Queries()\n	m["tags"] // apple,orange,banana\n	m["filters[tags]"] // apple,orange,banana\n	m["filters[category][name]"] // fruits\n	m["filters.tags"] // apple,orange,banana\n	m["filters.category.name"] // fruits\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"query",children:"Query"}),"\n",(0,s.jsx)(n.p,{children:"This property is an object containing a property for each query string parameter in the route, you could pass an optional default value that will be returned if the query key does not exist."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If there is ",(0,s.jsx)(n.strong,{children:"no"})," query string, it returns an ",(0,s.jsx)(n.strong,{children:"empty string"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Query(key string, defaultValue ...string) string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/?order=desc&brand=nike\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.Query("order")         // "desc"\n  c.Query("brand")         // "nike"\n  c.Query("empty", "nike") // "nike"\n\n  // ...\n})\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Returned value is only valid within the handler. Do not store any references.\nMake copies or use the"})," ",(0,s.jsx)(n.a,{href:"/api/ctx",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Immutable"})})})})," ",(0,s.jsx)(n.em,{children:"setting instead."})," ",(0,s.jsx)(n.a,{href:"../#zero-allocation",children:(0,s.jsx)(n.em,{children:"Read more..."})})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"querybool",children:"QueryBool"}),"\n",(0,s.jsx)(n.p,{children:"This property is an object containing a property for each query boolean parameter in the route, you could pass an optional default value that will be returned if the query key does not exist."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Please note if that parameter is not in the request, false will be returned.\nIf the parameter is not a boolean, it is still tried to be converted and usually returned as false."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) QueryBool(key string, defaultValue ...bool) bool\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/?name=alex&want_pizza=false&id=\n\napp.Get("/", func(c *fiber.Ctx) error {\n    c.QueryBool("want_pizza")           // false\n	c.QueryBool("want_pizza", true) // false\n    c.QueryBool("name")                 // false\n    c.QueryBool("name", true)           // true\n    c.QueryBool("id")                   // false\n    c.QueryBool("id", true)             // true\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"queryfloat",children:"QueryFloat"}),"\n",(0,s.jsx)(n.p,{children:"This property is an object containing a property for each query float64 parameter in the route, you could pass an optional default value that will be returned if the query key does not exist."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Please note if that parameter is not in the request, zero will be returned.\nIf the parameter is not a number, it is still tried to be converted and usually returned as 1."})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Defaults to the float64 zero (",(0,s.jsx)(n.code,{children:"0"}),"), if the param ",(0,s.jsx)(n.strong,{children:"doesn't"})," exist."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) QueryFloat(key string, defaultValue ...float64) float64\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/?name=alex&amount=32.23&id=\n\napp.Get("/", func(c *fiber.Ctx) error {\n    c.QueryFloat("amount")      // 32.23\n    c.QueryFloat("amount", 3)   // 32.23\n    c.QueryFloat("name", 1)     // 1\n    c.QueryFloat("name")        // 0\n    c.QueryFloat("id", 3)       // 3\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"queryint",children:"QueryInt"}),"\n",(0,s.jsx)(n.p,{children:"This property is an object containing a property for each query integer parameter in the route, you could pass an optional default value that will be returned if the query key does not exist."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Please note if that parameter is not in the request, zero will be returned.\nIf the parameter is not a number, it is still tried to be converted and usually returned as 1."})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Defaults to the integer zero (",(0,s.jsx)(n.code,{children:"0"}),"), if the param ",(0,s.jsx)(n.strong,{children:"doesn't"})," exist."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) QueryInt(key string, defaultValue ...int) int\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// GET http://example.com/?name=alex&wanna_cake=2&id=\n\napp.Get("/", func(c *fiber.Ctx) error {\n    c.QueryInt("wanna_cake", 1) // 2\n    c.QueryInt("name", 1)       // 1\n    c.QueryInt("id", 1)         // 1\n    c.QueryInt("id")            // 0\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"queryparser",children:"QueryParser"}),"\n",(0,s.jsxs)(n.p,{children:["This method is similar to ",(0,s.jsx)(n.a,{href:"/api/ctx#bodyparser",children:"BodyParser"}),', but for query parameters.\nIt is important to use the struct tag "query". For example, if you want to parse a query parameter with a field called Pass, you would use a struct field of ',(0,s.jsx)(n.code,{children:'query:"pass"'}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) QueryParser(out interface{}) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Field names should start with an uppercase letter\ntype Person struct {\n    Name     string     `query:"name"`\n    Pass     string     `query:"pass"`\n    Products []string   `query:"products"`\n}\n\napp.Get("/", func(c *fiber.Ctx) error {\n        p := new(Person)\n\n        if err := c.QueryParser(p); err != nil {\n            return err\n        }\n\n        log.Println(p.Name)        // john\n        log.Println(p.Pass)        // doe\n        // fiber.Config{EnableSplittingOnParsers: false} - default\n        log.Println(p.Products)    // ["shoe,hat"]\n        // fiber.Config{EnableSplittingOnParsers: true}\n        // log.Println(p.Products) // ["shoe", "hat"]\n\n\n        // ...\n})\n// Run tests with the following curl command\n\n// curl "http://localhost:3000/?name=john&pass=doe&products=shoe,hat"\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["For more parser settings please look here ",(0,s.jsx)(n.a,{href:"/api/fiber#config",children:"Config"})]})}),"\n",(0,s.jsx)(n.h2,{id:"range",children:"Range"}),"\n",(0,s.jsx)(n.p,{children:"A struct containing the type and a slice of ranges will be returned."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Range(size int) (Range, error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Range: bytes=500-700, 700-900\napp.Get("/", func(c *fiber.Ctx) error {\n  b := c.Range(1000)\n  if b.Type == "bytes" {\n      for r := range r.Ranges {\n      fmt.Println(r)\n      // [500, 700]\n    }\n  }\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"redirect",children:"Redirect"}),"\n",(0,s.jsx)(n.p,{children:"Redirects to the URL derived from the specified path, with specified status, a positive integer that corresponds to an HTTP status code."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.strong,{children:"not"})," specified, status defaults to ",(0,s.jsx)(n.strong,{children:"302 Found"}),"."]})}),"\n",(0,s.jsxs)(n.admonition,{type:"caution",children:[(0,s.jsxs)(n.p,{children:["When the redirect status code is ",(0,s.jsx)(n.strong,{children:"302 Found"}),", web browsers may change the HTTP method\n(for example, converting a POST into a GET) depending on the browser implementation. To ensure that the\noriginal HTTP method is preserved, especially in scenarios where a non-GET method is required, you\nshould explicitly use one of the following status codes:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"303 See Other"}),"\n",(0,s.jsx)(n.li,{children:"307 Temporary Redirect"}),"\n",(0,s.jsx)(n.li,{children:"308 Permanent Redirect"}),"\n"]}),(0,s.jsx)(n.p,{children:"For example, to preserve the HTTP method, use:"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:'c.Redirect("/new-path", fiber.StatusSeeOther)'})})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Redirect(location string, status ...int) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/coffee", func(c *fiber.Ctx) error {\n  return c.Redirect("/teapot")\n})\n\napp.Get("/teapot", func(c *fiber.Ctx) error {\n  return c.Status(fiber.StatusTeapot).Send("\u{1F375} short and stout \u{1F375}")\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="More examples"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  return c.Redirect("/foo/bar")\n  return c.Redirect("../login")\n  return c.Redirect("http://example.com")\n  return c.Redirect("http://example.com", 301)\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"redirecttoroute",children:"RedirectToRoute"}),"\n",(0,s.jsx)(n.p,{children:"Redirects to the specific route along with the parameters and with specified status, a positive integer that corresponds to an HTTP status code."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.strong,{children:"not"})," specified, status defaults to ",(0,s.jsx)(n.strong,{children:"302 Found"}),"."]})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If you want to send queries to route, you must add ",(0,s.jsx)(n.strong,{children:'"queries"'})," key typed as ",(0,s.jsx)(n.strong,{children:"map[string]string"})," to params."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) RedirectToRoute(routeName string, params fiber.Map, status ...int) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  // /user/fiber\n  return c.RedirectToRoute("user", fiber.Map{\n    "name": "fiber"\n  })\n})\n\napp.Get("/with-queries", func(c *fiber.Ctx) error {\n  // /user/fiber?data[0][name]=john&data[0][age]=10&test=doe\n  return c.RedirectToRoute("user", fiber.Map{\n    "name": "fiber",\n    "queries": map[string]string{"data[0][name]": "john", "data[0][age]": "10", "test": "doe"},\n  })\n})\n\napp.Get("/user/:name", func(c *fiber.Ctx) error {\n  return c.SendString(c.Params("name"))\n}).Name("user")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"redirectback",children:"RedirectBack"}),"\n",(0,s.jsx)(n.p,{children:"Redirects back to refer URL. It redirects to fallback URL if refer header doesn't exists, with specified status, a positive integer that corresponds to an HTTP status code."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.strong,{children:"not"})," specified, status defaults to ",(0,s.jsx)(n.strong,{children:"302 Found"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) RedirectBack(fallback string, status ...int) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  return c.SendString("Home page")\n})\napp.Get("/test", func(c *fiber.Ctx) error {\n  c.Set("Content-Type", "text/html")\n  return c.SendString(`<a href="/back">Back</a>`)\n})\n\napp.Get("/back", func(c *fiber.Ctx) error {\n  return c.RedirectBack("/")\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"render",children:"Render"}),"\n",(0,s.jsxs)(n.p,{children:["Renders a view with data and sends a ",(0,s.jsx)(n.code,{children:"text/html"})," response. By default ",(0,s.jsx)(n.code,{children:"Render"})," uses the default ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/html/template/",children:(0,s.jsx)(n.strong,{children:"Go Template engine"})}),". If you want to use another View engine, please take a look at our ",(0,s.jsx)(n.a,{href:"https://docs.gofiber.io/template",children:(0,s.jsx)(n.strong,{children:"Template middleware"})}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Render(name string, bind interface{}, layouts ...string) error\n"})}),"\n",(0,s.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,s.jsxs)(n.p,{children:["Request return the ",(0,s.jsx)(n.a,{href:"https://godoc.org/github.com/valyala/fasthttp#Request",children:"*fasthttp.Request"})," pointer"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Request() *fasthttp.Request\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Request().Header.Method()\n  // => []byte("GET")\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"reqheaderparser",children:"ReqHeaderParser"}),"\n",(0,s.jsxs)(n.p,{children:["This method is similar to ",(0,s.jsx)(n.a,{href:"/api/ctx#bodyparser",children:"BodyParser"}),', but for request headers.\nIt is important to use the struct tag "reqHeader". For example, if you want to parse a request header with a field called Pass, you would use a struct field of ',(0,s.jsx)(n.code,{children:'reqHeader:"pass"'}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) ReqHeaderParser(out interface{}) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Field names should start with an uppercase letter\ntype Person struct {\n    Name     string     `reqHeader:"name"`\n    Pass     string     `reqHeader:"pass"`\n    Products []string   `reqHeader:"products"`\n}\n\napp.Get("/", func(c *fiber.Ctx) error {\n        p := new(Person)\n\n        if err := c.ReqHeaderParser(p); err != nil {\n            return err\n        }\n\n        log.Println(p.Name)     // john\n        log.Println(p.Pass)     // doe\n        log.Println(p.Products) // [shoe, hat]\n\n        // ...\n})\n// Run tests with the following curl command\n\n// curl "http://localhost:3000/" -H "name: john" -H "pass: doe" -H "products: shoe,hat"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsxs)(n.p,{children:["Response return the ",(0,s.jsx)(n.a,{href:"https://godoc.org/github.com/valyala/fasthttp#Response",children:"*fasthttp.Response"})," pointer"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Response() *fasthttp.Response\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Response().BodyWriter().Write([]byte("Hello, World!"))\n  // => "Hello, World!"\n  return nil\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"restartrouting",children:"RestartRouting"}),"\n",(0,s.jsxs)(n.p,{children:["Instead of executing the next method when calling ",(0,s.jsx)(n.a,{href:"/api/ctx#next",children:"Next"}),", ",(0,s.jsx)(n.strong,{children:"RestartRouting"})," restarts execution from the first method that matches the current route. This may be helpful after overriding the path, i. e. an internal redirect. Note that handlers might be executed again which could result in an infinite loop."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) RestartRouting() error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/new", func(c *fiber.Ctx) error {\n  return c.SendString("From /new")\n})\n\napp.Get("/old", func(c *fiber.Ctx) error {\n  c.Path("/new")\n  return c.RestartRouting()\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"route",children:"Route"}),"\n",(0,s.jsxs)(n.p,{children:["Returns the matched ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/github.com/gofiber/fiber?tab=doc#Route",children:"Route"})," struct."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Route() *Route\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// http://localhost:8080/hello\n\n\napp.Get("/hello/:name", func(c *fiber.Ctx) error {\n  r := c.Route()\n  fmt.Println(r.Method, r.Path, r.Params, r.Handlers)\n  // GET /hello/:name handler [name]\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Do not rely on ",(0,s.jsx)(n.code,{children:"c.Route()"})," in middlewares ",(0,s.jsx)(n.strong,{children:"before"})," calling ",(0,s.jsx)(n.code,{children:"c.Next()"})," - ",(0,s.jsx)(n.code,{children:"c.Route()"})," returns the ",(0,s.jsx)(n.strong,{children:"last executed route"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:"func MyMiddleware() fiber.Handler {\n  return func(c *fiber.Ctx) error {\n    beforeNext := c.Route().Path // Will be '/'\n    err := c.Next()\n    afterNext := c.Route().Path // Will be '/hello/:name'\n    return err\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"savefile",children:"SaveFile"}),"\n",(0,s.jsxs)(n.p,{children:["Method is used to save ",(0,s.jsx)(n.strong,{children:"any"})," multipart file to disk."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) SaveFile(fh *multipart.FileHeader, path string) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Post("/", func(c *fiber.Ctx) error {\n  // Parse the multipart form:\n  if form, err := c.MultipartForm(); err == nil {\n    // => *multipart.Form\n\n    // Get all files from "documents" key:\n    files := form.File["documents"]\n    // => []*multipart.FileHeader\n\n    // Loop through files:\n    for _, file := range files {\n      fmt.Println(file.Filename, file.Size, file.Header["Content-Type"][0])\n      // => "tutorial.pdf" 360641 "application/pdf"\n\n      // Save the files to disk:\n      if err := c.SaveFile(file, fmt.Sprintf("./%s", file.Filename)); err != nil {\n        return err\n      }\n    }\n    return err\n  }\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"savefiletostorage",children:"SaveFileToStorage"}),"\n",(0,s.jsxs)(n.p,{children:["Method is used to save ",(0,s.jsx)(n.strong,{children:"any"})," multipart file to an external storage system."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) SaveFileToStorage(fileheader *multipart.FileHeader, path string, storage Storage) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'storage := memory.New()\n\napp.Post("/", func(c *fiber.Ctx) error {\n  // Parse the multipart form:\n  if form, err := c.MultipartForm(); err == nil {\n    // => *multipart.Form\n\n    // Get all files from "documents" key:\n    files := form.File["documents"]\n    // => []*multipart.FileHeader\n\n    // Loop through files:\n    for _, file := range files {\n      fmt.Println(file.Filename, file.Size, file.Header["Content-Type"][0])\n      // => "tutorial.pdf" 360641 "application/pdf"\n\n      // Save the files to storage:\n      if err := c.SaveFileToStorage(file, fmt.Sprintf("./%s", file.Filename), storage); err != nil {\n        return err\n      }\n    }\n    return err\n  }\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"secure",children:"Secure"}),"\n",(0,s.jsxs)(n.p,{children:["A boolean property that is ",(0,s.jsx)(n.code,{children:"true"})," , if a ",(0,s.jsx)(n.strong,{children:"TLS"})," connection is established."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Secure() bool\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Secure() method is equivalent to:\nc.Protocol() == "https"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"send",children:"Send"}),"\n",(0,s.jsx)(n.p,{children:"Sets the HTTP response body."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Send(body []byte) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  return c.Send([]byte("Hello, World!")) // => "Hello, World!"\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Fiber also provides ",(0,s.jsx)(n.code,{children:"SendString"})," and ",(0,s.jsx)(n.code,{children:"SendStream"})," methods for raw inputs."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Use this if you ",(0,s.jsx)(n.strong,{children:"don't need"})," type assertion, recommended for ",(0,s.jsx)(n.strong,{children:"faster"})," performance."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) SendString(body string) error\nfunc (c *Ctx) SendStream(stream io.Reader, size ...int) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  return c.SendString("Hello, World!")\n  // => "Hello, World!"\n\n  return c.SendStream(bytes.NewReader([]byte("Hello, World!")))\n  // => "Hello, World!"\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"sendfile",children:"SendFile"}),"\n",(0,s.jsxs)(n.p,{children:["Transfers the file from the given path. Sets the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type",children:"Content-Type"})," response HTTP header field based on the ",(0,s.jsx)(n.strong,{children:"filenames"})," extension."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Method doesn\xb4t use ",(0,s.jsx)(n.strong,{children:"gzipping"})," by default, set it to ",(0,s.jsx)(n.strong,{children:"true"})," to enable."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature" title="Signature"',children:"func (c *Ctx) SendFile(file string, compress ...bool) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/not-found", func(c *fiber.Ctx) error {\n  return c.SendFile("./public/404.html");\n\n  // Disable compression\n  return c.SendFile("./static/index.html", false);\n})\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If the file contains an url specific character you have to escape it before passing the file path into the ",(0,s.jsx)(n.code,{children:"sendFile"})," function."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/file-with-url-chars", func(c *fiber.Ctx) error {\n  return c.SendFile(url.PathEscape("hash_sign_#.txt"))\n})\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["For sending files from embedded file system ",(0,s.jsx)(n.a,{href:"/api/middleware/filesystem#sendfile",children:"this functionality"})," can be used"]})}),"\n",(0,s.jsx)(n.h2,{id:"sendstatus",children:"SendStatus"}),"\n",(0,s.jsxs)(n.p,{children:["Sets the status code and the correct status message in the body, if the response body is ",(0,s.jsx)(n.strong,{children:"empty"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You can find all used status codes and messages ",(0,s.jsx)(n.a,{href:"https://github.com/gofiber/fiber/blob/dffab20bcdf4f3597d2c74633a7705a517d2c8c2/utils.go#L183-L244",children:"here"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) SendStatus(status int) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/not-found", func(c *fiber.Ctx) error {\n  return c.SendStatus(415)\n  // => 415 "Unsupported Media Type"\n\n  c.SendString("Hello, World!")\n  return c.SendStatus(415)\n  // => 415 "Hello, World!"\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"set",children:"Set"}),"\n",(0,s.jsxs)(n.p,{children:["Sets the response\u2019s HTTP header field to the specified ",(0,s.jsx)(n.code,{children:"key"}),", ",(0,s.jsx)(n.code,{children:"value"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Set(key string, val string)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Set("Content-Type", "text/plain")\n  // => "Content-type: text/plain"\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"setparserdecoder",children:"SetParserDecoder"}),"\n",(0,s.jsx)(n.p,{children:"Allow you to config BodyParser/QueryParser decoder, base on schema's options, providing possibility to add custom type for parsing."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func SetParserDecoder(parserConfig fiber.ParserConfig{\n  IgnoreUnknownKeys bool,\n  ParserType        []fiber.ParserType{\n      Customtype interface{},\n      Converter  func(string) reflect.Value,\n  },\n  ZeroEmpty         bool,\n  SetAliasTag       string,\n})\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'\ntype CustomTime time.Time\n\n// String() returns the time in string\nfunc (ct *CustomTime) String() string {\n    t := time.Time(*ct).String()\n    return t\n}\n\n// Register the converter for CustomTime type format as 2006-01-02\nvar timeConverter = func(value string) reflect.Value {\n  fmt.Println("timeConverter", value)\n  if v, err := time.Parse("2006-01-02", value); err == nil {\n    return reflect.ValueOf(v)\n  }\n  return reflect.Value{}\n}\n\ncustomTime := fiber.ParserType{\n  Customtype: CustomTime{},\n  Converter:  timeConverter,\n}\n\n// Add setting to the Decoder\nfiber.SetParserDecoder(fiber.ParserConfig{\n  IgnoreUnknownKeys: true,\n  ParserType:        []fiber.ParserType{customTime},\n  ZeroEmpty:         true,\n})\n\n// Example to use CustomType, you pause custom time format not in RFC3339\ntype Demo struct {\n    Date  CustomTime `form:"date" query:"date"`\n    Title string     `form:"title" query:"title"`\n    Body  string     `form:"body" query:"body"`\n}\n\napp.Post("/body", func(c *fiber.Ctx) error {\n    var d Demo\n    c.BodyParser(&d)\n    fmt.Println("d.Date", d.Date.String())\n    return c.JSON(d)\n})\n\napp.Get("/query", func(c *fiber.Ctx) error {\n    var d Demo\n    c.QueryParser(&d)\n    fmt.Println("d.Date", d.Date.String())\n    return c.JSON(d)\n})\n\n// curl -X POST -F title=title -F body=body -F date=2021-10-20 http://localhost:3000/body\n\n// curl -X GET "http://localhost:3000/query?title=title&body=body&date=2021-10-20"\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"setusercontext",children:"SetUserContext"}),"\n",(0,s.jsx)(n.p,{children:"Sets the user specified implementation for context interface."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) SetUserContext(ctx context.Context)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  ctx := context.Background()\n  c.SetUserContext(ctx)\n  // Here ctx could be any context implementation\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"stale",children:"Stale"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://expressjs.com/en/4x/api.html#req.stale",children:"https://expressjs.com/en/4x/api.html#req.stale"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Stale() bool\n"})}),"\n",(0,s.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,s.jsx)(n.p,{children:"Sets the HTTP status for the response."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Method is a ",(0,s.jsx)(n.strong,{children:"chainable"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Status(status int) *Ctx\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/fiber", func(c *fiber.Ctx) error {\n  c.Status(fiber.StatusOK)\n  return nil\n}\n\napp.Get("/hello", func(c *fiber.Ctx) error {\n  return c.Status(fiber.StatusBadRequest).SendString("Bad Request")\n}\n\napp.Get("/world", func(c *fiber.Ctx) error {\n  return c.Status(fiber.StatusNotFound).SendFile("./public/gopher.png")\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"subdomains",children:"Subdomains"}),"\n",(0,s.jsx)(n.p,{children:"Returns a string slice of subdomains in the domain name of the request."}),"\n",(0,s.jsxs)(n.p,{children:["The application property subdomain offset, which defaults to ",(0,s.jsx)(n.code,{children:"2"}),", is used for determining the beginning of the subdomain segments."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Subdomains(offset ...int) []string\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// Host: "tobi.ferrets.example.com"\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.Subdomains()  // ["ferrets", "tobi"]\n  c.Subdomains(1) // ["tobi"]\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"type",children:"Type"}),"\n",(0,s.jsxs)(n.p,{children:["Sets the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type",children:"Content-Type"})," HTTP header to the MIME type listed ",(0,s.jsx)(n.a,{href:"https://github.com/nginx/nginx/blob/master/conf/mime.types",children:"here"})," specified by the file ",(0,s.jsx)(n.strong,{children:"extension"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Type(ext string, charset ...string) *Ctx\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Type(".html") // => "text/html"\n  c.Type("html")  // => "text/html"\n  c.Type("png")   // => "image/png"\n\n  c.Type("json", "utf-8")  // => "application/json; charset=utf-8"\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"usercontext",children:"UserContext"}),"\n",(0,s.jsx)(n.p,{children:"UserContext returns a context implementation that was set by user earlier\nor returns a non-nil, empty context, if it was not set earlier."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) UserContext() context.Context\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  ctx := c.UserContext()\n  // ctx is context implementation set by user\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"vary",children:"Vary"}),"\n",(0,s.jsxs)(n.p,{children:["Adds the given header field to the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Vary",children:"Vary"})," response header. This will append the header, if not already listed, otherwise leaves it listed in the current location."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Multiple fields are ",(0,s.jsx)(n.strong,{children:"allowed"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Vary(fields ...string)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Vary("Origin")     // => Vary: Origin\n  c.Vary("User-Agent") // => Vary: Origin, User-Agent\n\n  // No duplicates\n  c.Vary("Origin") // => Vary: Origin, User-Agent\n\n  c.Vary("Accept-Encoding", "Accept")\n  // => Vary: Origin, User-Agent, Accept-Encoding, Accept\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"write",children:"Write"}),"\n",(0,s.jsx)(n.p,{children:"Write adopts the Writer interface"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Write(p []byte) (n int, err error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.Write([]byte("Hello, World!")) // => "Hello, World!"\n\n  fmt.Fprintf(c, "%s\\n", "Hello, World!") // "Hello, World!Hello, World!"\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"writef",children:"Writef"}),"\n",(0,s.jsx)(n.p,{children:"Writef adopts the string with variables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) Writef(f string, a ...interface{}) (n int, err error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  world := "World!"\n  c.Writef("Hello, %s", world) // => "Hello, World!"\n\n  fmt.Fprintf(c, "%s\\n", "Hello, World!") // "Hello, World!Hello, World!"\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"writestring",children:"WriteString"}),"\n",(0,s.jsx)(n.p,{children:"WriteString adopts the string"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) WriteString(s string) (n int, err error)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Get("/", func(c *fiber.Ctx) error {\n  c.WriteString("Hello, World!") // => "Hello, World!"\n\n  fmt.Fprintf(c, "%s\\n", "Hello, World!") // "Hello, World!Hello, World!"\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"xhr",children:"XHR"}),"\n",(0,s.jsxs)(n.p,{children:["A Boolean property, that is ",(0,s.jsx)(n.code,{children:"true"}),", if the request\u2019s ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers",children:"X-Requested-With"})," header field is ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",children:"XMLHttpRequest"}),", indicating that the request was issued by a client library (such as ",(0,s.jsx)(n.a,{href:"https://api.jquery.com/jQuery.ajax/",children:"jQuery"}),")."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) XHR() bool\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'// X-Requested-With: XMLHttpRequest\n\napp.Get("/", func(c *fiber.Ctx) error {\n  c.XHR() // true\n\n  // ...\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"xml",children:"XML"}),"\n",(0,s.jsxs)(n.p,{children:["Converts any ",(0,s.jsx)(n.strong,{children:"interface"})," or ",(0,s.jsx)(n.strong,{children:"string"})," to XML using the standard ",(0,s.jsx)(n.code,{children:"encoding/xml"})," package."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["XML also sets the content header to ",(0,s.jsx)(n.strong,{children:"application/xml"}),"."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (c *Ctx) XML(data interface{}) error\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'type SomeStruct struct {\n  XMLName xml.Name `xml:"Fiber"`\n  Name    string   `xml:"Name"`\n  Age     uint8    `xml:"Age"`\n}\n\napp.Get("/", func(c *fiber.Ctx) error {\n  // Create data struct:\n  data := SomeStruct{\n    Name: "Grame",\n    Age:  20,\n  }\n\n  return c.XML(data)\n  // <Fiber>\n  //     <Name>Grame</Name>\n  //    <Age>20</Age>\n  // </Fiber>\n})\n'})})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},84429:function(e,n,t){t.d(n,{R:()=>a,x:()=>l});var r=t(96540);let s={},i=r.createContext(s);function a(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);