"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["61627"],{51533:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>h,metadata:()=>s,assets:()=>r,contentTitle:()=>l});var s=JSON.parse('{"id":"aws-sam-container/README","title":"AWS SAM Container","description":"Containerized serverless applications with AWS SAM.","source":"@site/docs/recipes/aws-sam-container/README.md","sourceDirName":"aws-sam-container","slug":"/aws-sam-container/","permalink":"/recipes/aws-sam-container/","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/recipes/edit/master/aws-sam-container/README.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"frontMatter":{"title":"AWS SAM Container","keywords":["aws","sam","serverless","lambda","container"],"description":"Containerized serverless applications with AWS SAM."},"sidebar":"left_sidebar","previous":{"title":"AWS SAM","permalink":"/recipes/aws-sam/"},"next":{"title":"AWS SES Email Sender","permalink":"/recipes/aws-ses-sender/"}}'),a=i(74848),t=i(84429);let o={title:"AWS SAM Container",keywords:["aws","sam","serverless","lambda","container"],description:"Containerized serverless applications with AWS SAM."},l="AWS SAM Container",r={},c=[{value:"Features",id:"features",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Setup process",id:"setup-process",level:2},{value:"Installing dependencies &amp; building the target",id:"installing-dependencies--building-the-target",level:3},{value:"Local development",id:"local-development",level:3},{value:"Packaging and deployment",id:"packaging-and-deployment",level:2},{value:"Add Permission to the Lambda Function for Public Access",id:"add-permission-to-the-lambda-function-for-public-access",level:2},{value:"Golang installation",id:"golang-installation",level:3},{value:"Homebrew (Mac)",id:"homebrew-mac",level:4},{value:"Chocolatey (Windows)",id:"chocolatey-windows",level:4}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"aws-sam-container",children:"AWS SAM Container"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/gofiber/recipes/tree/master/aws-sam-container",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/static/v1?label=&message=Github&color=2ea44f&style=for-the-badge&logo=github",alt:"Github"})})," ",(0,a.jsx)(n.a,{href:"https://stackblitz.com/github/gofiber/recipes/tree/master/aws-sam-container",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/static/v1?label=&message=StackBlitz&color=2ea44f&style=for-the-badge&logo=StackBlitz",alt:"StackBlitz"})})]}),"\n",(0,a.jsx)(n.p,{children:"This is a sample template for app - Below is a brief explanation of what we have generated for you:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:".\n\u251C\u2500\u2500 README.md                   <-- This instructions file\n\u251C\u2500\u2500 app                         <-- Source code for a lambda function\n\u2502   \u251C\u2500\u2500 main.go                 <-- Lambda function code\n\u2502   \u2514\u2500\u2500 Dockerfile              <-- Dockerfile\n\u251C\u2500\u2500 samconfig.toml              <-- SAM CLI configuration file\n\u2514\u2500\u2500 template.yaml\n"})}),"\n",(0,a.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Use distroless image to build, The image size is only a few MB."]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Migrate to AWS SAM without changing your faber code using ",(0,a.jsx)(n.a,{href:"https://github.com/awslabs/aws-lambda-web-adapter",children:"aws-lambda-adapter"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"AWS CLI already configured with Administrator permission"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.docker.com/community-edition",children:"Docker installed"})}),"\n",(0,a.jsxs)(n.li,{children:["SAM CLI - ",(0,a.jsx)(n.a,{href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html",children:"Install the SAM CLI"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"You may need the following for local testing."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://golang.org",children:"Golang"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"setup-process",children:"Setup process"}),"\n",(0,a.jsx)(n.h3,{id:"installing-dependencies--building-the-target",children:"Installing dependencies & building the target"}),"\n",(0,a.jsxs)(n.p,{children:["In this example we use the built-in ",(0,a.jsx)(n.code,{children:"sam build"})," to build a docker image from a Dockerfile and then copy the source of your application inside the Docker image.\nRead more about ",(0,a.jsx)(n.a,{href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-build.html",children:"SAM Build here"})]}),"\n",(0,a.jsx)(n.h3,{id:"local-development",children:"Local development"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Invoking function locally through local API Gateway"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker run -it -p 80:3000 lambdafunction\n\ncurl http://localhost\nHello, World!\n"})}),"\n",(0,a.jsx)(n.h2,{id:"packaging-and-deployment",children:"Packaging and deployment"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sam deploy --guided\n"})}),"\n",(0,a.jsx)(n.p,{children:"The command will package and deploy your application to AWS, with a series of prompts:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Stack Name"}),": The name of the stack to deploy to CloudFormation. This should be unique to your account and region, and a good starting point would be something matching your project name."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"AWS Region"}),": The AWS region you want to deploy your app to."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Confirm changes before deploy"}),": If set to yes, any change sets will be shown to you before execution for manual review. If set to no, the AWS SAM CLI will automatically deploy application changes."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Allow SAM CLI IAM role creation"}),": Many AWS SAM templates, including this example, create AWS IAM roles required for the AWS Lambda function(s) included to access AWS services. By default, these are scoped down to minimum required permissions. To deploy an AWS CloudFormation stack which creates or modifies IAM roles, the ",(0,a.jsx)(n.code,{children:"CAPABILITY_IAM"})," value for ",(0,a.jsx)(n.code,{children:"capabilities"})," must be provided. If permission isn't provided through this prompt, to deploy this example you must explicitly pass ",(0,a.jsx)(n.code,{children:"--capabilities CAPABILITY_IAM"})," to the ",(0,a.jsx)(n.code,{children:"sam deploy"})," command."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Save arguments to samconfig.toml"}),": If set to yes, your choices will be saved to a configuration file inside the project, so that in the future you can just re-run ",(0,a.jsx)(n.code,{children:"sam deploy"})," without parameters to deploy changes to your application."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"You can find your API Gateway Endpoint URL in the output values displayed after deployment."}),"\n",(0,a.jsx)(n.h2,{id:"add-permission-to-the-lambda-function-for-public-access",children:"Add Permission to the Lambda Function for Public Access"}),"\n",(0,a.jsx)(n.p,{children:'After deploying your Lambda function with an associated function URL, you might encounter a scenario where the function URL is not accessible due to missing permissions for public access. This is common when the authentication type for the function URL is set to "None," indicating that the function is intended to be publicly accessible without authentication.'}),"\n",(0,a.jsx)(n.p,{children:'To ensure your Lambda function URL can be invoked publicly, you need to add the necessary permission that allows unauthenticated requests. This step is crucial when your function URL\'s authentication type is "None" but lacks the requisite permissions for public invocation.'}),"\n",(0,a.jsxs)(n.p,{children:["Manually Configuring Permissions\nYou can manually configure permissions through the AWS Lambda console by creating a resource-based policy that grants the lambda",":invokeFunctionUrl"," permission to all principals (*). This approach is straightforward but not suitable for automation within deployment pipelines."]}),"\n",(0,a.jsx)(n.p,{children:"Automating Permission Configuration\nFor a more automated approach, especially useful in CI/CD pipelines, you can use the AWS CLI or SDKs to add the necessary permissions after deploying your Lambda function. This can be incorporated into your deployment scripts or CI/CD workflows."}),"\n",(0,a.jsx)(n.p,{children:"Here is an example AWS CLI command that adds the required permission for public access to your Lambda function URL:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'aws lambda add-permission \\\n  --function-name <your-function-name> \\\n  --action lambda:InvokeFunctionUrl \\\n  --principal "*" \\\n  --function-url-auth-type "NONE" \\\n  --statement-id unique-statement-id\n'})}),"\n",(0,a.jsx)(n.p,{children:"This command grants permission to all principals (*) to invoke your Lambda function URL, enabling public access as intended."}),"\n",(0,a.jsx)(n.h1,{id:"appendix",children:"Appendix"}),"\n",(0,a.jsx)(n.h3,{id:"golang-installation",children:"Golang installation"}),"\n",(0,a.jsxs)(n.p,{children:["Please ensure Go 1.x (where 'x' is the latest version) is installed as per the instructions on the official golang website: ",(0,a.jsx)(n.a,{href:"https://golang.org/doc/install",children:"https://golang.org/doc/install"})]}),"\n",(0,a.jsx)(n.p,{children:"A quickstart way would be to use Homebrew, chocolatey or your linux package manager."}),"\n",(0,a.jsx)(n.h4,{id:"homebrew-mac",children:"Homebrew (Mac)"}),"\n",(0,a.jsx)(n.p,{children:"Issue the following command from the terminal:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"brew install golang\n"})}),"\n",(0,a.jsx)(n.p,{children:"If it's already installed, run the following command to ensure it's the latest version:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"brew update\nbrew upgrade golang\n"})}),"\n",(0,a.jsx)(n.h4,{id:"chocolatey-windows",children:"Chocolatey (Windows)"}),"\n",(0,a.jsx)(n.p,{children:"Issue the following command from the powershell:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"choco install golang\n"})}),"\n",(0,a.jsx)(n.p,{children:"If it's already installed, run the following command to ensure it's the latest version:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"choco upgrade golang\n"})})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},84429:function(e,n,i){i.d(n,{R:()=>o,x:()=>l});var s=i(96540);let a={},t=s.createContext(a);function o(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);