"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["25053"],{4835:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>c,default:()=>p,metadata:()=>r,assets:()=>d,contentTitle:()=>o});var r=JSON.parse('{"id":"api/app","title":"\u{1F680} App","description":"The `App` type represents your Fiber application.","source":"@site/docs/core/api/app.md","sourceDirName":"api","slug":"/api/app","permalink":"/next/api/app","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/fiber/edit/main/docs/api/app.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"sidebarPosition":2,"frontMatter":{"id":"app","title":"\u{1F680} App","description":"The `App` type represents your Fiber application.","sidebar_position":2},"sidebar":"left_sidebar","previous":{"title":"\u{1F4E6} Fiber","permalink":"/next/api/fiber"},"next":{"title":"\u{1F9E0} Ctx","permalink":"/next/api/ctx"}}'),a=t(74848),s=t(84429);t(28891);var i=t(80043);let l={id:"app",title:"\u{1F680} App",description:"The `App` type represents your Fiber application.",sidebar_position:2},o,d={},c=[{value:"Helpers",id:"helpers",level:2},{value:"GetString",id:"getstring",level:3},{value:"GetBytes",id:"getbytes",level:3},{value:"Routing",id:"routing",level:2},{value:"Route Handlers",id:"route-handlers",level:3},...i.toc,{value:"Mounting",id:"mounting",level:3},{value:"MountPath",id:"mountpath",level:3},{value:"Group",id:"group",level:3},{value:"RouteChain",id:"routechain",level:3},{value:"Route",id:"route",level:3},{value:"HandlersCount",id:"handlerscount",level:3},{value:"Stack",id:"stack",level:3},{value:"Name",id:"name",level:3},{value:"GetRoute",id:"getroute",level:3},{value:"GetRoutes",id:"getroutes",level:3},{value:"Config",id:"config",level:2},{value:"Handler",id:"handler",level:2},{value:"ErrorHandler",id:"errorhandler",level:2},{value:"NewWithCustomCtx",id:"newwithcustomctx",level:2},{value:"RegisterCustomBinder",id:"registercustombinder",level:2},{value:"RegisterCustomConstraint",id:"registercustomconstraint",level:2},{value:"SetTLSHandler",id:"settlshandler",level:2},{value:"Test",id:"test",level:2},{value:"Hooks",id:"hooks",level:2},{value:"RebuildTree",id:"rebuildtree",level:2},{value:"Example Usage",id:"example-usage",level:3},{value:"RemoveRoute",id:"removeroute",level:2},{value:"RemoveRouteByName",id:"removeroutebyname",level:2},{value:"RemoveRouteFunc",id:"removeroutefunc",level:2}];function h(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"helpers",children:"Helpers"}),"\n",(0,a.jsx)(n.h3,{id:"getstring",children:"GetString"}),"\n",(0,a.jsxs)(n.p,{children:["Returns ",(0,a.jsx)(n.code,{children:"s"})," unchanged when ",(0,a.jsx)(n.a,{href:"/next/api/fiber#immutable",children:(0,a.jsx)(n.code,{children:"Immutable"})})," is disabled or ",(0,a.jsx)(n.code,{children:"s"})," resides in read-only memory. Otherwise, it returns a detached copy using ",(0,a.jsx)(n.code,{children:"strings.Clone"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) GetString(s string) string\n"})}),"\n",(0,a.jsx)(n.h3,{id:"getbytes",children:"GetBytes"}),"\n",(0,a.jsxs)(n.p,{children:["Returns ",(0,a.jsx)(n.code,{children:"b"})," unchanged when ",(0,a.jsx)(n.a,{href:"/next/api/fiber#immutable",children:(0,a.jsx)(n.code,{children:"Immutable"})})," is disabled or ",(0,a.jsx)(n.code,{children:"b"})," resides in read-only memory. Otherwise, it returns a detached copy."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) GetBytes(b []byte) []byte\n"})}),"\n",(0,a.jsx)(n.h2,{id:"routing",children:"Routing"}),"\n","\n",(0,a.jsx)(n.h3,{id:"route-handlers",children:"Route Handlers"}),"\n",(0,a.jsx)(i.default,{}),"\n",(0,a.jsx)(n.h3,{id:"mounting",children:"Mounting"}),"\n",(0,a.jsxs)(n.p,{children:["Mount another Fiber instance with ",(0,a.jsx)(n.a,{href:"/next/api/app#use",children:(0,a.jsx)(n.code,{children:"app.Use"})}),", similar to Express's ",(0,a.jsx)(n.a,{href:"https://expressjs.com/en/api.html#router.use",children:(0,a.jsx)(n.code,{children:"router.use"})}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n    micro := fiber.New()\n\n    // Mount the micro app on the "/john" route\n    app.Use("/john", micro) // GET /john/doe -> 200 OK\n\n    micro.Get("/doe", func(c fiber.Ctx) error {\n        return c.SendStatus(fiber.StatusOK)\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"mountpath",children:"MountPath"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"MountPath"})," property contains one or more path patterns on which a sub-app was mounted."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) MountPath() string\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "fmt"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n    one := fiber.New()\n    two := fiber.New()\n    three := fiber.New()\n\n    two.Use("/three", three)\n    one.Use("/two", two)\n    app.Use("/one", one)\n\n    fmt.Println("Mount paths:")\n    fmt.Println("one.MountPath():", one.MountPath())       // "/one"\n    fmt.Println("two.MountPath():", two.MountPath())       // "/one/two"\n    fmt.Println("three.MountPath():", three.MountPath())   // "/one/two/three"\n    fmt.Println("app.MountPath():", app.MountPath())       // ""\n}\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["Mounting order is important for ",(0,a.jsx)(n.code,{children:"MountPath"}),". To get mount paths properly, you should start mounting from the deepest app."]})}),"\n",(0,a.jsx)(n.h3,{id:"group",children:"Group"}),"\n",(0,a.jsxs)(n.p,{children:["You can group routes by creating a ",(0,a.jsx)(n.code,{children:"*Group"})," struct."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Group(prefix string, handlers ...any) Router\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    api := app.Group("/api", handler)  // /api\n\n    v1 := api.Group("/v1", handler)    // /api/v1\n    v1.Get("/list", handler)           // /api/v1/list\n    v1.Get("/user", handler)           // /api/v1/user\n\n    v2 := api.Group("/v2", handler)    // /api/v2\n    v2.Get("/list", handler)           // /api/v2/list\n    v2.Get("/user", handler)           // /api/v2/user\n\n    log.Fatal(app.Listen(":3000"))\n}\n\nfunc handler(c fiber.Ctx) error {\n    return c.SendString("Handler response")\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"routechain",children:"RouteChain"}),"\n",(0,a.jsx)(n.p,{children:"Returns an instance of a single route, which you can then use to handle HTTP verbs with optional middleware."}),"\n",(0,a.jsxs)(n.p,{children:["Similar to ",(0,a.jsx)(n.a,{href:"https://expressjs.com/en/api.html#app.route",children:(0,a.jsx)(n.code,{children:"Express"})}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) RouteChain(path string) Register\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsxs)("summary",{children:["Click here to see the ",(0,a.jsx)(n.code,{children:"Register"})," interface"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:"type Register interface {\n    All(handler any, handlers ...any) Register\n    Get(handler any, handlers ...any) Register\n    Head(handler any, handlers ...any) Register\n    Post(handler any, handlers ...any) Register\n    Put(handler any, handlers ...any) Register\n    Delete(handler any, handlers ...any) Register\n    Connect(handler any, handlers ...any) Register\n    Options(handler any, handlers ...any) Register\n    Trace(handler any, handlers ...any) Register\n    Patch(handler any, handlers ...any) Register\n\n    Add(methods []string, handler any, handlers ...any) Register\n\n    RouteChain(path string) Register\n}\n"})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Use `RouteChain` as a chainable route declaration method\n    app.RouteChain("/test").Get(func(c fiber.Ctx) error {\n        return c.SendString("GET /test")\n    })\n\n    app.RouteChain("/events").All(func(c fiber.Ctx) error {\n        // Runs for all HTTP verbs first\n        // Think of it as route-specific middleware!\n    }).\n    Get(func(c fiber.Ctx) error {\n        return c.SendString("GET /events")\n    }).\n    Post(func(c fiber.Ctx) error {\n        // Maybe add a new event...\n        return c.SendString("POST /events")\n    })\n\n    // Combine multiple routes\n    app.RouteChain("/reports").RouteChain("/daily").Get(func(c fiber.Ctx) error {\n        return c.SendString("GET /reports/daily")\n    })\n\n    // Use multiple methods\n    app.RouteChain("/api").Get(func(c fiber.Ctx) error {\n        return c.SendString("GET /api")\n    }).Post(func(c fiber.Ctx) error {\n        return c.SendString("POST /api")\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"route",children:"Route"}),"\n",(0,a.jsxs)(n.p,{children:["Defines routes with a common prefix inside the supplied function. Internally it uses ",(0,a.jsx)(n.a,{href:"#group",children:(0,a.jsx)(n.code,{children:"Group"})})," to create a sub-router and accepts an optional name prefix."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Route(prefix string, fn func(router Router), name ...string) Router\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'app.Route("/test", func(api fiber.Router) {\n    api.Get("/foo", handler).Name("foo") // /test/foo (name: test.foo)\n    api.Get("/bar", handler).Name("bar") // /test/bar (name: test.bar)\n}, "test.")\n'})}),"\n",(0,a.jsx)(n.h3,{id:"handlerscount",children:"HandlersCount"}),"\n",(0,a.jsx)(n.p,{children:"Returns the number of registered handlers."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) HandlersCount() uint32\n"})}),"\n",(0,a.jsx)(n.h3,{id:"stack",children:"Stack"}),"\n",(0,a.jsx)(n.p,{children:"Returns the underlying router stack."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Stack() [][]*Route\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "encoding/json"\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nvar handler = func(c fiber.Ctx) error { return nil }\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/john/:age", handler)\n    app.Post("/register", handler)\n\n    data, _ := json.MarshalIndent(app.Stack(), "", "  ")\n    fmt.Println(string(data))\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click here to see the result"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  [\n    {\n      "method": "GET",\n      "path": "/john/:age",\n      "params": [\n        "age"\n      ]\n    }\n  ],\n  [\n    {\n      "method": "HEAD",\n      "path": "/john/:age",\n      "params": [\n        "age"\n      ]\n    }\n  ],\n  [\n    {\n      "method": "POST",\n      "path": "/register",\n      "params": null\n    }\n  ]\n]\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"name",children:"Name"}),"\n",(0,a.jsx)(n.p,{children:"This method assigns the name to the latest created route."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Name(name string) Router\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "encoding/json"\n    "fmt"\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    var handler = func(c fiber.Ctx) error { return nil }\n\n    app := fiber.New()\n\n    app.Get("/", handler)\n    app.Name("index")\n    app.Get("/doe", handler).Name("home")\n    app.Trace("/tracer", handler).Name("tracert")\n    app.Delete("/delete", handler).Name("delete")\n\n    a := app.Group("/a")\n    a.Name("fd.")\n\n    a.Get("/test", handler).Name("test")\n\n    data, _ := json.MarshalIndent(app.Stack(), "", "  ")\n    fmt.Println(string(data))\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click here to see the result"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  [\n    {\n      "method": "GET",\n      "name": "index",\n      "path": "/",\n      "params": null\n    },\n    {\n      "method": "GET",\n      "name": "home",\n      "path": "/doe",\n      "params": null\n    },\n    {\n      "method": "GET",\n      "name": "fd.test",\n      "path": "/a/test",\n      "params": null\n    }\n  ],\n  [\n    {\n      "method": "HEAD",\n      "name": "",\n      "path": "/",\n      "params": null\n    },\n    {\n      "method": "HEAD",\n      "name": "",\n      "path": "/doe",\n      "params": null\n    },\n    {\n      "method": "HEAD",\n      "name": "",\n      "path": "/a/test",\n      "params": null\n    }\n  ],\n  null,\n  null,\n  [\n    {\n      "method": "DELETE",\n      "name": "delete",\n      "path": "/delete",\n      "params": null\n    }\n  ],\n  null,\n  null,\n  [\n    {\n      "method": "TRACE",\n      "name": "tracert",\n      "path": "/tracer",\n      "params": null\n    }\n  ],\n  null\n]\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"getroute",children:"GetRoute"}),"\n",(0,a.jsx)(n.p,{children:"This method retrieves a route by its name."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) GetRoute(name string) Route\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "encoding/json"\n    "fmt"\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/", handler).Name("index")\n\n    route := app.GetRoute("index")\n\n    data, _ := json.MarshalIndent(route, "", "  ")\n    fmt.Println(string(data))\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click here to see the result"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "method": "GET",\n  "name": "index",\n  "path": "/",\n  "params": null\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"getroutes",children:"GetRoutes"}),"\n",(0,a.jsx)(n.p,{children:"This method retrieves all routes."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) GetRoutes(filterUseOption ...bool) []Route\n"})}),"\n",(0,a.jsxs)(n.p,{children:["When ",(0,a.jsx)(n.code,{children:"filterUseOption"})," is set to ",(0,a.jsx)(n.code,{children:"true"}),", it filters out routes registered by middleware."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "encoding/json"\n    "fmt"\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Post("/", func(c fiber.Ctx) error {\n        return c.SendString("Hello, World!")\n    }).Name("index")\n\n    routes := app.GetRoutes(true)\n\n    data, _ := json.MarshalIndent(routes, "", "  ")\n    fmt.Println(string(data))\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:"Click here to see the result"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "method": "POST",\n        "name": "index",\n        "path": "/",\n        "params": null\n    }\n]\n'})})]}),"\n",(0,a.jsx)(n.h2,{id:"config",children:"Config"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Config"})," returns the ",(0,a.jsx)(n.a,{href:"/next/api/fiber#config",children:"app config"})," as a value (read-only)."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Config() Config\n"})}),"\n",(0,a.jsx)(n.h2,{id:"handler",children:"Handler"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Handler"})," returns the server handler that can be used to serve custom ",(0,a.jsx)(n.a,{href:"https://pkg.go.dev/github.com/valyala/fasthttp#RequestCtx",children:(0,a.jsx)(n.code,{children:"\\*fasthttp.RequestCtx"})})," requests."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Handler() fasthttp.RequestHandler\n"})}),"\n",(0,a.jsx)(n.h2,{id:"errorhandler",children:"ErrorHandler"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ErrorHandler"})," executes the process defined for the application in case of errors. This is used in some cases in middlewares."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) ErrorHandler(ctx Ctx, err error) error\n"})}),"\n",(0,a.jsx)(n.h2,{id:"newwithcustomctx",children:"NewWithCustomCtx"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"NewWithCustomCtx"})," creates a new ",(0,a.jsx)(n.code,{children:"*App"})," and sets the custom context factory\nfunction at construction time."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func NewWithCustomCtx(fn func(app *App) CustomCtx, config ...Config) *App\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\ntype CustomCtx struct {\n    fiber.DefaultCtx\n}\n\nfunc (c *CustomCtx) Params(key string, defaultValue ...string) string {\n    return "prefix_" + c.DefaultCtx.Params(key)\n}\n\nfunc main() {\n    app := fiber.NewWithCustomCtx(func(app *fiber.App) fiber.CustomCtx {\n        return &CustomCtx{\n            DefaultCtx: *fiber.NewDefaultCtx(app),\n        }\n    })\n\n    app.Get("/:id", func(c fiber.Ctx) error {\n        return c.SendString(c.Params("id"))\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"registercustombinder",children:"RegisterCustomBinder"}),"\n",(0,a.jsxs)(n.p,{children:["You can register custom binders to use with ",(0,a.jsx)(n.a,{href:"/next/api/bind#custom",children:(0,a.jsx)(n.code,{children:'Bind().Custom("name")'})}),". They should be compatible with the ",(0,a.jsx)(n.code,{children:"CustomBinder"})," interface."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) RegisterCustomBinder(binder CustomBinder)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n    "gopkg.in/yaml.v2"\n)\n\ntype User struct {\n    Name string `yaml:"name"`\n}\n\ntype customBinder struct{}\n\nfunc (*customBinder) Name() string {\n    return "custom"\n}\n\nfunc (*customBinder) MIMETypes() []string {\n    return []string{"application/yaml"}\n}\n\nfunc (*customBinder) Parse(c fiber.Ctx, out any) error {\n    // Parse YAML body\n    return yaml.Unmarshal(c.Body(), out)\n}\n\nfunc main() {\n    app := fiber.New()\n\n    // Register custom binder\n    app.RegisterCustomBinder(&customBinder{})\n\n    app.Post("/custom", func(c fiber.Ctx) error {\n        var user User\n        // Use Custom binder by name\n        if err := c.Bind().Custom("custom", &user); err != nil {\n            return err\n        }\n        return c.JSON(user)\n    })\n\n    app.Post("/normal", func(c fiber.Ctx) error {\n        var user User\n        // Custom binder is used by the MIME type\n        if err := c.Bind().Body(&user); err != nil {\n            return err\n        }\n        return c.JSON(user)\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"registercustomconstraint",children:"RegisterCustomConstraint"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"RegisterCustomConstraint"})," allows you to register custom constraints."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) RegisterCustomConstraint(constraint CustomConstraint)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["See the ",(0,a.jsx)(n.a,{href:"/next/guide/routing#custom-constraint",children:"Custom Constraint"})," section for more information."]}),"\n",(0,a.jsx)(n.h2,{id:"settlshandler",children:"SetTLSHandler"}),"\n",(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"SetTLSHandler"})," to set ",(0,a.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc8446#section-4.1.2",children:(0,a.jsx)(n.code,{children:"ClientHelloInfo"})})," when using TLS with a ",(0,a.jsx)(n.code,{children:"Listener"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) SetTLSHandler(tlsHandler *TLSHandler)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"test",children:"Test"}),"\n",(0,a.jsxs)(n.p,{children:["Testing your application is done with the ",(0,a.jsx)(n.code,{children:"Test"})," method. Use this method for creating ",(0,a.jsx)(n.code,{children:"_test.go"})," files or when you need to debug your routing logic. The default timeout is ",(0,a.jsx)(n.code,{children:"1s"}),"; to disable a timeout altogether, pass a ",(0,a.jsx)(n.code,{children:"TestConfig"})," struct with ",(0,a.jsx)(n.code,{children:"Timeout: 0"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Test(req *http.Request, config ...TestConfig) (*http.Response, error)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "fmt"\n    "io"\n    "log"\n    "net/http"\n    "net/http/httptest"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Create route with GET method for test:\n    app.Get("/", func(c fiber.Ctx) error {\n        fmt.Println(c.BaseURL())              // => http://google.com\n        fmt.Println(c.Get("X-Custom-Header")) // => hi\n        return c.SendString("hello, World!")\n    })\n\n    // Create http.Request\n    req := httptest.NewRequest("GET", "http://google.com", nil)\n    req.Header.Set("X-Custom-Header", "hi")\n\n    // Perform the test\n    resp, _ := app.Test(req)\n\n    // Do something with the results:\n    if resp.StatusCode == fiber.StatusOK {\n        body, _ := io.ReadAll(resp.Body)\n        fmt.Println(string(body)) // => hello, World!\n    }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"If not provided, TestConfig is set to the following defaults:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Default TestConfig"',children:"config := fiber.TestConfig{\n  Timeout:      time.Second(),\n  FailOnTimeout: true,\n}\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"caution",children:[(0,a.jsxs)(n.p,{children:["This is ",(0,a.jsx)(n.strong,{children:"not"})," the same as supplying an empty ",(0,a.jsx)(n.code,{children:"TestConfig{}"})," to\n`app.Test(), but rather be the equivalent of supplying:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Empty TestConfig"',children:"cfg := fiber.TestConfig{\n  Timeout:      0,\n  FailOnTimeout: false,\n}\n"})}),(0,a.jsx)(n.p,{children:"This would make a Test that has no timeout."})]}),"\n",(0,a.jsx)(n.h2,{id:"hooks",children:"Hooks"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Hooks"})," is a method to return the ",(0,a.jsx)(n.a,{href:"/next/api/hooks",children:"hooks"})," property."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Hooks() *Hooks\n"})}),"\n",(0,a.jsx)(n.h2,{id:"rebuildtree",children:"RebuildTree"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"RebuildTree"})," method is designed to rebuild the route tree and enable dynamic route registration. It returns a pointer to the ",(0,a.jsx)(n.code,{children:"App"})," instance."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) RebuildTree() *App\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," Use this method with caution. It is ",(0,a.jsx)(n.strong,{children:"not"})," thread-safe and calling it can be very performance-intensive, so it should be used sparingly and only in development mode. Avoid using it concurrently."]}),"\n",(0,a.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,a.jsx)(n.p,{children:"Here\u2019s an example of how to define and register routes dynamically:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/define", func(c fiber.Ctx) error {\n        // Define a new route dynamically\n        app.Get("/dynamically-defined", func(c fiber.Ctx) error {\n            return c.SendStatus(fiber.StatusOK)\n        })\n\n        // Rebuild the route tree to register the new route\n        app.RebuildTree()\n\n        return c.SendStatus(fiber.StatusOK)\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["In this example, a new route is defined and then ",(0,a.jsx)(n.code,{children:"RebuildTree()"})," is called to ensure the new route is registered and available."]}),"\n",(0,a.jsx)(n.h2,{id:"removeroute",children:"RemoveRoute"}),"\n",(0,a.jsxs)(n.p,{children:["This method removes a route by path. You must call the ",(0,a.jsx)(n.code,{children:"RebuildTree()"})," method after the removal to finalize the update and rebuild the routing tree.\nIf no methods are specified, the route will be removed for all HTTP methods defined in the app. To limit removal to specific methods, provide them as additional arguments."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) RemoveRoute(path string, methods ...string)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Example"',children:'package main\n\nimport (\n    "log"\n\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/api/feature-a", func(c fiber.Ctx) error {\n           app.RemoveRoute("/api/feature", fiber.MethodGet)\n           app.RebuildTree()\n           // Redefine route\n           app.Get("/api/feature", func(c fiber.Ctx) error {\n                   return c.SendString("Testing feature-a")\n           })\n\n           app.RebuildTree()\n           return c.SendStatus(fiber.StatusOK)\n    })\n    app.Get("/api/feature-b", func(c fiber.Ctx) error {\n           app.RemoveRoute("/api/feature", fiber.MethodGet)\n           app.RebuildTree()\n           // Redefine route\n           app.Get("/api/feature", func(c fiber.Ctx) error {\n                   return c.SendString("Testing feature-b")\n           })\n\n           app.RebuildTree()\n           return c.SendStatus(fiber.StatusOK)\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"removeroutebyname",children:"RemoveRouteByName"}),"\n",(0,a.jsx)(n.p,{children:"This method removes a route by name.\nIf no methods are specified, the route will be removed for all HTTP methods defined in the app. To limit removal to specific methods, provide them as additional arguments."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) RemoveRouteByName(name string, methods ...string)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"removeroutefunc",children:"RemoveRouteFunc"}),"\n",(0,a.jsxs)(n.p,{children:["This method removes a route by function having ",(0,a.jsx)(n.code,{children:"*Route"})," parameter.\nIf no methods are specified, the route will be removed for all HTTP methods defined in the app. To limit removal to specific methods, provide them as additional arguments."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) RemoveRouteFunc(matchFunc func(r *Route) bool, methods ...string)\n"})})]})}function p(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},80043:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>c,default:()=>p,metadata:()=>r,assets:()=>d,contentTitle:()=>o});var r=JSON.parse('{"id":"partials/routing/route-handlers","title":"Route Handlers","description":"Registers a route bound to a specific HTTP method.","source":"@site/docs/core/partials/routing/handler.md","sourceDirName":"partials/routing","slug":"/partials/routing/route-handlers","permalink":"/next/partials/routing/route-handlers","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/fiber/edit/main/docs/partials/routing/handler.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"frontMatter":{"id":"route-handlers","title":"Route Handlers"}}'),a=t(74848),s=t(84429),i=t(28891);let l={id:"route-handlers",title:"Route Handlers"},o,d={},c=[{value:"Fiber-native handlers (cases 1\u20132)",id:"fiber-native-handlers-cases-12",level:3},{value:"Express-style request handlers (cases 3\u20138)",id:"express-style-request-handlers-cases-38",level:3},{value:"net/http handlers (cases 9\u201311)",id:"nethttp-handlers-cases-911",level:3},{value:"fasthttp handlers (cases 12\u201313)",id:"fasthttp-handlers-cases-1213",level:3}];function h(e){let n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Registers a route bound to a specific ",(0,a.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",children:"HTTP method"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signatures"',children:"// HTTP methods\nfunc (app *App) Get(path string, handler any, handlers ...any) Router\nfunc (app *App) Head(path string, handler any, handlers ...any) Router\nfunc (app *App) Post(path string, handler any, handlers ...any) Router\nfunc (app *App) Put(path string, handler any, handlers ...any) Router\nfunc (app *App) Delete(path string, handler any, handlers ...any) Router\nfunc (app *App) Connect(path string, handler any, handlers ...any) Router\nfunc (app *App) Options(path string, handler any, handlers ...any) Router\nfunc (app *App) Trace(path string, handler any, handlers ...any) Router\nfunc (app *App) Patch(path string, handler any, handlers ...any) Router\n\n// Add allows you to specify multiple methods at once\nfunc (app *App) Add(methods []string, path string, handler any, handlers ...any) Router\n\n// All will register the route on all HTTP methods\n// Almost the same as app.Use but not bound to prefixes\nfunc (app *App) All(path string, handler any, handlers ...any) Router\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Fiber's adapter converts a variety of handler shapes to native\n",(0,a.jsx)(n.code,{children:"func(fiber.Ctx) error"})," callbacks. It currently recognizes thirteen cases (the\nnumbers below match the comments in ",(0,a.jsx)(n.code,{children:"toFiberHandler"})," inside ",(0,a.jsx)(n.code,{children:"adapter.go"}),"). This\nlets you mix Fiber-style handlers with Express-style callbacks and even reuse\n",(0,a.jsx)(n.code,{children:"net/http"})," or ",(0,a.jsx)(n.code,{children:"fasthttp"})," functions."]}),"\n",(0,a.jsx)(n.h3,{id:"fiber-native-handlers-cases-12",children:"Fiber-native handlers (cases 1\u20132)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 1."})," ",(0,a.jsx)(n.code,{children:"fiber.Handler"})," \u2014 the canonical ",(0,a.jsx)(n.code,{children:"func(fiber.Ctx) error"})," form."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 2."})," ",(0,a.jsx)(n.code,{children:"func(fiber.Ctx)"})," \u2014 Fiber runs the function and treats it as if it\nreturned ",(0,a.jsx)(n.code,{children:"nil"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"express-style-request-handlers-cases-38",children:"Express-style request handlers (cases 3\u20138)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 3."})," ",(0,a.jsx)(n.code,{children:"func(fiber.Req, fiber.Res) error"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 4."})," ",(0,a.jsx)(n.code,{children:"func(fiber.Req, fiber.Res)"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 5."})," ",(0,a.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func() error) error"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 6."})," ",(0,a.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func() error)"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 7."})," ",(0,a.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func()) error"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 8."})," ",(0,a.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func())"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The adapter injects a ",(0,a.jsx)(n.code,{children:"next"})," callback when your signature accepts one. Fiber\npropagates downstream errors from ",(0,a.jsx)(n.code,{children:"c.Next()"})," back through the wrapper, so\nreturning those errors remains optional. If you never call the injected ",(0,a.jsx)(n.code,{children:"next"}),"\nfunction, the handler chain stops, matching Express semantics."]}),"\n",(0,a.jsx)(n.h3,{id:"nethttp-handlers-cases-911",children:"net/http handlers (cases 9\u201311)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 9."})," ",(0,a.jsx)(n.code,{children:"http.HandlerFunc"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 10."})," ",(0,a.jsx)(n.code,{children:"http.Handler"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 11."})," ",(0,a.jsx)(n.code,{children:"func(http.ResponseWriter, *http.Request)"})]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{title:"Compatibility overhead",type:"caution",children:(0,a.jsxs)(n.p,{children:["Fiber adapts these handlers through ",(0,a.jsx)(n.code,{children:"fasthttpadaptor"}),". They do not receive\n",(0,a.jsx)(n.code,{children:"fiber.Ctx"}),", cannot call ",(0,a.jsx)(n.code,{children:"c.Next()"}),", and therefore always terminate the handler\nchain. The compatibility layer also adds more overhead than running a native\nFiber handler, so prefer the other forms when possible."]})}),"\n",(0,a.jsx)(n.h3,{id:"fasthttp-handlers-cases-1213",children:"fasthttp handlers (cases 12\u201313)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 12."})," ",(0,a.jsx)(n.code,{children:"fasthttp.RequestHandler"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Case 13."})," ",(0,a.jsx)(n.code,{children:"func(*fasthttp.RequestCtx) error"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["fasthttp handlers run with full access to the underlying ",(0,a.jsx)(n.code,{children:"fasthttp.RequestCtx"}),".\nThey are expected to manage the response directly. Fiber will propagate any\nerror returned by the ",(0,a.jsx)(n.code,{children:"func(*fasthttp.RequestCtx) error"})," variant but otherwise\ndoes not inspect the context state."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Examples"',children:'// Simple GET handler (Fiber accepts both func(fiber.Ctx) and func(fiber.Ctx) error)\napp.Get("/api/list", func(c fiber.Ctx) error {\n    return c.SendString("I\'m a GET request!")\n})\n\n// Reuse an existing net/http handler without manual adaptation\nhttpHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    w.WriteHeader(http.StatusNoContent)\n})\n\napp.Get("/foo", httpHandler)\n\n// Align with Express-style handlers using fiber.Req and fiber.Res helpers (works\n// for middleware and routes alike)\napp.Use(func(req fiber.Req, res fiber.Res, next func() error) error {\n    if req.IP() == "192.168.1.254" {\n        return res.SendStatus(fiber.StatusForbidden)\n    }\n    return next()\n})\n\napp.Get("/express", func(req fiber.Req, res fiber.Res) error {\n    return res.SendString("Hello from Express-style handlers!")\n})\n\n// Mount a fasthttp.RequestHandler directly\napp.Get("/bar", func(ctx *fasthttp.RequestCtx) {\n    ctx.SetStatusCode(fiber.StatusAccepted)\n})\n\n// Simple POST handler\napp.Post("/api/register", func(c fiber.Ctx) error {\n    return c.SendString("I\'m a POST request!")\n})\n'})}),"\n",(0,a.jsx)(i.A,{id:"use",children:"#Use"}),"\n",(0,a.jsxs)(n.p,{children:["Can be used for middleware packages and prefix catchers. Prefixes now require either an exact match or a slash boundary, so ",(0,a.jsx)(n.code,{children:"/john"})," matches ",(0,a.jsx)(n.code,{children:"/john"})," and ",(0,a.jsx)(n.code,{children:"/john/doe"})," but not ",(0,a.jsx)(n.code,{children:"/johnnnnn"}),". Parameter tokens like ",(0,a.jsx)(n.code,{children:":name"}),", ",(0,a.jsx)(n.code,{children:":name?"}),", ",(0,a.jsx)(n.code,{children:"*"}),", and ",(0,a.jsx)(n.code,{children:"+"})," are still expanded before the boundary check runs."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func (app *App) Use(args ...any) Router\n\n// Fiber inspects args to support these common usage patterns:\n// - app.Use(handler, handlers ...any)\n// - app.Use(path string, handler, handlers ...any)\n// - app.Use(paths []string, handler, handlers ...any)\n// - app.Use(path string, subApp *App)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Each handler argument can independently be a Fiber handler (with or without an\n",(0,a.jsx)(n.code,{children:"error"})," return), an Express-style callback, a ",(0,a.jsx)(n.code,{children:"net/http"})," handler, or any other\nsupported shape including fasthttp callbacks that return errors."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",metastring:'title="Examples"',children:'// Match any request\napp.Use(func(c fiber.Ctx) error {\n    return c.Next()\n})\n\n// Match request starting with /api\napp.Use("/api", func(c fiber.Ctx) error {\n    return c.Next()\n})\n\n// Match requests starting with /api or /home (multiple-prefix support)\napp.Use([]string{"/api", "/home"}, func(c fiber.Ctx) error {\n    return c.Next()\n})\n\n// Attach multiple handlers \napp.Use("/api", func(c fiber.Ctx) error {\n    c.Set("X-Custom-Header", random.String(32))\n    return c.Next()\n}, func(c fiber.Ctx) error {\n    return c.Next()\n})\n\n// Mount a sub-app\napp.Use("/api", api)\n'})})]})}function p(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28891:function(e,n,t){t.d(n,{A:()=>i});var r=t(74848);t(96540);var a=t(12801),s=t(13193);function i({children:e,id:n}){return(0,s.A)().collectAnchor(n),(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{id:n,className:"reference anchor",children:[e,(0,r.jsx)(a.A,{to:"#"+n,className:"hash-link"})]})})}},84429:function(e,n,t){t.d(n,{R:()=>i,x:()=>l});var r=t(96540);let a={},s=r.createContext(a);function i(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);