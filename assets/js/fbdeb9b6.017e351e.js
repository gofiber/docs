"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["21210"],{56736:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,toc:()=>c,default:()=>h,metadata:()=>r,assets:()=>o,contentTitle:()=>a});var r=JSON.parse('{"id":"stream-request-body/README","title":"Stream Request Body","description":"Streaming request bodies.","source":"@site/docs/recipes/stream-request-body/README.md","sourceDirName":"stream-request-body","slug":"/stream-request-body/","permalink":"/recipes/stream-request-body/","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/recipes/edit/master/stream-request-body/README.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"frontMatter":{"title":"Stream Request Body","keywords":["stream","request body"],"description":"Streaming request bodies."},"sidebar":"left_sidebar","previous":{"title":"Server-Sent Events","permalink":"/recipes/sse/"},"next":{"title":"Svelte Netlify","permalink":"/recipes/svelte-netlify/"}}'),i=n(74848),s=n(84429);let l={title:"Stream Request Body",keywords:["stream","request body"],description:"Streaming request bodies."},a="Stream Request Body",o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"Running the Application",id:"running-the-application",level:2},{value:"Example",id:"example",level:2},{value:"References",id:"references",level:2}];function d(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"stream-request-body",children:"Stream Request Body"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://github.com/gofiber/recipes/tree/master/stream-request-body",children:(0,i.jsx)(t.img,{src:"https://img.shields.io/static/v1?label=&message=Github&color=2ea44f&style=for-the-badge&logo=github",alt:"Github"})})," ",(0,i.jsx)(t.a,{href:"https://stackblitz.com/github/gofiber/recipes/tree/master/stream-request-body",children:(0,i.jsx)(t.img,{src:"https://img.shields.io/static/v1?label=&message=StackBlitz&color=2ea44f&style=for-the-badge&logo=StackBlitz",alt:"StackBlitz"})})]}),"\n",(0,i.jsx)(t.p,{children:"This project demonstrates how to handle streaming request bodies in a Go application using the Fiber framework."}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(t.p,{children:"Ensure you have the following installed:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Golang"}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/gofiber/fiber",children:"Fiber"})," package"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Clone the repository:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"git clone https://github.com/gofiber/recipes.git\ncd recipes/stream-request-body\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Install dependencies:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"go get\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"running-the-application",children:"Running the Application"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Start the application:","\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"go run main.go\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.p,{children:"Here is an example of how to handle a streaming request body in Go using Fiber:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v2"\n    "io"\n    "log"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Post("/upload", func(c *fiber.Ctx) error {\n        // Open a file to write the streamed data\n        file, err := os.Create("uploaded_file")\n        if err != nil {\n            return err\n        }\n        defer file.Close()\n\n        // Stream the request body to the file\n        _, err = io.Copy(file, c.BodyStream())\n        if err != nil {\n            return err\n        }\n\n        return c.SendString("File uploaded successfully")\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://docs.gofiber.io",children:"Fiber Documentation"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://pkg.go.dev/io",children:"Go io Package Documentation"})}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},84429:function(e,t,n){n.d(t,{R:()=>l,x:()=>a});var r=n(96540);let i={},s=r.createContext(i);function l(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);