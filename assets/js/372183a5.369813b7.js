"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["55588"],{18803:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>d,toc:()=>l,default:()=>h,metadata:()=>i,assets:()=>c,contentTitle:()=>o});var i=JSON.parse('{"id":"whats_new","title":"\u{1F195} What\'s New in v3","description":"\u{1F389} Welcome","source":"@site/docs/core/whats_new.md","sourceDirName":".","slug":"/whats_new","permalink":"/next/whats_new","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/fiber/edit/main/docs/whats_new.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"sidebarPosition":2,"frontMatter":{"id":"whats_new","title":"\u{1F195} What\'s New in v3","sidebar_position":2,"toc_max_heading_level":4},"sidebar":"left_sidebar","previous":{"title":"\u{1F44B} Welcome","permalink":"/next/"},"next":{"title":"\u{1F6E0}\uFE0F API","permalink":"/next/category/\uFE0F-api"}}'),s=r(74848),t=r(84429);let d={id:"whats_new",title:"\u{1F195} What's New in v3",sidebar_position:2,toc_max_heading_level:4},o,c={},l=[{value:"\u{1F389} Welcome",id:"-welcome",level:2},{value:"\u{1F6E0}\uFE0F Migration tool",id:"\uFE0F-migration-tool",level:3},{value:"Drop for old Go versions",id:"drop-for-old-go-versions",level:2},{value:"\u{1F680} App",id:"-app",level:2},{value:"New Methods",id:"new-methods",level:3},{value:"Custom Route Constraints",id:"custom-route-constraints",level:4},{value:"Removed Methods",id:"removed-methods",level:3},{value:"Method Changes",id:"method-changes",level:3},{value:"Custom Ctx Interface in Fiber v3",id:"custom-ctx-interface-in-fiber-v3",level:3},{value:"Idea Behind Custom Ctx Classes",id:"idea-behind-custom-ctx-classes",level:4},{value:"NewWithCustomCtx",id:"newwithcustomctx",level:4},{value:"Configurable TLS Minimum Version",id:"configurable-tls-minimum-version",level:3},{value:"TLS AutoCert support (ACME / Let&#39;s Encrypt)",id:"tls-autocert-support-acme--lets-encrypt",level:4},{value:"MIME Constants",id:"mime-constants",level:3},{value:"\u{1F3A3} Hooks",id:"-hooks",level:2},{value:"\u{1F680} Listen",id:"-listen",level:2},{value:"\u{1F5FA} Router",id:"-router",level:2},{value:"Handler compatibility",id:"handler-compatibility",level:3},{value:"Route chaining",id:"route-chaining",level:3},{value:"Automatic HEAD routes for GET",id:"automatic-head-routes-for-get",level:3},{value:"Middleware registration",id:"middleware-registration",level:3},{value:"Test Config",id:"test-config",level:3},{value:"\u{1F9E0} Context",id:"-context",level:2},{value:"New Features",id:"new-features",level:3},{value:"New Methods",id:"new-methods-1",level:3},{value:"Removed Methods",id:"removed-methods-1",level:3},{value:"Changed Methods",id:"changed-methods",level:3},{value:"SendEarlyHints",id:"sendearlyhints",level:3},{value:"SendStreamWriter",id:"sendstreamwriter",level:3},{value:"Drop",id:"drop",level:3},{value:"End",id:"end",level:3},{value:"\u{1F4CE} Binding",id:"-binding",level:2},{value:"New Features",id:"new-features-1",level:3},{value:"\u{1F52C} Extractors Package",id:"-extractors-package",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Available Extractors",id:"available-extractors",level:3},{value:"Usage Example",id:"usage-example",level:3},{value:"Migration from Middleware-Specific Extractors",id:"migration-from-middleware-specific-extractors",level:3},{value:"\u{1F504} Redirect",id:"-redirect",level:2},{value:"New Methods",id:"new-methods-2",level:3},{value:"Changed behavior",id:"changed-behavior",level:3},{value:"\u{1F30E} Client package",id:"-client-package",level:2},{value:"Fasthttp transport integration",id:"fasthttp-transport-integration",level:3},{value:"\u{1F9F0} Generic functions",id:"-generic-functions",level:2},{value:"New Generic Functions",id:"new-generic-functions",level:3},{value:"Example",id:"example",level:3},{value:"\u{1F6E0}\uFE0F Utils",id:"utils",level:2},{value:"\u{1F961} Services",id:"-services",level:2},{value:"Example",id:"example-1",level:3},{value:"\u{1F4C3} Log",id:"-log",level:2},{value:"\u{1F4E6} Storage Interface",id:"-storage-interface",level:2},{value:"\u{1F9EC} Middlewares",id:"-middlewares",level:2},{value:"Important Change for Accessing Middleware Data",id:"important-change-for-accessing-middleware-data",level:3},{value:"Adaptor",id:"adaptor",level:3},{value:"BasicAuth",id:"basicauth",level:3},{value:"Cache",id:"cache",level:3},{value:"CORS",id:"cors",level:3},{value:"New Struct Fields",id:"new-struct-fields",level:4},{value:"Updated Struct Fields",id:"updated-struct-fields",level:4},{value:"Compression",id:"compression",level:3},{value:"CSRF",id:"csrf",level:3},{value:"Idempotency",id:"idempotency",level:3},{value:"EncryptCookie",id:"encryptcookie",level:3},{value:"EnvVar",id:"envvar",level:3},{value:"Filesystem",id:"filesystem",level:3},{value:"Healthcheck",id:"healthcheck",level:3},{value:"KeyAuth",id:"keyauth",level:3},{value:"Logger",id:"logger",level:3},{value:"Logging Middleware Values (e.g., Request ID)",id:"logging-middleware-values-eg-request-id",level:4},{value:"Predefined Formats",id:"predefined-formats",level:4},{value:"Limiter",id:"limiter",level:3},{value:"Monitor",id:"monitor",level:3},{value:"Proxy",id:"proxy",level:3},{value:"Session",id:"session",level:3},{value:"Key Updates",id:"key-updates",level:4},{value:"Session",id:"session-1",level:3},{value:"Key Changes",id:"key-changes",level:4},{value:"Timeout",id:"timeout",level:3},{value:"\u{1F50C} Addons",id:"-addons",level:2},{value:"Retry",id:"retry",level:3},{value:"\u{1F4CB} Migration guide",id:"-migration-guide",level:2},{value:"Options",id:"options",level:3},{value:"Changes Overview",id:"changes-overview",level:3},{value:"\u{1F680} App",id:"-app-1",level:3},{value:"Static",id:"static",level:4},{value:"Trusted Proxies",id:"trusted-proxies",level:4},{value:"\u{1F3A3} Hooks",id:"-hooks-1",level:3},{value:"\u{1F680} Listen",id:"-listen-1",level:3},{value:"\u{1F5FA} Router",id:"-router-1",level:3},{value:"Direct <code>net/http</code> handlers",id:"direct-nethttp-handlers",level:4},{value:"Middleware Registration",id:"middleware-registration-1",level:4},{value:"Mounting",id:"mounting",level:4},{value:"Route Chaining",id:"route-chaining-1",level:4},{value:"\u{1F5FA} RebuildTree",id:"-rebuildtree",level:3},{value:"Example Usage",id:"example-usage",level:4},{value:"RemoveRoute",id:"removeroute",level:2},{value:"\u{1F9E0} Context",id:"-context-1",level:3},{value:"\u{1F4CE} Parser",id:"-parser",level:4},{value:"Migration Instructions",id:"migration-instructions",level:5},{value:"\u{1F504} Redirect",id:"-redirect-1",level:4},{value:"Migration Instructions",id:"migration-instructions-1",level:5},{value:"\u{1F9FE} Log",id:"-log-1",level:4},{value:"\u{1F30E} Client package",id:"-client-package-1",level:3},{value:"New Features",id:"new-features-2",level:4},{value:"Migration Instructions",id:"migration-instructions-2",level:4},{value:"\u{1F6E0}\uFE0F Utils",id:"utils-migration",level:3},{value:"\u{1F9EC} Middlewares",id:"-middlewares-1",level:3},{value:"Important Change for Accessing Middleware Data",id:"important-change-for-accessing-middleware-data-1",level:4},{value:"BasicAuth",id:"basicauth-1",level:4},{value:"KeyAuth",id:"keyauth-1",level:4},{value:"Cache",id:"cache-1",level:4},{value:"CORS",id:"cors-1",level:4},{value:"CSRF",id:"csrf-1",level:4},{value:"Idempotency",id:"idempotency-1",level:4},{value:"Timeout",id:"timeout-1",level:4},{value:"Filesystem",id:"filesystem-1",level:4},{value:"EnvVar",id:"envvar-1",level:4},{value:"Healthcheck",id:"healthcheck-1",level:4},{value:"Monitor",id:"monitor-1",level:4},{value:"Proxy",id:"proxy-1",level:4},{value:"Before (v2 usage)",id:"before-v2-usage",level:4},{value:"After (v3 usage)",id:"after-v3-usage",level:4},{value:"Session",id:"session-2",level:4}];function a(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-welcome",children:"\u{1F389} Welcome"}),"\n",(0,s.jsx)(n.p,{children:"We are excited to announce the release of Fiber v3! \u{1F680}"}),"\n",(0,s.jsxs)(n.p,{children:["In this guide, we'll walk you through the most important changes in Fiber ",(0,s.jsx)(n.code,{children:"v3"})," and show you how to migrate your existing Fiber ",(0,s.jsx)(n.code,{children:"v2"})," applications to Fiber ",(0,s.jsx)(n.code,{children:"v3"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"\uFE0F-migration-tool",children:"\u{1F6E0}\uFE0F Migration tool"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 introduces a CLI-powered migration helper. Install the CLI and let\nit update your project automatically:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"go install github.com/gofiber/cli/fiber@latest\nfiber migrate --to v3.0.0-rc.2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"#-migration-guide",children:"migration guide"})," for more details and options."]}),"\n",(0,s.jsxs)(n.p,{children:["Here's a quick overview of the changes in Fiber ",(0,s.jsx)(n.code,{children:"v3"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-app",children:"\u{1F680} App"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-hooks",children:"\u{1F3A3} Hooks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-listen",children:"\u{1F680} Listen"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-router",children:"\u{1F5FA}\uFE0F Router"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-context",children:"\u{1F9E0} Context"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-binding",children:"\u{1F4CE} Binding"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-extractors-package",children:"\u{1F52C} Extractors Package"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-redirect",children:"\u{1F504}\uFE0F Redirect"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-client-package",children:"\u{1F30E} Client package"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-generic-functions",children:"\u{1F9F0} Generic functions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#utils",children:"\u{1F6E0}\uFE0F Utils"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-services",children:"\u{1F961} Services"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-log",children:"\u{1F4C3} Log"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-storage-interface",children:"\u{1F4E6} Storage Interface"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#-middlewares",children:"\u{1F9EC} Middlewares"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#important-change-for-accessing-middleware-data",children:"Important Change for Accessing Middleware Data"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#adaptor",children:"Adaptor"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#basicauth",children:"BasicAuth"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#cache",children:"Cache"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#cors",children:"CORS"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#csrf",children:"CSRF"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#compression",children:"Compression"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#encryptcookie",children:"EncryptCookie"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#filesystem",children:"Filesystem"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#healthcheck",children:"Healthcheck"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#keyauth",children:"KeyAuth"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#logger",children:"Logger"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#monitor",children:"Monitor"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#proxy",children:"Proxy"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#session",children:"Session"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-addons",children:"\u{1F50C} Addons"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-migration-guide",children:"\u{1F4CB} Migration guide"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"drop-for-old-go-versions",children:"Drop for old Go versions"}),"\n",(0,s.jsxs)(n.p,{children:["Fiber ",(0,s.jsx)(n.code,{children:"v3"})," drops support for Go versions below ",(0,s.jsx)(n.code,{children:"1.25"}),". We recommend upgrading to Go ",(0,s.jsx)(n.code,{children:"1.25"})," or higher to use Fiber ",(0,s.jsx)(n.code,{children:"v3"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"-app",children:"\u{1F680} App"}),"\n",(0,s.jsx)(n.p,{children:"We have made several changes to the Fiber app, including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Listen"}),": The ",(0,s.jsx)(n.code,{children:"Listen"})," method has been unified with the configuration, allowing for more streamlined setup."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Static"}),": The ",(0,s.jsx)(n.code,{children:"Static"})," method has been removed and its functionality has been moved to the ",(0,s.jsx)(n.a,{href:"/next/middleware/static",children:"static middleware"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"app.Config properties"}),": Several properties have been moved to the listen configuration:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"DisableStartupMessage"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"EnablePrefork"})," (previously ",(0,s.jsx)(n.code,{children:"Prefork"}),")"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"EnablePrintRoutes"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ListenerNetwork"})," (previously ",(0,s.jsx)(n.code,{children:"Network"}),")"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Trusted Proxy Configuration"}),": The ",(0,s.jsx)(n.code,{children:"EnabledTrustedProxyCheck"})," has been moved to ",(0,s.jsx)(n.code,{children:"app.Config.TrustProxy"}),", and ",(0,s.jsx)(n.code,{children:"TrustedProxies"})," has been moved to ",(0,s.jsx)(n.code,{children:"TrustProxyConfig.Proxies"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"XMLDecoder Config Property"}),": The ",(0,s.jsx)(n.code,{children:"XMLDecoder"})," property has been added to allow usage of 3rd-party XML libraries in XML binder."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"new-methods",children:"New Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RegisterCustomBinder"}),": Allows for the registration of custom binders."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RegisterCustomConstraint"}),": Allows for the registration of custom constraints."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NewWithCustomCtx"}),": Initialize an app with a custom context in one step."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State"}),": Provides a global state for the application, which can be used to store and retrieve data across the application. Check out the ",(0,s.jsx)(n.a,{href:"./api/state",children:"State"})," method for further details."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NewErrorf"}),": Allows variadic parameters when creating formatted errors."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GetBytes / GetString"}),": Helpers that detach values only when ",(0,s.jsx)(n.code,{children:"Immutable"})," is enabled and the data still references request or response buffers. Access via ",(0,s.jsx)(n.code,{children:"c.App().GetString"})," and ",(0,s.jsx)(n.code,{children:"c.App().GetBytes"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"custom-route-constraints",children:"Custom Route Constraints"}),"\n",(0,s.jsxs)(n.p,{children:["Custom route constraints enable you to define your own validation rules for route parameters.\nUse ",(0,s.jsx)(n.code,{children:"RegisterCustomConstraint"})," to add a constraint type that implements the ",(0,s.jsx)(n.code,{children:"CustomConstraint"})," interface."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'type UlidConstraint struct {\n    fiber.CustomConstraint\n}\n\nfunc (*UlidConstraint) Name() string {\n    return "ulid"\n}\n\nfunc (*UlidConstraint) Execute(param string, args ...string) bool {\n    _, err := ulid.Parse(param)\n    return err == nil\n}\n\napp.RegisterCustomConstraint(&UlidConstraint{})\n\napp.Get("/login/:id<ulid>", func(c fiber.Ctx) error {\n    return c.SendString("User " + c.Params("id"))\n})\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"removed-methods",children:"Removed Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mount"}),": Use ",(0,s.jsx)(n.code,{children:"app.Use()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ListenTLS"}),": Use ",(0,s.jsx)(n.code,{children:"app.Listen()"})," with ",(0,s.jsx)(n.code,{children:"tls.Config"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ListenTLSWithCertificate"}),": Use ",(0,s.jsx)(n.code,{children:"app.Listen()"})," with ",(0,s.jsx)(n.code,{children:"tls.Config"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ListenMutualTLS"}),": Use ",(0,s.jsx)(n.code,{children:"app.Listen()"})," with ",(0,s.jsx)(n.code,{children:"tls.Config"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ListenMutualTLSWithCertificate"}),": Use ",(0,s.jsx)(n.code,{children:"app.Listen()"})," with ",(0,s.jsx)(n.code,{children:"tls.Config"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"method-changes",children:"Method Changes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test"}),": The ",(0,s.jsx)(n.code,{children:"Test"})," method has replaced the timeout parameter with a configuration parameter. ",(0,s.jsx)(n.code,{children:"0"})," or lower represents no timeout."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Listen"}),": Now has a configuration parameter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Listener"}),": Now has a configuration parameter."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"custom-ctx-interface-in-fiber-v3",children:"Custom Ctx Interface in Fiber v3"}),"\n",(0,s.jsxs)(n.p,{children:["Fiber v3 introduces a customizable ",(0,s.jsx)(n.code,{children:"Ctx"})," interface, allowing developers to extend and modify the context to fit their needs. This feature provides greater flexibility and control over request handling."]}),"\n",(0,s.jsx)(n.h4,{id:"idea-behind-custom-ctx-classes",children:"Idea Behind Custom Ctx Classes"}),"\n",(0,s.jsxs)(n.p,{children:["The idea behind custom ",(0,s.jsx)(n.code,{children:"Ctx"})," classes is to give developers the ability to extend the default context with additional methods and properties tailored to the specific requirements of their application. This allows for better request handling and easier implementation of specific logic."]}),"\n",(0,s.jsx)(n.h4,{id:"newwithcustomctx",children:"NewWithCustomCtx"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"NewWithCustomCtx"})," creates the application and sets the custom context factory at initialization time."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Signature"',children:"func NewWithCustomCtx(fn func(app *App) CustomCtx, config ...Config) *App\n"})}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "log"\n    "github.com/gofiber/fiber/v3"\n)\n\ntype CustomCtx struct {\n    fiber.Ctx\n}\n\nfunc (c *CustomCtx) CustomMethod() string {\n    return "custom value"\n}\n\nfunc main() {\n    app := fiber.NewWithCustomCtx(func(app *fiber.App) fiber.Ctx {\n        return &CustomCtx{\n            Ctx: *fiber.NewCtx(app),\n        }\n    })\n\n    app.Get("/", func(c fiber.Ctx) error {\n        customCtx := c.(*CustomCtx)\n        return c.SendString(customCtx.CustomMethod())\n    })\n\n    log.Fatal(app.Listen(":3000"))\n}\n'})}),(0,s.jsxs)(n.p,{children:["This example creates a ",(0,s.jsx)(n.code,{children:"CustomCtx"})," with an extra ",(0,s.jsx)(n.code,{children:"CustomMethod"})," and initializes the app with ",(0,s.jsx)(n.code,{children:"NewWithCustomCtx"}),"."]})]}),"\n",(0,s.jsx)(n.h3,{id:"configurable-tls-minimum-version",children:"Configurable TLS Minimum Version"}),"\n",(0,s.jsx)(n.p,{children:"We have added support for configuring the TLS minimum version. This field allows you to set the TLS minimum version for TLSAutoCert and the server listener."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.Listen(":444", fiber.ListenConfig{TLSMinVersion: tls.VersionTLS12})\n'})}),"\n",(0,s.jsx)(n.h4,{id:"tls-autocert-support-acme--lets-encrypt",children:"TLS AutoCert support (ACME / Let's Encrypt)"}),"\n",(0,s.jsx)(n.p,{children:"We have added native support for automatic certificates management from Let's Encrypt and any other ACME-based providers."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Certificate manager\ncertManager := &autocert.Manager{\n    Prompt: autocert.AcceptTOS,\n    // Replace with your domain name\n    HostPolicy: autocert.HostWhitelist("example.com"),\n    // Folder to store the certificates\n    Cache: autocert.DirCache("./certs"),\n}\n\napp.Listen(":444", fiber.ListenConfig{\n    AutoCertManager:    certManager,\n})\n'})}),"\n",(0,s.jsx)(n.h3,{id:"mime-constants",children:"MIME Constants"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"MIMEApplicationJavaScript"})," and ",(0,s.jsx)(n.code,{children:"MIMEApplicationJavaScriptCharsetUTF8"})," are deprecated. Use ",(0,s.jsx)(n.code,{children:"MIMETextJavaScript"})," and ",(0,s.jsx)(n.code,{children:"MIMETextJavaScriptCharsetUTF8"})," instead."]}),"\n",(0,s.jsx)(n.h2,{id:"-hooks",children:"\u{1F3A3} Hooks"}),"\n",(0,s.jsx)(n.p,{children:"We have made several changes to the Fiber hooks, including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Added new shutdown hooks to provide better control over the shutdown process:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OnPreShutdown"})," - Executes before the server starts shutting down"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OnPostShutdown"})," - Executes after the server has shut down, receives any shutdown error"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Deprecated ",(0,s.jsx)(n.code,{children:"OnShutdown"})," in favor of the new pre/post shutdown hooks"]}),"\n",(0,s.jsx)(n.li,{children:"Improved shutdown hook execution order and reliability"}),"\n",(0,s.jsx)(n.li,{children:"Added mutex protection for hook registration and execution"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Important: When using shutdown hooks, ensure app.Listen() is called in a separate goroutine:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Correct usage\ngo app.Listen(":3000")\n// ... register shutdown hooks\napp.Shutdown()\n\n// Incorrect usage - hooks won\'t work\napp.Listen(":3000") // This blocks\napp.Shutdown()      // Never reached\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-listen",children:"\u{1F680} Listen"}),"\n",(0,s.jsx)(n.p,{children:"We have made several changes to the Fiber listen, including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Removed ",(0,s.jsx)(n.code,{children:"OnShutdownError"})," and ",(0,s.jsx)(n.code,{children:"OnShutdownSuccess"})," from ",(0,s.jsx)(n.code,{children:"ListenerConfig"})," in favor of using ",(0,s.jsx)(n.code,{children:"OnPostShutdown"})," hook which receives the shutdown error"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app := fiber.New()\n\n// Before - using ListenerConfig callbacks\napp.Listen(":3000", fiber.ListenerConfig{\n    OnShutdownError: func(err error) {\n        log.Printf("Shutdown error: %v", err)\n    },\n    OnShutdownSuccess: func() {\n        log.Println("Shutdown successful")\n    },\n})\n\n// After - using OnPostShutdown hook\napp.Hooks().OnPostShutdown(func(err error) error {\n    if err != nil {\n        log.Printf("Shutdown error: %v", err)\n    } else {\n        log.Println("Shutdown successful")\n    }\n    return nil\n})\ngo app.Listen(":3000")\n'})}),"\n",(0,s.jsx)(n.p,{children:"This change simplifies the shutdown handling by consolidating the shutdown callbacks into a single hook that receives the error status."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Added support for Unix domain sockets via ",(0,s.jsx)(n.code,{children:"ListenerNetwork"})," and ",(0,s.jsx)(n.code,{children:"UnixSocketFileMode"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// v2 - Requires manual deletion of old file and permissions change\napp := fiber.New(fiber.Config{\n    Network: "unix",\n})\n\nos.Remove("app.sock")\napp.Hooks().OnListen(func(fiber.ListenData) error {\n    return os.Chmod("app.sock", 0770)\n})\napp.Listen("app.sock")\n\n// v3 - Fiber does it for you\napp := fiber.New()\napp.Listen("app.sock", fiber.ListenerConfig{\n    ListenerNetwork:    fiber.NetworkUnix,\n    UnixSocketFileMode: 0770,\n})\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-router",children:"\u{1F5FA} Router"}),"\n",(0,s.jsx)(n.p,{children:"We have slightly adapted our router interface"}),"\n",(0,s.jsx)(n.h3,{id:"handler-compatibility",children:"Handler compatibility"}),"\n",(0,s.jsxs)(n.p,{children:["Fiber now ships with a routing adapter (see ",(0,s.jsx)(n.code,{children:"adapter.go"}),") that understands native Fiber handlers alongside ",(0,s.jsx)(n.code,{children:"net/http"})," and ",(0,s.jsx)(n.code,{children:"fasthttp"})," handlers. Route registration helpers accept a required ",(0,s.jsx)(n.code,{children:"handler"})," argument plus optional additional ",(0,s.jsx)(n.code,{children:"handlers"}),", all typed as ",(0,s.jsx)(n.code,{children:"any"}),", and the adapter transparently converts supported handler styles so you can keep using the ecosystem functions you're familiar with."]}),"\n",(0,s.jsxs)(n.p,{children:["To align even closer with Express, you can also register handlers that accept the new ",(0,s.jsx)(n.code,{children:"fiber.Req"})," and ",(0,s.jsx)(n.code,{children:"fiber.Res"})," helper interfaces. The adapter understands both two-argument (",(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res)"}),") and three-argument (",(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func() error)"}),") callbacks, regardless of whether they return an ",(0,s.jsx)(n.code,{children:"error"}),". When you include the optional ",(0,s.jsx)(n.code,{children:"next"})," callback, Fiber wires it to ",(0,s.jsx)(n.code,{children:"c.Next()"})," for you so middleware continues to behave as expected. If your handler returns an ",(0,s.jsx)(n.code,{children:"error"}),", the value returned from the injected ",(0,s.jsx)(n.code,{children:"next()"})," bubbles straight back to the caller. When your handler omits an ",(0,s.jsx)(n.code,{children:"error"})," return, Fiber records the result of ",(0,s.jsx)(n.code,{children:"next()"})," and returns it after your function exits so downstream failures still propagate."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Case"}),(0,s.jsx)(n.th,{children:"Handler signature"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fiber.Handler"})}),(0,s.jsx)(n.td,{children:"Native Fiber handler."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(fiber.Ctx)"})}),(0,s.jsx)(n.td,{children:"Fiber handler without an error return."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res) error"})}),(0,s.jsx)(n.td,{children:"Express-style request handler with error return."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"4"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res)"})}),(0,s.jsx)(n.td,{children:"Express-style request handler without error return."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"5"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func() error) error"})}),(0,s.jsxs)(n.td,{children:["Express-style middleware with an error-returning ",(0,s.jsx)(n.code,{children:"next"})," callback and handler error return."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"6"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func() error)"})}),(0,s.jsxs)(n.td,{children:["Express-style middleware with an error-returning ",(0,s.jsx)(n.code,{children:"next"})," callback."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"7"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func()) error"})}),(0,s.jsxs)(n.td,{children:["Express-style middleware with a no-argument ",(0,s.jsx)(n.code,{children:"next"})," callback and handler error return."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"8"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(fiber.Req, fiber.Res, func())"})}),(0,s.jsxs)(n.td,{children:["Express-style middleware with a no-argument ",(0,s.jsx)(n.code,{children:"next"})," callback."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"9"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"http.HandlerFunc"})}),(0,s.jsxs)(n.td,{children:["Standard-library handler function adapted through ",(0,s.jsx)(n.code,{children:"fasthttpadaptor"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"http.Handler"})}),(0,s.jsx)(n.td,{children:"Standard-library handler implementation; pointer receivers must be non-nil."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"11"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(http.ResponseWriter, *http.Request)"})}),(0,s.jsxs)(n.td,{children:["Standard-library function handlers via ",(0,s.jsx)(n.code,{children:"fasthttpadaptor"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"12"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fasthttp.RequestHandler"})}),(0,s.jsx)(n.td,{children:"Direct fasthttp handler without error return."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"13"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"func(*fasthttp.RequestCtx) error"})}),(0,s.jsx)(n.td,{children:"fasthttp handler that returns an error to Fiber."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"route-chaining",children:"Route chaining"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"RouteChain"})," is a new helper inspired by ",(0,s.jsx)(n.a,{href:"https://expressjs.com/en/api.html#app.route",children:(0,s.jsx)(n.code,{children:"Express"})})," that makes it easy to declare a stack of handlers on the same path, while the existing ",(0,s.jsx)(n.code,{children:"Route"})," helper stays available for prefix encapsulation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"RouteChain(path string) Register\n"})}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.RouteChain("/api").RouteChain("/user/:id?")\n    .Get(func(c fiber.Ctx) error {\n        // Get user\n        return c.JSON(fiber.Map{"message": "Get user", "id": c.Params("id")})\n    })\n    .Post(func(c fiber.Ctx) error {\n        // Create user\n        return c.JSON(fiber.Map{"message": "User created"})\n    })\n    .Put(func(c fiber.Ctx) error {\n        // Update user\n        return c.JSON(fiber.Map{"message": "User updated", "id": c.Params("id")})\n    })\n    .Delete(func(c fiber.Ctx) error {\n        // Delete user\n        return c.JSON(fiber.Map{"message": "User deleted", "id": c.Params("id")})\n    })\n'})})]}),"\n",(0,s.jsxs)(n.p,{children:["You can find more information about ",(0,s.jsx)(n.code,{children:"app.RouteChain"})," and ",(0,s.jsx)(n.code,{children:"app.Route"})," in the API documentation (",(0,s.jsx)(n.a,{href:"./api/app#routechain",children:"RouteChain"}),", ",(0,s.jsx)(n.a,{href:"./api/app#route",children:"Route"}),")."]}),"\n",(0,s.jsx)(n.h3,{id:"automatic-head-routes-for-get",children:"Automatic HEAD routes for GET"}),"\n",(0,s.jsxs)(n.p,{children:["Fiber now auto-registers a ",(0,s.jsx)(n.code,{children:"HEAD"})," route whenever you add a ",(0,s.jsx)(n.code,{children:"GET"})," route. The generated handler chain matches the ",(0,s.jsx)(n.code,{children:"GET"})," chain so status codes and headers stay in sync while the response body remains empty, ensuring ",(0,s.jsx)(n.code,{children:"HEAD"})," clients observe the same metadata as a ",(0,s.jsx)(n.code,{children:"GET"})," consumer."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="GET now enables HEAD automatically"',children:'app := fiber.New()\n\napp.Get("/health", func(c fiber.Ctx) error {\n    c.Set("X-Service", "api")\n    return c.SendString("OK")\n})\n\n// HEAD /health reuses the GET middleware chain and returns headers only.\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can still register explicit ",(0,s.jsx)(n.code,{children:"HEAD"})," handlers for any ",(0,s.jsx)(n.code,{children:"GET"})," route, and they continue to win when you add them:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Override the generated HEAD handler"',children:'app.Head("/health", func(c fiber.Ctx) error {\n    return c.SendStatus(fiber.StatusNoContent)\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Prefer to manage ",(0,s.jsx)(n.code,{children:"HEAD"})," routes yourself? Disable the feature through ",(0,s.jsx)(n.code,{children:"fiber.Config.DisableHeadAutoRegister"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",metastring:'title="Disable automatic HEAD registration"',children:'handler := func(c fiber.Ctx) error {\n    c.Set("X-Service", "api")\n    return c.SendString("OK")\n}\n\napp := fiber.New(fiber.Config{DisableHeadAutoRegister: true})\napp.Get("/health", handler) // HEAD /health now returns 405 unless you add it manually.\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Auto-generated ",(0,s.jsx)(n.code,{children:"HEAD"})," routes appear in tooling such as ",(0,s.jsx)(n.code,{children:"app.Stack()"})," and cover the same routing scenarios as their ",(0,s.jsx)(n.code,{children:"GET"})," counterparts, including groups, mounted apps, dynamic parameters, and static file handlers."]}),"\n",(0,s.jsx)(n.h3,{id:"middleware-registration",children:"Middleware registration"}),"\n",(0,s.jsxs)(n.p,{children:["We have aligned our method for middlewares closer to ",(0,s.jsx)(n.a,{href:"https://expressjs.com/en/api.html#app.use",children:(0,s.jsx)(n.code,{children:"Express"})})," and now also support the ",(0,s.jsx)(n.a,{href:"./api/app#use",children:(0,s.jsx)(n.code,{children:"Use"})})," of multiple prefixes."]}),"\n",(0,s.jsxs)(n.p,{children:["Prefix matching is now stricter: partial matches must end at a slash boundary (or be an exact match). This keeps ",(0,s.jsx)(n.code,{children:"/api"})," middleware from running on ",(0,s.jsx)(n.code,{children:"/apiv1"})," while still allowing ",(0,s.jsx)(n.code,{children:"/api/:version"})," style patterns that leverage route parameters, optional segments, or wildcards."]}),"\n",(0,s.jsxs)(n.p,{children:["Registering a subapp is now also possible via the ",(0,s.jsx)(n.a,{href:"./api/app#use",children:(0,s.jsx)(n.code,{children:"Use"})})," method instead of the old ",(0,s.jsx)(n.code,{children:"app.Mount"})," method."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// register multiple prefixes\napp.Use(["/v1", "/v2"], func(c fiber.Ctx) error {\n    // Middleware for /v1 and /v2\n    return c.Next()\n})\n\n// define subapp\napi := fiber.New()\napi.Get("/user", func(c fiber.Ctx) error {\n    return c.SendString("User")\n})\n// register subapp\napp.Use("/api", api)\n'})})]}),"\n",(0,s.jsxs)(n.p,{children:["To enable the routing changes above we had to slightly adjust the signature of the ",(0,s.jsx)(n.code,{children:"Add"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"-    Add(method, path string, handlers ...Handler) Router\n+    Add(methods []string, path string, handler any, handlers ...any) Router\n"})}),"\n",(0,s.jsx)(n.h3,{id:"test-config",children:"Test Config"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"app.Test()"})," method now allows users to customize their test configurations:"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Create a test app with a handler to test\napp := fiber.New()\napp.Get("/", func(c fiber.Ctx) {\n    return c.SendString("hello world")\n})\n\n// Define the HTTP request and custom TestConfig to test the handler\nreq := httptest.NewRequest(MethodGet, "/", nil)\ntestConfig := fiber.TestConfig{\n    Timeout:       0,\n    FailOnTimeout: false,\n}\n\n// Test the handler using the request and testConfig\nresp, err := app.Test(req, testConfig)\n'})})]}),"\n",(0,s.jsxs)(n.p,{children:["To provide configurable testing capabilities, we had to change\nthe signature of the ",(0,s.jsx)(n.code,{children:"Test"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"-    Test(req *http.Request, timeout ...time.Duration) (*http.Response, error)\n+    Test(req *http.Request, config ...fiber.TestConfig) (*http.Response, error)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TestConfig"})," struct provides the following configuration options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Timeout"}),": The duration to wait before timing out the test. Use 0 for no timeout."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FailOnTimeout"}),": Controls the behavior when a timeout occurs:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When true, the test will return an ",(0,s.jsx)(n.code,{children:"os.ErrDeadlineExceeded"})," if the test exceeds the ",(0,s.jsx)(n.code,{children:"Timeout"})," duration."]}),"\n",(0,s.jsx)(n.li,{children:"When false, the test will return the partial response received before timing out."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If a custom ",(0,s.jsx)(n.code,{children:"TestConfig"})," isn't provided, then the following will be used:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"testConfig := fiber.TestConfig{\n    Timeout:       time.Second,\n    FailOnTimeout: true,\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," Using this default is ",(0,s.jsx)(n.strong,{children:"NOT"})," the same as providing an empty ",(0,s.jsx)(n.code,{children:"TestConfig"})," as an argument to ",(0,s.jsx)(n.code,{children:"app.Test()"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["An empty ",(0,s.jsx)(n.code,{children:"TestConfig"})," is the equivalent of:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"testConfig := fiber.TestConfig{\n    Timeout:       0,\n    FailOnTimeout: false,\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-context",children:"\u{1F9E0} Context"}),"\n",(0,s.jsx)(n.h3,{id:"new-features",children:"New Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Cookie now allows Partitioned cookies for ",(0,s.jsx)(n.a,{href:"https://developers.google.com/privacy-sandbox/3pcd/chips",children:"CHIPS"})," support. CHIPS (Cookies Having Independent Partitioned State) is a feature that improves privacy by allowing cookies to be partitioned by top-level site, mitigating cross-site tracking."]}),"\n",(0,s.jsxs)(n.li,{children:["Cookie automatic security enforcement: When setting a cookie with ",(0,s.jsx)(n.code,{children:"SameSite=None"}),", Fiber automatically sets ",(0,s.jsx)(n.code,{children:"Secure=true"}),' as required by RFC 6265bis and modern browsers (Chrome, Firefox, Safari). This ensures compliance with the "None" SameSite policy. See ',(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#none",children:"Mozilla docs"})," and ",(0,s.jsx)(n.a,{href:"https://developers.google.com/search/blog/2020/01/get-ready-for-new-samesitenone-secure",children:"Chrome docs"})," for details."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Ctx"})," now implements the ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/context#Context",children:"context.Context"})," interface, replacing the former ",(0,s.jsx)(n.code,{children:"UserContext"})," helpers."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"new-methods-1",children:"New Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AutoFormat"}),": Similar to Express.js, automatically formats the response based on the request's ",(0,s.jsx)(n.code,{children:"Accept"})," header."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deadline"}),": For implementing ",(0,s.jsx)(n.code,{children:"context.Context"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Done"}),": For implementing ",(0,s.jsx)(n.code,{children:"context.Context"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Err"}),": For implementing ",(0,s.jsx)(n.code,{children:"context.Context"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Host"}),": Similar to Express.js, returns the host name of the request."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Port"}),": Similar to Express.js, returns the port number of the request."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"IsProxyTrusted"}),": Checks the trustworthiness of the remote IP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reset"}),": Resets context fields for server handlers."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Schema"}),": Similar to Express.js, returns the schema (HTTP or HTTPS) of the request."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SendEarlyHints"}),": Sends ",(0,s.jsx)(n.code,{children:"HTTP 103 Early Hints"})," status code with ",(0,s.jsx)(n.code,{children:"Link"})," headers so browsers can preload resources while the final response is being prepared."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SendStream"}),": Similar to Express.js, sends a stream as the response."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SendStreamWriter"}),": Sends a stream using a writer function."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SendString"}),": Similar to Express.js, sends a string as the response."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"String"}),": Similar to Express.js, converts a value to a string."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Value"}),": For implementing ",(0,s.jsx)(n.code,{children:"context.Context"}),". Returns request-scoped value from Locals."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Context()"}),": Returns a ",(0,s.jsx)(n.code,{children:"context.Context"})," that can be used outside the handler."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SetContext"}),": Sets the base ",(0,s.jsx)(n.code,{children:"context.Context"})," returned by ",(0,s.jsx)(n.code,{children:"Context()"})," for propagating deadlines or values."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ViewBind"}),": Binds data to a view, replacing the old ",(0,s.jsx)(n.code,{children:"Bind"})," method."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CBOR"}),": Introducing ",(0,s.jsx)(n.a,{href:"https://cbor.io/",children:"CBOR"})," binary encoding format for both request & response body. CBOR is a binary data serialization format which is both compact and efficient, making it ideal for use in web applications."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MsgPack"}),": Introducing ",(0,s.jsx)(n.a,{href:"https://msgpack.org/",children:"MsgPack"})," binary encoding format for both request & response body. MsgPack is a binary serialization format that is more efficient than JSON, making it ideal for high-performance applications."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Drop"}),": Terminates the client connection silently without sending any HTTP headers or response body. This can be used for scenarios where you want to block certain requests without notifying the client, such as mitigating DDoS attacks or protecting sensitive endpoints from unauthorized access."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"End"}),": Similar to Express.js, immediately flushes the current response and closes the underlying connection."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AcceptsLanguagesExtended"}),": Matches language ranges using RFC 4647 Extended Filtering with wildcard subtags."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Matched"}),": Detects when the current request path matched a registered route."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"IsMiddleware"}),": Indicates if the current handler was registered as middleware."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"HasBody"}),": Quickly checks whether the request includes a body."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"IsWebSocket"}),": Reports if the request attempts a WebSocket upgrade."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"IsPreflight"}),": Identifies CORS preflight requests before handlers run."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"removed-methods-1",children:"Removed Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AllParams"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().URI()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ParamsInt"}),": Use ",(0,s.jsx)(n.code,{children:"Params"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"QueryBool"}),": Use ",(0,s.jsx)(n.code,{children:"Query"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"QueryFloat"}),": Use ",(0,s.jsx)(n.code,{children:"Query"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"QueryInt"}),": Use ",(0,s.jsx)(n.code,{children:"Query"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"BodyParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().Body()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CookieParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().Cookie()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ParamsParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().URI()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RedirectToRoute"}),": Use ",(0,s.jsx)(n.code,{children:"c.Redirect().Route()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RedirectBack"}),": Use ",(0,s.jsx)(n.code,{children:"c.Redirect().Back()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ReqHeaderParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().Header()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UserContext"}),": Removed. ",(0,s.jsx)(n.code,{children:"Ctx"})," itself now satisfies ",(0,s.jsx)(n.code,{children:"context.Context"}),"; pass ",(0,s.jsx)(n.code,{children:"c"})," directly where a ",(0,s.jsx)(n.code,{children:"context.Context"})," is required."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SetUserContext"}),": Removed. Use ",(0,s.jsx)(n.code,{children:"SetContext"})," and ",(0,s.jsx)(n.code,{children:"Context()"})," or ",(0,s.jsx)(n.code,{children:"context.WithValue"})," on ",(0,s.jsx)(n.code,{children:"c"})," to store additional request-scoped values."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"changed-methods",children:"Changed Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bind"}),": Now used for binding instead of view binding. Use ",(0,s.jsx)(n.code,{children:"c.ViewBind()"})," for view binding."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Format"}),": Parameter changed from ",(0,s.jsx)(n.code,{children:"body interface{}"})," to ",(0,s.jsx)(n.code,{children:"handlers ...ResFmt"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Redirect"}),": Use ",(0,s.jsx)(n.code,{children:"c.Redirect().To()"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SendFile"}),": Now supports different configurations using a config parameter."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attachment and Download"}),": Non-ASCII filenames now use ",(0,s.jsx)(n.code,{children:"filename*"})," as\nspecified by ",(0,s.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc6266",children:"RFC 6266"})," and\n",(0,s.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc8187",children:"RFC 8187"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Context()"}),": Renamed to ",(0,s.jsx)(n.code,{children:"RequestCtx()"})," to access the underlying ",(0,s.jsx)(n.code,{children:"fasthttp.RequestCtx"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sendearlyhints",children:"SendEarlyHints"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"SendEarlyHints"})," sends an informational ",(0,s.jsx)(n.a,{href:"https://developer.chrome.com/docs/web-platform/early-hints",children:(0,s.jsx)(n.code,{children:"103 Early Hints"})})," response with ",(0,s.jsx)(n.code,{children:"Link"})," headers based on the provided ",(0,s.jsx)(n.code,{children:"hints"})," argument. This allows a browser to start preloading assets while the server is still preparing the final response."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'hints := []string{"<https://cdn.com/app.js>; rel=preload; as=script"}\napp.Get("/early", func(c fiber.Ctx) error {\n    if err := c.SendEarlyHints(hints); err != nil {\n        return err\n    }\n    return c.SendString("done")\n})\n'})}),"\n",(0,s.jsx)(n.p,{children:"Older HTTP/1.1 clients may ignore these interim responses or handle them inconsistently."}),"\n",(0,s.jsx)(n.h3,{id:"sendstreamwriter",children:"SendStreamWriter"}),"\n",(0,s.jsxs)(n.p,{children:["In v3, we introduced support for buffered streaming with the addition of the ",(0,s.jsx)(n.code,{children:"SendStreamWriter"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func (c Ctx) SendStreamWriter(streamWriter func(w *bufio.Writer))\n"})}),"\n",(0,s.jsx)(n.p,{children:"With this new method, you can implement:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Server-Side Events (SSE)"}),"\n",(0,s.jsx)(n.li,{children:"Large file downloads"}),"\n",(0,s.jsx)(n.li,{children:"Live data streaming"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.Get("/sse", func(c fiber.Ctx) {\n    c.Set("Content-Type", "text/event-stream")\n    c.Set("Cache-Control", "no-cache")\n    c.Set("Connection", "keep-alive")\n    c.Set("Transfer-Encoding", "chunked")\n\n    return c.SendStreamWriter(func(w *bufio.Writer) {\n        for {\n            fmt.Fprintf(w, "event: my-event\\n")\n            fmt.Fprintf(w, "data: Hello SSE\\n\\n")\n\n            if err := w.Flush(); err != nil {\n                log.Print("Client disconnected!")\n                return\n            }\n        }\n    })\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can find more details about this feature in ",(0,s.jsx)(n.a,{href:"/next/api/ctx",children:"/docs/api/ctx.md"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"drop",children:"Drop"}),"\n",(0,s.jsxs)(n.p,{children:["In v3, we introduced support to silently terminate requests through ",(0,s.jsx)(n.code,{children:"Drop"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func (c Ctx) Drop()\n"})}),"\n",(0,s.jsx)(n.p,{children:"With this method, you can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Block certain requests without notifying the client to mitigate DDoS attacks"}),"\n",(0,s.jsx)(n.li,{children:"Protect sensitive endpoints from unauthorized access without leaking errors."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["While this feature adds the ability to drop connections, it is still ",(0,s.jsx)(n.strong,{children:"highly recommended"})," to use additional\nmeasures (such as ",(0,s.jsx)(n.strong,{children:"firewalls"}),", ",(0,s.jsx)(n.strong,{children:"proxies"}),", etc.) to further protect your server endpoints by blocking\nmalicious connections before the server establishes a connection."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.Get("/", func(c fiber.Ctx) error {\n    if c.IP() == "192.168.1.1" {\n        return c.Drop()\n    }\n\n    return c.SendString("Hello World!")\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can find more details about this feature in ",(0,s.jsx)(n.a,{href:"/next/api/ctx",children:"/docs/api/ctx.md"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"end",children:"End"}),"\n",(0,s.jsxs)(n.p,{children:["In v3, we introduced a new method to match the Express.js API's ",(0,s.jsx)(n.code,{children:"res.end()"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func (c Ctx) End()\n"})}),"\n",(0,s.jsx)(n.p,{children:"With this method, you can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stop middleware from controlling the connection after a handler further up the method chain\nby immediately flushing the current response and closing the connection."}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"return c.End()"})," as an alternative to ",(0,s.jsx)(n.code,{children:"return nil"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.Use(func (c fiber.Ctx) error {\n    err := c.Next()\n    if err != nil {\n        log.Println("Got error: %v", err)\n        return c.SendString(err.Error()) // Will be unsuccessful since the response ended below\n    }\n    return nil\n})\n\napp.Get("/hello", func (c fiber.Ctx) error {\n    query := c.Query("name", "")\n    if query == "" {\n        c.SendString("You don\'t have a name?")\n        c.End() // Closes the underlying connection\n        return errors.New("No name provided")\n    }\n    return c.SendString("Hello, " + query + "!")\n})\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-binding",children:"\u{1F4CE} Binding"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 introduces a new binding mechanism that simplifies the process of binding request data to structs. The new binding system supports binding from various sources such as URL parameters, query parameters, headers, and request bodies. This unified approach makes it easier to handle different types of request data in a consistent manner."}),"\n",(0,s.jsx)(n.h3,{id:"new-features-1",children:"New Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unified binding from URL parameters, query parameters, headers, and request bodies."}),"\n",(0,s.jsx)(n.li,{children:"Support for custom binders and constraints."}),"\n",(0,s.jsx)(n.li,{children:"Improved error handling and validation."}),"\n",(0,s.jsxs)(n.li,{children:["Support multipart file binding for ",(0,s.jsx)(n.code,{children:"*multipart.FileHeader"}),", ",(0,s.jsx)(n.code,{children:"*[]*multipart.FileHeader"}),", and ",(0,s.jsx)(n.code,{children:"[]*multipart.FileHeader"})," field types."]}),"\n",(0,s.jsxs)(n.li,{children:["Support for unified binding (",(0,s.jsx)(n.code,{children:"Bind().All()"}),") with defined precedence order: (URI -> Body -> Query -> Headers -> Cookies). ",(0,s.jsx)(n.a,{href:"/next/api/bind#all",children:"Learn more"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Support MsgPack binding for request body."}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'type User struct {\n    ID    int    `params:"id"`\n    Name  string `json:"name"`\n    Email string `json:"email"`\n}\n\napp.Post("/user/:id", func(c fiber.Ctx) error {\n    var user User\n    if err := c.Bind().Body(&user); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(user)\n})\n'})}),(0,s.jsxs)(n.p,{children:["In this example, the ",(0,s.jsx)(n.code,{children:"Bind"})," method is used to bind the request body to the ",(0,s.jsx)(n.code,{children:"User"})," struct. The ",(0,s.jsx)(n.code,{children:"Body"})," method of the ",(0,s.jsx)(n.code,{children:"Bind"})," class performs the actual binding."]})]}),"\n",(0,s.jsx)(n.h2,{id:"-extractors-package",children:"\u{1F52C} Extractors Package"}),"\n",(0,s.jsxs)(n.p,{children:["Fiber v3 introduces a new shared ",(0,s.jsx)(n.code,{children:"extractors"})," package that consolidates value extraction utilities previously duplicated across middleware packages. This package provides a unified API for extracting values from headers, cookies, query parameters, form data, and URL parameters with built-in chain/fallback logic and security considerations."]}),"\n",(0,s.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unified API"}),": Single package for extracting values from headers, cookies, query parameters, form data, and URL parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Chain Logic"}),": Built-in fallback mechanism to try multiple extraction sources in order"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Source Awareness"}),": Source inspection capabilities for security-sensitive operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type Safety"}),": Strongly typed extraction with proper error handling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance"}),": Optimized extraction functions with minimal overhead"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"available-extractors",children:"Available Extractors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FromAuthHeader(authScheme string)"}),": Extract from Authorization header with scheme support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FromCookie(key string)"}),": Extract from HTTP cookies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FromParam(param string)"}),": Extract from URL path parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FromForm(param string)"}),": Extract from form data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FromHeader(header string)"}),": Extract from custom HTTP headers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FromQuery(param string)"}),": Extract from URL query parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"FromCustom(key string, extractor func(c fiber.Ctx) (string, error))"}),": Define custom extraction logic with metadata"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Chain(extractors ...Extractor)"}),": Chain multiple extractors with fallback logic"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"usage-example",children:"Usage Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'import "github.com/gofiber/fiber/v3/extractors"\n\n// Extract API key from multiple sources with fallback\napiKeyExtractor := extractors.Chain(\n    extractors.FromHeader("X-API-Key"),\n    extractors.FromQuery("api_key"),\n    extractors.FromCookie("api_key"),\n)\n\napp.Use(func(c fiber.Ctx) error {\n    apiKey, err := apiKeyExtractor.Extract(c)\n    if err != nil {\n        return c.Status(401).SendString("API key required")\n    }\n    // Use apiKey for authentication\n    return c.Next()\n})\n'})}),"\n",(0,s.jsx)(n.h3,{id:"migration-from-middleware-specific-extractors",children:"Migration from Middleware-Specific Extractors"}),"\n",(0,s.jsx)(n.p,{children:"Middleware packages in Fiber v3 now use the shared extractors package instead of maintaining their own extraction logic. This provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Code Deduplication"}),": Eliminates ~500+ lines of duplicated extraction code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistency"}),": Standardized extraction behavior across all middleware"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintainability"}),": Single source of truth for extraction logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security"}),": Unified security considerations and warnings"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-redirect",children:"\u{1F504} Redirect"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 enhances the redirect functionality by introducing new methods and improving existing ones. The new redirect methods provide more flexibility and control over the redirection process."}),"\n",(0,s.jsx)(n.h3,{id:"new-methods-2",children:"New Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Redirect().To()"}),": Redirects to a specific URL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Redirect().Route()"}),": Redirects to a named route."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Redirect().Back()"}),": Redirects to the previous URL."]}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.Get("/old", func(c fiber.Ctx) error {\n    return c.Redirect().To("/new")\n})\n\napp.Get("/new", func(c fiber.Ctx) error {\n    return c.SendString("Welcome to the new route!")\n})\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"changed-behavior",children:"Changed behavior"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["The default redirect status code has been updated from ",(0,s.jsx)(n.code,{children:"302 Found"})," to ",(0,s.jsx)(n.code,{children:"303 See Other"})," to ensure more consistent behavior across different browsers."]})}),"\n",(0,s.jsx)(n.h2,{id:"-client-package",children:"\u{1F30E} Client package"}),"\n",(0,s.jsxs)(n.p,{children:["The Gofiber client has been completely rebuilt. It includes numerous new features such as Cookiejar, request/response hooks, and more.\nYou can take a look to ",(0,s.jsx)(n.a,{href:"/next/client/rest",children:"client docs"})," to see what's new with the client."]}),"\n",(0,s.jsx)(n.h3,{id:"fasthttp-transport-integration",children:"Fasthttp transport integration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"client.NewWithHostClient"})," and ",(0,s.jsx)(n.code,{children:"client.NewWithLBClient"})," allow you to plug existing ",(0,s.jsx)(n.code,{children:"fasthttp"})," clients directly into Fiber while keeping retries, redirects, and hook logic consistent."]}),"\n",(0,s.jsx)(n.li,{children:"Dialer, TLS, and proxy helpers now update every host client inside a load balancer, so complex pools inherit the same configuration."}),"\n",(0,s.jsxs)(n.li,{children:["The Fiber client exposes ",(0,s.jsx)(n.code,{children:"Do"}),", ",(0,s.jsx)(n.code,{children:"DoTimeout"}),", ",(0,s.jsx)(n.code,{children:"DoDeadline"}),", and ",(0,s.jsx)(n.code,{children:"CloseIdleConnections"}),", matching the surface area of the wrapped fasthttp transports."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-generic-functions",children:"\u{1F9F0} Generic functions"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 introduces new generic functions that provide additional utility and flexibility for developers. These functions are designed to simplify common tasks and improve code readability."}),"\n",(0,s.jsx)(n.h3,{id:"new-generic-functions",children:"New Generic Functions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Convert"}),": Converts a value with a specified converter function and default value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Locals"}),": Retrieves or sets local values within a request context."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Params"}),": Retrieves route parameters and can handle various types of route parameters."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Query"}),": Retrieves the value of a query parameter from the request URI and can handle various types of query parameters."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GetReqHeader"}),": Returns the HTTP request header specified by the field and can handle various types of header values."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Convert"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "strconv"\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/convert", func(c fiber.Ctx) error {\n        value, err := fiber.Convert[int](c.Query("value"), strconv.Atoi, 0)\n        if err != nil {\n            return c.Status(fiber.StatusBadRequest).SendString(err.Error())\n        }\n        return c.JSON(value)\n    })\n\n    app.Listen(":3000")\n}\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'curl "http://localhost:3000/convert?value=123"\n# Output: 123\n\ncurl "http://localhost:3000/convert?value=abc"\n# Output: "failed to convert: strconv.Atoi: parsing \\"abc\\": invalid syntax"\n'})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Locals"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Use("/user/:id", func(c fiber.Ctx) error {\n        // ask database for user\n        // ...\n        // set local values from database\n        fiber.Locals[string](c, "user", "john")\n        fiber.Locals[int](c, "age", 25)\n        // ...\n\n        return c.Next()\n    })\n\n    app.Get("/user/*", func(c fiber.Ctx) error {\n        // get local values\n        name := fiber.Locals[string](c, "user")\n        age := fiber.Locals[int](c, "age")\n        // ...\n        return c.JSON(fiber.Map{"name": name, "age": age})\n    })\n\n    app.Listen(":3000")\n}\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'curl "http://localhost:3000/user/5"\n# Output: {"name":"john","age":25}\n'})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Params"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/params/:id", func(c fiber.Ctx) error {\n        id := fiber.Params[int](c, "id", 0)\n        return c.JSON(id)\n    })\n\n    app.Listen(":3000")\n}\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'curl "http://localhost:3000/params/123"\n# Output: 123\n\ncurl "http://localhost:3000/params/abc"\n# Output: 0\n'})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Query"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/query", func(c fiber.Ctx) error {\n        age := fiber.Query[int](c, "age", 0)\n        return c.JSON(age)\n    })\n\n    app.Listen(":3000")\n}\n\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'curl "http://localhost:3000/query?age=25"\n# Output: 25\n\ncurl "http://localhost:3000/query?age=abc"\n# Output: 0\n'})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"GetReqHeader"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    app.Get("/header", func(c fiber.Ctx) error {\n        userAgent := fiber.GetReqHeader[string](c, "User-Agent", "Unknown")\n        return c.JSON(userAgent)\n    })\n\n    app.Listen(":3000")\n}\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'curl -H "User-Agent: CustomAgent" "http://localhost:3000/header"\n# Output: "CustomAgent"\n\ncurl "http://localhost:3000/header"\n# Output: "Unknown"\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"utils",children:"\u{1F6E0}\uFE0F Utils"}),"\n",(0,s.jsxs)(n.p,{children:["Fiber v3 removes the built-in ",(0,s.jsx)(n.code,{children:"utils"})," directory and now imports utility helpers from the separate ",(0,s.jsx)(n.a,{href:"https://github.com/gofiber/utils",children:(0,s.jsx)(n.code,{children:"github.com/gofiber/utils/v2"})})," module. See the ",(0,s.jsx)(n.a,{href:"#utils-migration",children:"migration guide"})," for detailed replacement steps and examples."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"github.com/gofiber/utils"})," module also introduces new helpers like ",(0,s.jsx)(n.code,{children:"ParseInt"}),", ",(0,s.jsx)(n.code,{children:"ParseUint"}),", ",(0,s.jsx)(n.code,{children:"Walk"}),", ",(0,s.jsx)(n.code,{children:"ReadFile"}),", and ",(0,s.jsx)(n.code,{children:"Timestamp"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"-services",children:"\u{1F961} Services"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 introduces a new feature called Services. This feature allows developers to quickly start services that the application depends on, removing the need to manually provision things like database servers, caches, or message brokers, to name a few."}),"\n",(0,s.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Adding a service"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "strconv"\n    "github.com/gofiber/fiber/v3"\n)\n\ntype myService struct {\n    img string\n    // ...\n}\n\n// Start initializes and starts the service. It implements the [fiber.Service] interface.\nfunc (s *myService) Start(ctx context.Context) error {\n    // start the service\n    return nil\n}\n\n// String returns a string representation of the service.\n// It is used to print a human-readable name of the service in the startup message.\n// It implements the [fiber.Service] interface.\nfunc (s *myService) String() string {\n    return s.img\n}\n\n// State returns the current state of the service.\n// It implements the [fiber.Service] interface.\nfunc (s *myService) State(ctx context.Context) (string, error) {\n    return "running", nil\n}\n\n// Terminate stops and removes the service. It implements the [fiber.Service] interface.\nfunc (s *myService) Terminate(ctx context.Context) error {\n    // stop the service\n    return nil\n}\n\nfunc main() {\n    cfg := &fiber.Config{}\n\n    cfg.Services = append(cfg.Services, &myService{img: "postgres:latest"})\n    cfg.Services = append(cfg.Services, &myService{img: "redis:latest"})\n\n    app := fiber.New(*cfg)\n\n    // ...\n}\n'})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Output"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"$ go run . -v\n\n    _______ __\n   / ____(_) /_  ___  _____\n  / /_  / / __ \\/ _ \\/ ___/\n / __/ / / /_/ /  __/ /\n/_/   /_/_.___/\\___/_/          v3.0.0\n--------------------------------------------------\nINFO Server started on:         http://127.0.0.1:3000 (bound on host 0.0.0.0 and port 3000)\nINFO Services:     2\nINFO   \u{1F961} [ RUNNING ] postgres:latest\nINFO   \u{1F961} [ RUNNING ] redis:latest\nINFO Total handlers count:      2\nINFO Prefork:                   Disabled\nINFO PID:                       12279\nINFO Total process count:       1\n"})})]}),"\n",(0,s.jsx)(n.h2,{id:"-log",children:"\u{1F4C3} Log"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"fiber.AllLogger[T]"})," interface now has a new generic type parameter ",(0,s.jsx)(n.code,{children:"T"})," and a method called ",(0,s.jsx)(n.code,{children:"Logger"}),". This method can be used to get the underlying logger instance from the Fiber logger middleware. This is useful when you want to configure the logger middleware with a custom logger and still want to access the underlying logger instance with the appropriate type."]}),"\n",(0,s.jsxs)(n.p,{children:["You can find more details about this feature in ",(0,s.jsx)(n.a,{href:"/next/api/log#logger",children:"/docs/api/log.md"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"logger.Config"})," now supports a new field called ",(0,s.jsx)(n.code,{children:"ForceColors"}),". This field allows you to force the logger to always use colors, even if the output is not a terminal. This is useful when you want to ensure that the logs are always colored, regardless of the output destination."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport "github.com/gofiber/fiber/v3/middleware/logger"\n\napp.Use(logger.New(logger.Config{\n    ForceColors: true,\n}))\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-storage-interface",children:"\u{1F4E6} Storage Interface"}),"\n",(0,s.jsxs)(n.p,{children:["The storage interface has been updated to include new subset of methods with ",(0,s.jsx)(n.code,{children:"WithContext"})," suffix. These methods allow you to pass a context to the storage operations, enabling better control over timeouts and cancellation if needed. This is particularly useful when storage implementations used outside of the Fiber core, such as in background jobs or long-running tasks."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"New Methods Signatures:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// GetWithContext gets the value for the given key with a context.\n// `nil, nil` is returned when the key does not exist\nGetWithContext(ctx context.Context, key string) ([]byte, error)\n\n// SetWithContext stores the given value for the given key\n// with an expiration value, 0 means no expiration.\n// Empty key or value will be ignored without an error.\nSetWithContext(ctx context.Context, key string, val []byte, exp time.Duration) error\n\n// DeleteWithContext deletes the value for the given key with a context.\n// It returns no error if the storage does not contain the key,\nDeleteWithContext(ctx context.Context, key string) error\n\n// ResetWithContext resets the storage and deletes all keys with a context.\nResetWithContext(ctx context.Context) error\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-middlewares",children:"\u{1F9EC} Middlewares"}),"\n",(0,s.jsx)(n.h3,{id:"important-change-for-accessing-middleware-data",children:"Important Change for Accessing Middleware Data"}),"\n",(0,s.jsxs)(n.p,{children:["In Fiber v3, many middlewares that previously set values in ",(0,s.jsx)(n.code,{children:"c.Locals()"})," using string keys (e.g., ",(0,s.jsx)(n.code,{children:'c.Locals("requestid")'}),") have been updated. To align with Go's context best practices and prevent key collisions, these middlewares now store their specific data in the request's context using unexported keys of custom types."]}),"\n",(0,s.jsxs)(n.p,{children:["This means that directly accessing these values via ",(0,s.jsx)(n.code,{children:'c.Locals("some_string_key")'})," will no longer work for such middleware-provided data."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"How to Access Middleware Data in v3:"})}),"\n",(0,s.jsxs)(n.p,{children:["Each affected middleware now provides dedicated exported functions to retrieve its specific data from the context. You should use these functions instead of relying on string-based lookups in ",(0,s.jsx)(n.code,{children:"c.Locals()"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Examples include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"requestid.FromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csrf.TokenFromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csrf.HandlerFromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"session.FromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"basicauth.UsernameFromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"keyauth.TokenFromContext(c)"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When used with the Logger middleware, the recommended approach is to use the ",(0,s.jsx)(n.code,{children:"CustomTags"})," feature of the logger, which allows you to call these specific ",(0,s.jsx)(n.code,{children:"FromContext"})," functions. See the ",(0,s.jsx)(n.a,{href:"#logger",children:"Logger"})," section for more details."]}),"\n",(0,s.jsx)(n.h3,{id:"adaptor",children:"Adaptor"}),"\n",(0,s.jsxs)(n.p,{children:["The adaptor middleware has been significantly optimized for performance and efficiency. Key improvements include reduced response times, lower memory usage, and fewer memory allocations. These changes make the middleware more reliable and capable of handling higher loads effectively. Enhancements include the introduction of a ",(0,s.jsx)(n.code,{children:"sync.Pool"})," for managing ",(0,s.jsx)(n.code,{children:"fasthttp.RequestCtx"})," instances and better HTTP request and response handling between net/http and fasthttp contexts."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Payload Size"}),(0,s.jsx)(n.th,{children:"Metric"}),(0,s.jsx)(n.th,{children:"V2"}),(0,s.jsx)(n.th,{children:"V3"}),(0,s.jsx)(n.th,{children:"Percent Change"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"100KB"}),(0,s.jsx)(n.td,{children:"Execution Time"}),(0,s.jsx)(n.td,{children:"1056 ns/op"}),(0,s.jsx)(n.td,{children:"588.6 ns/op"}),(0,s.jsx)(n.td,{children:"-44.25%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Memory Usage"}),(0,s.jsx)(n.td,{children:"2644 B/op"}),(0,s.jsx)(n.td,{children:"254 B/op"}),(0,s.jsx)(n.td,{children:"-90.39%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Allocations"}),(0,s.jsx)(n.td,{children:"16 allocs/op"}),(0,s.jsx)(n.td,{children:"5 allocs/op"}),(0,s.jsx)(n.td,{children:"-68.75%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"500KB"}),(0,s.jsx)(n.td,{children:"Execution Time"}),(0,s.jsx)(n.td,{children:"1061 ns/op"}),(0,s.jsx)(n.td,{children:"562.9 ns/op"}),(0,s.jsx)(n.td,{children:"-46.94%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Memory Usage"}),(0,s.jsx)(n.td,{children:"2644 B/op"}),(0,s.jsx)(n.td,{children:"248 B/op"}),(0,s.jsx)(n.td,{children:"-90.62%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Allocations"}),(0,s.jsx)(n.td,{children:"16 allocs/op"}),(0,s.jsx)(n.td,{children:"5 allocs/op"}),(0,s.jsx)(n.td,{children:"-68.75%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1MB"}),(0,s.jsx)(n.td,{children:"Execution Time"}),(0,s.jsx)(n.td,{children:"1080 ns/op"}),(0,s.jsx)(n.td,{children:"629.7 ns/op"}),(0,s.jsx)(n.td,{children:"-41.68%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Memory Usage"}),(0,s.jsx)(n.td,{children:"2646 B/op"}),(0,s.jsx)(n.td,{children:"267 B/op"}),(0,s.jsx)(n.td,{children:"-89.91%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Allocations"}),(0,s.jsx)(n.td,{children:"16 allocs/op"}),(0,s.jsx)(n.td,{children:"5 allocs/op"}),(0,s.jsx)(n.td,{children:"-68.75%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"5MB"}),(0,s.jsx)(n.td,{children:"Execution Time"}),(0,s.jsx)(n.td,{children:"1093 ns/op"}),(0,s.jsx)(n.td,{children:"540.3 ns/op"}),(0,s.jsx)(n.td,{children:"-50.58%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Memory Usage"}),(0,s.jsx)(n.td,{children:"2654 B/op"}),(0,s.jsx)(n.td,{children:"254 B/op"}),(0,s.jsx)(n.td,{children:"-90.43%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Allocations"}),(0,s.jsx)(n.td,{children:"16 allocs/op"}),(0,s.jsx)(n.td,{children:"5 allocs/op"}),(0,s.jsx)(n.td,{children:"-68.75%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"10MB"}),(0,s.jsx)(n.td,{children:"Execution Time"}),(0,s.jsx)(n.td,{children:"1044 ns/op"}),(0,s.jsx)(n.td,{children:"533.1 ns/op"}),(0,s.jsx)(n.td,{children:"-48.94%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Memory Usage"}),(0,s.jsx)(n.td,{children:"2665 B/op"}),(0,s.jsx)(n.td,{children:"258 B/op"}),(0,s.jsx)(n.td,{children:"-90.32%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Allocations"}),(0,s.jsx)(n.td,{children:"16 allocs/op"}),(0,s.jsx)(n.td,{children:"5 allocs/op"}),(0,s.jsx)(n.td,{children:"-68.75%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"25MB"}),(0,s.jsx)(n.td,{children:"Execution Time"}),(0,s.jsx)(n.td,{children:"1069 ns/op"}),(0,s.jsx)(n.td,{children:"540.7 ns/op"}),(0,s.jsx)(n.td,{children:"-49.42%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Memory Usage"}),(0,s.jsx)(n.td,{children:"2706 B/op"}),(0,s.jsx)(n.td,{children:"289 B/op"}),(0,s.jsx)(n.td,{children:"-89.32%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Allocations"}),(0,s.jsx)(n.td,{children:"16 allocs/op"}),(0,s.jsx)(n.td,{children:"5 allocs/op"}),(0,s.jsx)(n.td,{children:"-68.75%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"50MB"}),(0,s.jsx)(n.td,{children:"Execution Time"}),(0,s.jsx)(n.td,{children:"1137 ns/op"}),(0,s.jsx)(n.td,{children:"554.6 ns/op"}),(0,s.jsx)(n.td,{children:"-51.21%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Memory Usage"}),(0,s.jsx)(n.td,{children:"2734 B/op"}),(0,s.jsx)(n.td,{children:"298 B/op"}),(0,s.jsx)(n.td,{children:"-89.10%"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Allocations"}),(0,s.jsx)(n.td,{children:"16 allocs/op"}),(0,s.jsx)(n.td,{children:"5 allocs/op"}),(0,s.jsx)(n.td,{children:"-68.75%"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"basicauth",children:"BasicAuth"}),"\n",(0,s.jsxs)(n.p,{children:["The BasicAuth middleware now validates the ",(0,s.jsx)(n.code,{children:"Authorization"})," header more rigorously and sets security-focused response headers. Passwords must be provided in ",(0,s.jsx)(n.strong,{children:"hashed"})," form (e.g. SHA-256 or bcrypt) rather than plaintext. The default challenge includes the ",(0,s.jsx)(n.code,{children:'charset="UTF-8"'})," parameter and disables caching. Responses also set a ",(0,s.jsx)(n.code,{children:"Vary: Authorization"})," header to prevent caching based on credentials. Passwords are no longer stored in the request context. A ",(0,s.jsx)(n.code,{children:"Charset"})," option controls the value used in the challenge header.\nA new ",(0,s.jsx)(n.code,{children:"HeaderLimit"})," option restricts the maximum length of the ",(0,s.jsx)(n.code,{children:"Authorization"})," header (default: ",(0,s.jsx)(n.code,{children:"8192"})," bytes).\nThe ",(0,s.jsx)(n.code,{children:"Authorizer"})," function now receives the current ",(0,s.jsx)(n.code,{children:"fiber.Ctx"})," as a third argument, allowing credential checks to incorporate request context."]}),"\n",(0,s.jsx)(n.h3,{id:"cache",children:"Cache"}),"\n",(0,s.jsxs)(n.p,{children:["We are excited to introduce a new option in our caching middleware: Cache Invalidator. This feature provides greater control over cache management, allowing you to define a custom conditions for invalidating cache entries.\nAdditionally, the caching middleware has been optimized to avoid caching non-cacheable status codes, as defined by the ",(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc7231#section-6.1",children:"HTTP standards"}),". This improvement enhances cache accuracy and reduces unnecessary cache storage usage.\nCached responses now include an RFC-compliant Age header, providing a standardized indication of how long a response has been stored in cache since it was originally generated. This enhancement improves HTTP compliance and facilitates better client-side caching strategies."]}),"\n",(0,s.jsxs)(n.p,{children:["Cache keys are now redacted in logs and error messages by default, and a ",(0,s.jsx)(n.code,{children:"DisableValueRedaction"})," boolean (default ",(0,s.jsx)(n.code,{children:"false"}),") lets you opt out when you need the raw value for troubleshooting."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The deprecated ",(0,s.jsx)(n.code,{children:"Store"})," and ",(0,s.jsx)(n.code,{children:"Key"})," options have been removed in v3. Use ",(0,s.jsx)(n.code,{children:"Storage"})," and ",(0,s.jsx)(n.code,{children:"KeyGenerator"})," instead."]})}),"\n",(0,s.jsx)(n.h3,{id:"cors",children:"CORS"}),"\n",(0,s.jsx)(n.p,{children:"We've made some changes to the CORS middleware to improve its functionality and flexibility. Here's what's new:"}),"\n",(0,s.jsx)(n.h4,{id:"new-struct-fields",children:"New Struct Fields"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Config.AllowPrivateNetwork"}),": This new field is a boolean that allows you to control whether private networks are allowed. This is related to the ",(0,s.jsx)(n.a,{href:"https://wicg.github.io/private-network-access/",children:"Private Network Access (PNA)"})," specification from the ",(0,s.jsx)(n.a,{href:"https://wicg.io/",children:"Web Incubator Community Group (WICG)"}),". When set to ",(0,s.jsx)(n.code,{children:"true"}),", the CORS middleware will allow CORS preflight requests from private networks and respond with the ",(0,s.jsx)(n.code,{children:"Access-Control-Allow-Private-Network: true"})," header. This could be useful in development environments or specific use cases, but should be done with caution due to potential security risks."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"updated-struct-fields",children:"Updated Struct Fields"}),"\n",(0,s.jsx)(n.p,{children:"We've updated several fields from a single string (containing comma-separated values) to slices, allowing for more explicit declaration of multiple values. Here are the updated fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Config.AllowOrigins"}),": Now accepts a slice of strings, each representing an allowed origin."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Config.AllowMethods"}),": Now accepts a slice of strings, each representing an allowed method."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Config.AllowHeaders"}),": Now accepts a slice of strings, each representing an allowed header."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Config.ExposeHeaders"}),": Now accepts a slice of strings, each representing an exposed header."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Additionally, panic messages and logs redact misconfigured origins by default, and a ",(0,s.jsx)(n.code,{children:"DisableValueRedaction"})," flag (default ",(0,s.jsx)(n.code,{children:"false"}),") lets you reveal them when necessary."]}),"\n",(0,s.jsx)(n.h3,{id:"compression",children:"Compression"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Added support for ",(0,s.jsx)(n.code,{children:"zstd"})," compression alongside ",(0,s.jsx)(n.code,{children:"gzip"}),", ",(0,s.jsx)(n.code,{children:"deflate"}),", and ",(0,s.jsx)(n.code,{children:"brotli"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Strong ",(0,s.jsx)(n.code,{children:"ETag"})," values are now recomputed for compressed payloads so validators remain accurate."]}),"\n",(0,s.jsxs)(n.li,{children:["Compression is bypassed for responses that already specify ",(0,s.jsx)(n.code,{children:"Content-Encoding"}),", for range requests or ",(0,s.jsx)(n.code,{children:"206"})," statuses, and when either side sends ",(0,s.jsx)(n.code,{children:"Cache-Control: no-transform"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"HEAD"})," requests still negotiate compression so ",(0,s.jsx)(n.code,{children:"Content-Encoding"}),", ",(0,s.jsx)(n.code,{children:"Content-Length"}),", ",(0,s.jsx)(n.code,{children:"ETag"}),", and ",(0,s.jsx)(n.code,{children:"Vary"})," match a corresponding ",(0,s.jsx)(n.code,{children:"GET"}),", but the body is omitted."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Vary: Accept-Encoding"})," is merged into responses even when compression is skipped, preventing caches from mixing encoded and unencoded variants."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"csrf",children:"CSRF"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Expiration"})," field in the CSRF middleware configuration has been renamed to ",(0,s.jsx)(n.code,{children:"IdleTimeout"})," to better describe its functionality. Additionally, the default value has been reduced from 1 hour to 30 minutes."]}),"\n",(0,s.jsxs)(n.p,{children:["CSRF now redacts tokens and storage keys by default and exposes a ",(0,s.jsx)(n.code,{children:"DisableValueRedaction"})," toggle (default ",(0,s.jsx)(n.code,{children:"false"}),") if you must surface those values in diagnostics."]}),"\n",(0,s.jsx)(n.h3,{id:"idempotency",children:"Idempotency"}),"\n",(0,s.jsxs)(n.p,{children:["Idempotency middleware now redacts keys by default and offers a ",(0,s.jsx)(n.code,{children:"DisableValueRedaction"})," configuration flag (default ",(0,s.jsx)(n.code,{children:"false"}),") to expose them when debugging."]}),"\n",(0,s.jsx)(n.h3,{id:"encryptcookie",children:"EncryptCookie"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Added support for specifying key length when using ",(0,s.jsx)(n.code,{children:"encryptcookie.GenerateKey(length)"}),". Keys must be base64-encoded and may be 16, 24, or 32 bytes when decoded, supporting AES-128, AES-192, and AES-256 (default)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Custom encryptor and decryptor callbacks now receive the cookie name. The default AES-GCM helpers bind it as additional authenticated data (AAD) so ciphertext cannot be replayed under a different cookie."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Breaking change:"})," Custom encryptor/decryptor hooks now accept the cookie name as their first argument. Update overrides like:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// Before\nEncryptor func(value, key string) (string, error)\nDecryptor func(value, key string) (string, error)\n\n// After\nEncryptor func(name, value, key string) (string, error)\nDecryptor func(name, value, key string) (string, error)\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"envvar",children:"EnvVar"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ExcludeVars"})," field has been removed from the EnvVar middleware configuration. When upgrading, remove any references to this field and explicitly list the variables you wish to expose using ",(0,s.jsx)(n.code,{children:"ExportVars"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"filesystem",children:"Filesystem"}),"\n",(0,s.jsxs)(n.p,{children:["We've decided to remove filesystem middleware to clear up the confusion between static and filesystem middleware.\nNow, static middleware can do everything that filesystem middleware and static do. You can check out ",(0,s.jsx)(n.a,{href:"/next/middleware/static",children:"static middleware"})," or ",(0,s.jsx)(n.a,{href:"#-migration-guide",children:"migration guide"})," to see what has been changed."]}),"\n",(0,s.jsx)(n.h3,{id:"healthcheck",children:"Healthcheck"}),"\n",(0,s.jsxs)(n.p,{children:["The healthcheck middleware has been simplified into a single generic probe handler. No endpoints are registered automatically. Register the middleware on each route you need\u2014using helpers like ",(0,s.jsx)(n.code,{children:"healthcheck.LivenessEndpoint"}),", ",(0,s.jsx)(n.code,{children:"healthcheck.ReadinessEndpoint"}),", or ",(0,s.jsx)(n.code,{children:"healthcheck.StartupEndpoint"}),"\u2014and optionally supply a ",(0,s.jsx)(n.code,{children:"Probe"})," function to determine the service's health. This approach lets you expose any number of health check routes."]}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the ",(0,s.jsx)(n.a,{href:"/next/middleware/healthcheck",children:"healthcheck middleware migration guide"})," or the ",(0,s.jsx)(n.a,{href:"#-migration-guide",children:"general migration guide"})," to review the changes."]}),"\n",(0,s.jsx)(n.h3,{id:"keyauth",children:"KeyAuth"}),"\n",(0,s.jsxs)(n.p,{children:["The keyauth middleware was updated to introduce a configurable ",(0,s.jsx)(n.code,{children:"Realm"})," field for the ",(0,s.jsx)(n.code,{children:"WWW-Authenticate"})," header.\nThe old string-based ",(0,s.jsx)(n.code,{children:"KeyLookup"})," configuration has been replaced with an ",(0,s.jsx)(n.code,{children:"Extractor"})," field. Use helper functions like ",(0,s.jsx)(n.code,{children:"keyauth.FromHeader"}),", ",(0,s.jsx)(n.code,{children:"keyauth.FromAuthHeader"}),", or ",(0,s.jsx)(n.code,{children:"keyauth.FromCookie"})," to define where the key should be retrieved from. Multiple sources can be combined with ",(0,s.jsx)(n.code,{children:"keyauth.Chain"}),". See the migration guide below.\nNew ",(0,s.jsx)(n.code,{children:"Challenge"}),", ",(0,s.jsx)(n.code,{children:"Error"}),", ",(0,s.jsx)(n.code,{children:"ErrorDescription"}),", ",(0,s.jsx)(n.code,{children:"ErrorURI"}),", and ",(0,s.jsx)(n.code,{children:"Scope"})," fields allow customizing the ",(0,s.jsx)(n.code,{children:"WWW-Authenticate"})," header, returning Bearer error details, and specifying required scopes. ",(0,s.jsx)(n.code,{children:"ErrorURI"})," values are validated as absolute, a default ",(0,s.jsx)(n.code,{children:"ApiKey"})," challenge is emitted when using non-Authorization extractors, Bearer ",(0,s.jsx)(n.code,{children:"error"})," values are validated, credentials must conform to RFC 7235 ",(0,s.jsx)(n.code,{children:"token68"})," syntax, and ",(0,s.jsx)(n.code,{children:"scope"})," values are checked against RFC 6750's ",(0,s.jsx)(n.code,{children:"scope-token"})," format. The header is also emitted only after the status code is finalized."]}),"\n",(0,s.jsx)(n.h3,{id:"logger",children:"Logger"}),"\n",(0,s.jsxs)(n.p,{children:["New helper function called ",(0,s.jsx)(n.code,{children:"LoggerToWriter"})," has been added to the logger middleware. This function allows you to use 3rd party loggers such as ",(0,s.jsx)(n.code,{children:"logrus"})," or ",(0,s.jsx)(n.code,{children:"zap"})," with the Fiber logger middleware without any extra afford. For example, you can use ",(0,s.jsx)(n.code,{children:"zap"})," with Fiber logger middleware like this:"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/contrib/fiberzap/v2"\n    "github.com/gofiber/fiber/v3"\n    "github.com/gofiber/fiber/v3/log"\n    "github.com/gofiber/fiber/v3/middleware/logger"\n)\n\nfunc main() {\n    // Create a new Fiber instance\n    app := fiber.New()\n\n    // Create a new zap logger which is compatible with Fiber AllLogger interface\n    zap := fiberzap.NewLogger(fiberzap.LoggerConfig{\n        ExtraKeys: []string{"request_id"},\n    })\n\n    // Use the logger middleware with zerolog logger\n    app.Use(logger.New(logger.Config{\n        Output: logger.LoggerToWriter(zap, log.LevelDebug),\n    }))\n\n    // Define a route\n    app.Get("/", func(c fiber.Ctx) error {\n        return c.SendString("Hello, World!")\n    })\n\n    // Start server on http://localhost:3000\n    app.Listen(":3000")\n}\n'})})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The deprecated ",(0,s.jsx)(n.code,{children:"TagHeader"})," constant was removed. Use ",(0,s.jsx)(n.code,{children:"TagReqHeader"})," when you need to log request headers."]})}),"\n",(0,s.jsx)(n.h4,{id:"logging-middleware-values-eg-request-id",children:"Logging Middleware Values (e.g., Request ID)"}),"\n",(0,s.jsxs)(n.p,{children:["In Fiber v3, middleware (like ",(0,s.jsx)(n.code,{children:"requestid"}),") now stores values in the request context using unexported keys of custom types. This aligns with Go's context best practices to prevent key collisions between packages."]}),"\n",(0,s.jsxs)(n.p,{children:["As a result, directly accessing these values using string keys with ",(0,s.jsx)(n.code,{children:'c.Locals("your_key")'})," or in the logger format string with ",(0,s.jsx)(n.code,{children:"${locals:your_key}"})," (e.g., ",(0,s.jsx)(n.code,{children:"${locals:requestid}"}),") will no longer work for values set by such middleware."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Recommended Solution: ",(0,s.jsx)(n.code,{children:"CustomTags"})]})}),"\n",(0,s.jsxs)(n.p,{children:["The cleanest and most maintainable way to include these middleware-specific values in your logs is by using the ",(0,s.jsx)(n.code,{children:"CustomTags"})," option in the logger middleware configuration. This allows you to define a custom function to retrieve the value correctly from the context."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example: Logging Request ID with CustomTags"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v3"\n    "github.com/gofiber/fiber/v3/middleware/logger"\n    "github.com/gofiber/fiber/v3/middleware/requestid"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Ensure requestid middleware is used before the logger\n    app.Use(requestid.New())\n\n    app.Use(logger.New(logger.Config{\n        CustomTags: map[string]logger.LogFunc{\n            "requestid": func(output logger.Buffer, c fiber.Ctx, data *logger.Data, extraParam string) (int, error) {\n                // Retrieve the request ID using the middleware\'s specific function\n                return output.WriteString(requestid.FromContext(c))\n            },\n        },\n        // Use the custom tag in your format string\n        Format: "[${time}] ${ip} - ${requestid} - ${status} ${method} ${path}\\n",\n    }))\n\n    app.Get("/", func(c fiber.Ctx) error {\n        return c.SendString("Hello, World!")\n    })\n\n    app.Listen(":3000")\n}\n'})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Alternative: Manually Copying to ",(0,s.jsx)(n.code,{children:"Locals"})]})}),"\n",(0,s.jsxs)(n.p,{children:["If you have existing logging patterns that rely on ",(0,s.jsx)(n.code,{children:"c.Locals"})," or prefer to manage these values in ",(0,s.jsx)(n.code,{children:"Locals"})," for other reasons, you can manually copy the value from the context to ",(0,s.jsx)(n.code,{children:"c.Locals"})," in a preceding middleware:"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example: Manually setting requestid in Locals"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.Use(requestid.New()) // Request ID middleware\napp.Use(func(c fiber.Ctx) error {\n    // Manually copy the request ID to Locals\n    c.Locals("requestid", requestid.FromContext(c))\n    return c.Next()\n})\napp.Use(logger.New(logger.Config{\n    // Now ${locals:requestid} can be used, but CustomTags is generally preferred\n    Format: "[${time}] ${ip} - ${locals:requestid} - ${status} ${method} ${path}\\n",\n}))\n'})})]}),"\n",(0,s.jsx)(n.p,{children:"Both approaches ensure your logger can access these values while respecting Go's context practices."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Skip"})," is a function to determine if logging is skipped or written to ",(0,s.jsx)(n.code,{children:"Stream"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"app.Use(logger.New(logger.Config{\n    Skip: func(c fiber.Ctx) bool {\n        // Skip logging HTTP 200 requests\n        return c.Response().StatusCode() == fiber.StatusOK\n    },\n}))\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"app.Use(logger.New(logger.Config{\n    Skip: func(c fiber.Ctx) bool {\n        // Only log errors, similar to an error.log\n        return c.Response().StatusCode() < 400\n    },\n}))\n"})})]}),"\n",(0,s.jsx)(n.h4,{id:"predefined-formats",children:"Predefined Formats"}),"\n",(0,s.jsx)(n.p,{children:"Logger provides predefined formats that you can use by name or directly by specifying the format string."}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example Usage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"app.Use(logger.New(logger.Config{\n    Format: logger.FormatCombined,\n}))\n"})}),(0,s.jsxs)(n.p,{children:["See more in ",(0,s.jsx)(n.a,{href:"/next/middleware/logger#predefined-formats",children:"Logger"})]})]}),"\n",(0,s.jsx)(n.h3,{id:"limiter",children:"Limiter"}),"\n",(0,s.jsx)(n.p,{children:"The limiter middleware uses a new Fixed Window Rate Limiter implementation."}),"\n",(0,s.jsxs)(n.p,{children:["Limiter now redacts request keys in error paths by default. A new ",(0,s.jsx)(n.code,{children:"DisableValueRedaction"})," boolean (default ",(0,s.jsx)(n.code,{children:"false"}),") lets you reveal the raw limiter key if diagnostics require it."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Deprecated fields ",(0,s.jsx)(n.code,{children:"Duration"}),", ",(0,s.jsx)(n.code,{children:"Store"}),", and ",(0,s.jsx)(n.code,{children:"Key"})," have been removed in v3. Use ",(0,s.jsx)(n.code,{children:"Expiration"}),", ",(0,s.jsx)(n.code,{children:"Storage"}),", and ",(0,s.jsx)(n.code,{children:"KeyGenerator"})," instead."]})}),"\n",(0,s.jsx)(n.h3,{id:"monitor",children:"Monitor"}),"\n",(0,s.jsxs)(n.p,{children:["Monitor middleware is migrated to the ",(0,s.jsx)(n.a,{href:"https://github.com/gofiber/contrib/tree/main/monitor",children:"Contrib package"})," with ",(0,s.jsx)(n.a,{href:"https://github.com/gofiber/contrib/pull/1172",children:"PR #1172"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"proxy",children:"Proxy"}),"\n",(0,s.jsxs)(n.p,{children:["The proxy middleware has been updated to improve consistency with Go naming conventions. The ",(0,s.jsx)(n.code,{children:"TlsConfig"})," field in the configuration struct has been renamed to ",(0,s.jsx)(n.code,{children:"TLSConfig"}),". Additionally, the ",(0,s.jsx)(n.code,{children:"WithTlsConfig"})," method has been removed; you should now configure TLS directly via the ",(0,s.jsx)(n.code,{children:"TLSConfig"})," property within the ",(0,s.jsx)(n.code,{children:"Config"})," struct."]}),"\n",(0,s.jsxs)(n.p,{children:["The new ",(0,s.jsx)(n.code,{children:"KeepConnectionHeader"})," option (default ",(0,s.jsx)(n.code,{children:"false"}),") drops the ",(0,s.jsx)(n.code,{children:"Connection"})," header unless explicitly enabled to retain it."]}),"\n",(0,s.jsx)(n.h3,{id:"session",children:"Session"}),"\n",(0,s.jsx)(n.p,{children:"The Session middleware has undergone key changes in v3 to improve functionality and flexibility. While v2 methods remain available for backward compatibility, we now recommend using the new middleware handler for session management."}),"\n",(0,s.jsx)(n.h4,{id:"key-updates",children:"Key Updates"}),"\n",(0,s.jsx)(n.h3,{id:"session-1",children:"Session"}),"\n",(0,s.jsx)(n.p,{children:"The session middleware has undergone significant improvements in v3, focusing on type safety, flexibility, and better developer experience."}),"\n",(0,s.jsx)(n.h4,{id:"key-changes",children:"Key Changes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Extractor Pattern"}),": The string-based ",(0,s.jsx)(n.code,{children:"KeyLookup"})," configuration has been replaced with a more flexible and type-safe ",(0,s.jsx)(n.code,{children:"Extractor"})," function pattern."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"New Middleware Handler"}),": The ",(0,s.jsx)(n.code,{children:"New"})," function now returns a middleware handler instead of a ",(0,s.jsx)(n.code,{children:"*Store"}),". To access the session store, use the ",(0,s.jsx)(n.code,{children:"Store"})," method on the middleware, or opt for ",(0,s.jsx)(n.code,{children:"NewStore"})," or ",(0,s.jsx)(n.code,{children:"NewWithStore"})," for custom store integration."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Manual Session Release"}),": Session instances are no longer automatically released after being saved. To ensure proper lifecycle management, you must manually call ",(0,s.jsx)(n.code,{children:"sess.Release()"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Idle Timeout"}),": The ",(0,s.jsx)(n.code,{children:"Expiration"})," field has been replaced with ",(0,s.jsx)(n.code,{children:"IdleTimeout"}),", which handles session inactivity. If the session is idle for the specified duration, it will expire. The idle timeout is updated when the session is saved. If you are using the middleware handler, the idle timeout will be updated automatically."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Absolute Timeout"}),": The ",(0,s.jsx)(n.code,{children:"AbsoluteTimeout"})," field has been added. If you need to set an absolute session timeout, you can use this field to define the duration. The session will expire after the specified duration, regardless of activity."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For more details on these changes and migration instructions, check the ",(0,s.jsx)(n.a,{href:"/next/middleware/session#migration-guide",children:"Session Middleware Migration Guide"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"timeout",children:"Timeout"}),"\n",(0,s.jsxs)(n.p,{children:["The timeout middleware is now configurable. A new ",(0,s.jsx)(n.code,{children:"Config"})," struct allows customizing the timeout duration, defining a handler that runs when a timeout occurs, and specifying errors to treat as timeouts. The ",(0,s.jsx)(n.code,{children:"New"})," function now accepts a ",(0,s.jsx)(n.code,{children:"Config"})," value instead of a duration."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Migration:"})," Replace calls like ",(0,s.jsx)(n.code,{children:"timeout.New(handler, 2*time.Second)"})," with ",(0,s.jsx)(n.code,{children:"timeout.New(handler, timeout.Config{Timeout: 2 * time.Second})"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"-addons",children:"\u{1F50C} Addons"}),"\n",(0,s.jsx)(n.p,{children:"In v3, Fiber introduced Addons. Addons are additional useful packages that can be used in Fiber."}),"\n",(0,s.jsx)(n.h3,{id:"retry",children:"Retry"}),"\n",(0,s.jsx)(n.p,{children:"The Retry addon is a new addon that implements a retry mechanism for unsuccessful network operations. It uses an exponential backoff algorithm with jitter.\nIt calls the function multiple times and tries to make it successful. If all calls are failed, then, it returns an error.\nIt adds a jitter at each retry step because adding a jitter is a way to break synchronization across the client and avoid collision."}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n\n    "github.com/gofiber/fiber/v3/addon/retry"\n    "github.com/gofiber/fiber/v3/client"\n)\n\nfunc main() {\n    expBackoff := retry.NewExponentialBackoff(retry.Config{})\n\n    // Local variables that will be used inside of Retry\n    var resp *client.Response\n    var err error\n\n    // Retry a network request and return an error to signify to try again\n    err = expBackoff.Retry(func() error {\n        client := client.New()\n        resp, err = client.Get("https://gofiber.io")\n        if err != nil {\n            return fmt.Errorf("GET gofiber.io failed: %w", err)\n        }\n        if resp.StatusCode() != 200 {\n            return fmt.Errorf("GET gofiber.io did not return OK 200")\n        }\n        return nil\n    })\n\n    // If all retries failed, panic\n    if err != nil {\n        panic(err)\n    }\n    fmt.Printf("GET gofiber.io succeeded with status code %d\\n", resp.StatusCode())\n}\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"-migration-guide",children:"\u{1F4CB} Migration guide"}),"\n",(0,s.jsxs)(n.p,{children:["To streamline upgrades between Fiber versions, the Fiber CLI ships with a\n",(0,s.jsx)(n.code,{children:"migrate"})," command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"go install github.com/gofiber/cli/fiber@latest\nfiber migrate --to v3.0.0-rc.2\n"})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-t, --to string"})," migrate to a specific version, e.g. ",(0,s.jsx)(n.code,{children:"v3.0.0"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-f, --force"})," force migration even if already on that version"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-s, --skip_go_mod"})," skip running ",(0,s.jsx)(n.code,{children:"go mod tidy"}),", ",(0,s.jsx)(n.code,{children:"go mod download"}),", and ",(0,s.jsx)(n.code,{children:"go mod vendor"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"changes-overview",children:"Changes Overview"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-app-1",children:"\u{1F680} App"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-hooks-1",children:"\u{1F3A3} Hooks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-listen-1",children:"\u{1F680} Listen"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-router-1",children:"\u{1F5FA} Router"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-context-1",children:"\u{1F9E0} Context"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-parser",children:"\u{1F4CE} Binding (was Parser)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-redirect-1",children:"\u{1F504} Redirect"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-log-1",children:"\u{1F9FE} Log"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-client-package-1",children:"\u{1F30E} Client package"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#utils-migration",children:"\u{1F6E0}\uFE0F Utils"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#-middlewares-1",children:"\u{1F9EC} Middlewares"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#important-change-for-accessing-middleware-data",children:"Important Change for Accessing Middleware Data"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#basicauth-1",children:"BasicAuth"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#cache-1",children:"Cache"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#cors-1",children:"CORS"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#csrf-1",children:"CSRF"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#filesystem-1",children:"Filesystem"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#envvar-1",children:"EnvVar"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#healthcheck-1",children:"Healthcheck"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#monitor-1",children:"Monitor"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#proxy-1",children:"Proxy"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#session-1",children:"Session"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-app-1",children:"\u{1F680} App"}),"\n",(0,s.jsx)(n.h4,{id:"static",children:"Static"}),"\n",(0,s.jsxs)(n.p,{children:["Since we've removed ",(0,s.jsx)(n.code,{children:"app.Static()"}),", you need to move methods to static middleware like the example below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Static("/", "./public")\napp.Static("/prefix", "./public")\napp.Static("/prefix", "./public", Static{\n    Index: "index.htm",\n})\napp.Static("*", "./public/index.html")\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Get("/*", static.New("./public"))\napp.Get("/prefix*", static.New("./public"))\napp.Get("/prefix*", static.New("./public", static.Config{\n    IndexNames: []string{"index.htm", "index.html"},\n}))\napp.Get("*", static.New("./public/index.html"))\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["You have to put ",(0,s.jsx)(n.code,{children:"*"})," to the end of the route if you don't define static route with ",(0,s.jsx)(n.code,{children:"app.Use"}),"."]})}),"\n",(0,s.jsx)(n.h4,{id:"trusted-proxies",children:"Trusted Proxies"}),"\n",(0,s.jsxs)(n.p,{children:["We've renamed ",(0,s.jsx)(n.code,{children:"EnableTrustedProxyCheck"})," to ",(0,s.jsx)(n.code,{children:"TrustProxy"})," and moved ",(0,s.jsx)(n.code,{children:"TrustedProxies"})," to ",(0,s.jsx)(n.code,{children:"TrustProxyConfig"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp := fiber.New(fiber.Config{\n    // EnableTrustedProxyCheck enables the trusted proxy check.\n    EnableTrustedProxyCheck: true,\n    // TrustedProxies is a list of trusted proxy IP ranges/addresses.\n    TrustedProxies: []string{"0.8.0.0", "127.0.0.0/8", "::1/128"},\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp := fiber.New(fiber.Config{\n    // TrustProxy enables the trusted proxy check\n    TrustProxy: true,\n    // TrustProxyConfig allows for configuring trusted proxies.\n    TrustProxyConfig: fiber.TrustProxyConfig{\n        // Proxies is a list of trusted proxy IP ranges/addresses.\n        Proxies: []string{"0.8.0.0"},\n        // Trust all loop-back IP addresses (127.0.0.0/8, ::1/128)\n        Loopback: true,\n    }\n})\n'})}),"\n",(0,s.jsx)(n.h3,{id:"-hooks-1",children:"\u{1F3A3} Hooks"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"OnShutdown"})," has been replaced by two hooks: ",(0,s.jsx)(n.code,{children:"OnPreShutdown"})," and ",(0,s.jsx)(n.code,{children:"OnPostShutdown"}),".\nUse them to run cleanup code before and after the server shuts down. When handling\nshutdown errors, register an ",(0,s.jsx)(n.code,{children:"OnPostShutdown"})," hook and call ",(0,s.jsx)(n.code,{children:"app.Listen()"})," in a goroutine."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// Before\napp.OnShutdown(func() {\n    // Code to run before shutdown\n})\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// After\napp.OnPreShutdown(func() {\n    // Code to run before shutdown\n})\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-listen-1",children:"\u{1F680} Listen"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Listen"})," helpers (",(0,s.jsx)(n.code,{children:"ListenTLS"}),", ",(0,s.jsx)(n.code,{children:"ListenMutualTLS"}),", etc.) were removed. Use\n",(0,s.jsx)(n.code,{children:"app.Listen()"})," with ",(0,s.jsx)(n.code,{children:"fiber.ListenConfig"})," and a ",(0,s.jsx)(n.code,{children:"tls.Config"})," when TLS is required.\nOptions such as ",(0,s.jsx)(n.code,{children:"ListenerNetwork"})," and ",(0,s.jsx)(n.code,{children:"UnixSocketFileMode"})," are now configured via\nthis struct."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.ListenTLS(":3000", "cert.pem", "key.pem")\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Listen(":3000", fiber.ListenConfig{\n    CertFile: "./cert.pem",\n    CertKeyFile: "./cert.key",\n})\n'})}),"\n",(0,s.jsx)(n.h3,{id:"-router-1",children:"\u{1F5FA} Router"}),"\n",(0,s.jsxs)(n.h4,{id:"direct-nethttp-handlers",children:["Direct ",(0,s.jsx)(n.code,{children:"net/http"})," handlers"]}),"\n",(0,s.jsxs)(n.p,{children:["Route registration helpers now accept native ",(0,s.jsx)(n.code,{children:"net/http"})," handlers. Pass an\n",(0,s.jsx)(n.code,{children:"http.Handler"}),", ",(0,s.jsx)(n.code,{children:"http.HandlerFunc"}),", or compatible function directly to methods\nsuch as ",(0,s.jsx)(n.code,{children:"app.Get"}),", ",(0,s.jsx)(n.code,{children:"Group"}),", or ",(0,s.jsx)(n.code,{children:"RouteChain"})," and Fiber will adapt it at\nregistration time. Manual wrapping through the adaptor middleware is no longer\nrequired for these common cases."]}),"\n",(0,s.jsx)(n.admonition,{title:"Compatibility considerations",type:"note",children:(0,s.jsxs)(n.p,{children:["Adapted handlers stick to ",(0,s.jsx)(n.code,{children:"net/http"})," semantics. They do not interact with ",(0,s.jsx)(n.code,{children:"fiber.Ctx"}),"\nand are slower than native Fiber handlers because of the extra conversion layer. Use\nthem to ease migrations, but prefer Fiber handlers in performance-critical paths."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'httpHandler := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    if _, err := w.Write([]byte("served by net/http")); err != nil {\n        panic(err)\n    }\n})\n\napp.Get("/", httpHandler)\n'})}),"\n",(0,s.jsx)(n.h4,{id:"middleware-registration-1",children:"Middleware Registration"}),"\n",(0,s.jsxs)(n.p,{children:["The signatures for ",(0,s.jsx)(n.a,{href:"#middleware-registration",children:(0,s.jsx)(n.code,{children:"Add"})})," and ",(0,s.jsx)(n.a,{href:"#route-chaining",children:(0,s.jsx)(n.code,{children:"Route"})})," have been changed."]}),"\n",(0,s.jsxs)(n.p,{children:["To migrate ",(0,s.jsx)(n.a,{href:"#middleware-registration",children:(0,s.jsx)(n.code,{children:"Add"})})," you must change the ",(0,s.jsx)(n.code,{children:"methods"})," in a slice."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Add(fiber.MethodPost, "/api", myHandler)\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Add([]string{fiber.MethodPost}, "/api", myHandler)\n'})}),"\n",(0,s.jsx)(n.h4,{id:"mounting",children:"Mounting"}),"\n",(0,s.jsxs)(n.p,{children:["In this release, the ",(0,s.jsx)(n.code,{children:"Mount"})," method has been removed. Instead, you can use the ",(0,s.jsx)(n.code,{children:"Use"})," method to achieve similar functionality."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Mount("/api", apiApp)\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Use("/api", apiApp)\n'})}),"\n",(0,s.jsx)(n.h4,{id:"route-chaining-1",children:"Route Chaining"}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the ",(0,s.jsx)(n.a,{href:"#route-chaining",children:"route chaining"})," section for details on the new ",(0,s.jsx)(n.code,{children:"RouteChain"})," helper. The ",(0,s.jsx)(n.code,{children:"Route"})," function now matches its v2 behavior for prefix encapsulation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Route("/api", func(apiGrp Router) {\n    apiGrp.Route("/user/:id?", func(userGrp Router) {\n        userGrp.Get("/", func(c fiber.Ctx) error {\n            // Get user\n            return c.JSON(fiber.Map{"message": "Get user", "id": c.Params("id")})\n        })\n        userGrp.Post("/", func(c fiber.Ctx) error {\n            // Create user\n            return c.JSON(fiber.Map{"message": "User created"})\n        })\n    })\n})\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.RouteChain("/api").RouteChain("/user/:id?")\n    .Get(func(c fiber.Ctx) error {\n        // Get user\n        return c.JSON(fiber.Map{"message": "Get user", "id": c.Params("id")})\n    })\n    .Post(func(c fiber.Ctx) error {\n        // Create user\n        return c.JSON(fiber.Map{"message": "User created"})\n    });\n'})}),"\n",(0,s.jsx)(n.h3,{id:"-rebuildtree",children:"\u{1F5FA} RebuildTree"}),"\n",(0,s.jsx)(n.p,{children:"We introduced a new method that enables rebuilding the route tree stack at runtime. This allows you to add routes dynamically while your application is running and update the route tree to make the new routes available for use."}),"\n",(0,s.jsxs)(n.p,{children:["For more details, refer to the ",(0,s.jsx)(n.a,{href:"/next/api/app#rebuildtree",children:"app documentation"}),":"]}),"\n",(0,s.jsx)(n.h4,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'app.Get("/define", func(c Ctx) error {  // Define a new route dynamically\n    app.Get("/dynamically-defined", func(c Ctx) error {  // Adding a dynamically defined route\n        return c.SendStatus(http.StatusOK)\n    })\n\n    app.RebuildTree()  // Rebuild the route tree to register the new route\n\n    return c.SendStatus(http.StatusOK)\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, a new route is defined, and ",(0,s.jsx)(n.code,{children:"RebuildTree()"})," is called to ensure the new route is registered and available."]}),"\n",(0,s.jsxs)(n.p,{children:["Note: Use this method with caution. It is ",(0,s.jsx)(n.strong,{children:"not"})," thread-safe and can be very performance-intensive. Therefore, it should be used sparingly and primarily in development mode. It should not be invoke concurrently."]}),"\n",(0,s.jsx)(n.h2,{id:"removeroute",children:"RemoveRoute"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"RemoveRoute"}),": Removes route by path"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"RemoveRouteByName"}),": Removes route by name"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"RemoveRouteFunc"}),": Removes route by a function having ",(0,s.jsx)(n.code,{children:"*Route"})," parameter"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For more details, refer to the ",(0,s.jsx)(n.a,{href:"/next/api/app#removeroute",children:"app documentation"}),":"]}),"\n",(0,s.jsx)(n.h3,{id:"-context-1",children:"\u{1F9E0} Context"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 introduces several new features and changes to the Ctx interface, enhancing its functionality and flexibility."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ParamsInt"}),": Use ",(0,s.jsx)(n.code,{children:"Params"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"QueryBool"}),": Use ",(0,s.jsx)(n.code,{children:"Query"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"QueryFloat"}),": Use ",(0,s.jsx)(n.code,{children:"Query"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"QueryInt"}),": Use ",(0,s.jsx)(n.code,{children:"Query"})," with generic types."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bind"}),": Now used for binding instead of view binding. Use ",(0,s.jsx)(n.code,{children:"c.ViewBind()"})," for view binding."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In Fiber v3, the ",(0,s.jsx)(n.code,{children:"Ctx"})," parameter in handlers is now an interface, which means the ",(0,s.jsx)(n.code,{children:"*"})," symbol is no longer used. Here is an example demonstrating this change:"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Before"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v2"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Route Handler with *fiber.Ctx\n    app.Get("/", func(c *fiber.Ctx) error {\n        return c.SendString("Hello, World!")\n    })\n\n    app.Listen(":3000")\n}\n'})}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"After"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "github.com/gofiber/fiber/v3"\n)\n\nfunc main() {\n    app := fiber.New()\n\n    // Route Handler without *fiber.Ctx\n    app.Get("/", func(c fiber.Ctx) error {\n        return c.SendString("Hello, World!")\n    })\n\n    app.Listen(":3000")\n}\n'})}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Explanation"}),":"]}),(0,s.jsxs)(n.p,{children:["In this example, the ",(0,s.jsx)(n.code,{children:"Ctx"})," parameter in the handler is used as an interface (",(0,s.jsx)(n.code,{children:"fiber.Ctx"}),") instead of a pointer (",(0,s.jsx)(n.code,{children:"*fiber.Ctx"}),"). This change allows for more flexibility and customization in Fiber v3."]})]}),"\n",(0,s.jsx)(n.h4,{id:"-parser",children:"\u{1F4CE} Parser"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Parser"})," section in Fiber v3 has undergone significant changes to improve functionality and flexibility."]}),"\n",(0,s.jsx)(n.h5,{id:"migration-instructions",children:"Migration Instructions"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"BodyParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().Body()"})," instead of ",(0,s.jsx)(n.code,{children:"c.BodyParser()"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Post("/user", func(c *fiber.Ctx) error {\n    var user User\n    if err := c.BodyParser(&user); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(user)\n})\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Post("/user", func(c fiber.Ctx) error {\n    var user User\n    if err := c.Bind().Body(&user); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(user)\n})\n'})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"ParamsParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().URI()"})," instead of ",(0,s.jsx)(n.code,{children:"c.ParamsParser()"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Get("/user/:id", func(c *fiber.Ctx) error {\n    var params Params\n    if err := c.ParamsParser(&params); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(params)\n})\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Get("/user/:id", func(c fiber.Ctx) error {\n    var params Params\n    if err := c.Bind().URI(&params); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(params)\n})\n'})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"QueryParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().Query()"})," instead of ",(0,s.jsx)(n.code,{children:"c.QueryParser()"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Get("/search", func(c *fiber.Ctx) error {\n    var query Query\n    if err := c.QueryParser(&query); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(query)\n})\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Get("/search", func(c fiber.Ctx) error {\n    var query Query\n    if err := c.Bind().Query(&query); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(query)\n})\n'})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"CookieParser"}),": Use ",(0,s.jsx)(n.code,{children:"c.Bind().Cookie()"})," instead of ",(0,s.jsx)(n.code,{children:"c.CookieParser()"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Get("/cookie", func(c *fiber.Ctx) error {\n    var cookie Cookie\n    if err := c.CookieParser(&cookie); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(cookie)\n})\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Get("/cookie", func(c fiber.Ctx) error {\n    var cookie Cookie\n    if err := c.Bind().Cookie(&cookie); err != nil {\n        return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": err.Error()})\n    }\n    return c.JSON(cookie)\n})\n'})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"-redirect-1",children:"\u{1F504} Redirect"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 enhances the redirect functionality by introducing new methods and improving existing ones. The new redirect methods provide more flexibility and control over the redirection process."}),"\n",(0,s.jsx)(n.h5,{id:"migration-instructions-1",children:"Migration Instructions"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"RedirectToRoute"}),": Use ",(0,s.jsx)(n.code,{children:"c.Redirect().Route()"})," instead of ",(0,s.jsx)(n.code,{children:"c.RedirectToRoute()"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Get("/old", func(c *fiber.Ctx) error {\n    return c.RedirectToRoute("newRoute")\n})\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Get("/old", func(c fiber.Ctx) error {\n    return c.Redirect().Route("newRoute")\n})\n'})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"RedirectBack"}),": Use ",(0,s.jsx)(n.code,{children:"c.Redirect().Back()"})," instead of ",(0,s.jsx)(n.code,{children:"c.RedirectBack()"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Get("/back", func(c *fiber.Ctx) error {\n    return c.RedirectBack()\n})\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Get("/back", func(c fiber.Ctx) error {\n    return c.Redirect().Back()\n})\n'})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Redirect"}),": Use ",(0,s.jsx)(n.code,{children:"c.Redirect().To()"})," instead of ",(0,s.jsx)(n.code,{children:"c.Redirect()"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Get("/old", func(c *fiber.Ctx) error {\n    return c.Redirect("/new")\n})\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Get("/old", func(c fiber.Ctx) error {\n    return c.Redirect().To("/new")\n})\n'})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"-log-1",children:"\u{1F9FE} Log"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ConfigurableLogger"})," and ",(0,s.jsx)(n.code,{children:"AllLogger"})," interfaces now use generics. You can specify the underlying logger type when implementing these interfaces. While ",(0,s.jsx)(n.code,{children:"any"})," can be used for maximum flexibility in some contexts, when retrieving the concrete logger via ",(0,s.jsx)(n.code,{children:"log.DefaultLogger"}),", you must specify the exact underlying logger type, for example ",(0,s.jsx)(n.code,{children:"log.DefaultLogger[*MyLogger]().Logger()"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"-client-package-1",children:"\u{1F30E} Client package"}),"\n",(0,s.jsx)(n.p,{children:"Fiber v3 introduces a completely rebuilt client package with numerous new features such as Cookiejar, request/response hooks, and more. Here is a guide to help you migrate from Fiber v2 to Fiber v3."}),"\n",(0,s.jsx)(n.h4,{id:"new-features-2",children:"New Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cookiejar"}),": Manage cookies automatically."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Request/Response Hooks"}),": Customize request and response handling."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Improved Error Handling"}),": Better error management and reporting."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"migration-instructions-2",children:"Migration Instructions"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Import Path"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"Update the import path to the new client package."}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Before"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'import "github.com/gofiber/fiber/v2/client"\n'})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"After"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'import "github.com/gofiber/fiber/v3/client"\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"utils-migration",children:"\u{1F6E0}\uFE0F Utils"}),"\n",(0,s.jsxs)(n.p,{children:["Fiber v3 removes the in-repo ",(0,s.jsx)(n.code,{children:"utils"})," package in favor of the external ",(0,s.jsx)(n.a,{href:"https://github.com/gofiber/utils",children:(0,s.jsx)(n.code,{children:"github.com/gofiber/utils/v2"})})," module."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Replace imports:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'- import "github.com/gofiber/fiber/v2/utils"\n+ import "github.com/gofiber/utils/v2"\n'})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Review function changes:"}),"\n"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"v2 function"}),(0,s.jsx)(n.th,{children:"v3 replacement"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AssertEqual"})}),(0,s.jsxs)(n.td,{children:["removed; use testing libraries like ",(0,s.jsx)(n.a,{href:"https://pkg.go.dev/github.com/stretchr/testify/assert",children:(0,s.jsx)(n.code,{children:"github.com/stretchr/testify/assert"})})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ToLowerBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ToLowerBytes"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ToUpperBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ToUpperBytes"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TrimRightBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.TrimRight"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TrimLeftBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.TrimLeft"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TrimBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.Trim"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"EqualFoldBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.EqualFold"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"UUID"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.UUID"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"UUIDv4"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.UUIDv4"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FunctionName"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.FunctionName"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GetArgument"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.GetArgument"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"IncrementIPRange"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.IncrementIPRange"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ConvertToBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ConvertToBytes"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CopyString"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.CopyString"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CopyBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.CopyBytes"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ByteSize"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ByteSize"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ToString"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ToString"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"UnsafeString"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.UnsafeString"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"UnsafeBytes"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.UnsafeBytes"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GetString"})}),(0,s.jsxs)(n.td,{children:["removed; use ",(0,s.jsx)(n.code,{children:"utils.ToString"})," or the standard library"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GetBytes"})}),(0,s.jsxs)(n.td,{children:["removed; use ",(0,s.jsx)(n.code,{children:"utils.CopyBytes"})," or ",(0,s.jsx)(n.code,{children:"[]byte(s)"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ImmutableString"})}),(0,s.jsx)(n.td,{children:"removed; strings are already immutable"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GetMIME"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.GetMIME"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ParseVendorSpecificContentType"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ParseVendorSpecificContentType"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"StatusMessage"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.StatusMessage"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"IsIPv4"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.IsIPv4"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"IsIPv6"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.IsIPv6"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ToLower"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ToLower"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ToUpper"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"utils.ToUpper"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TrimLeft"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"strings.TrimLeft"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Trim"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"strings.Trim"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TrimRight"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"strings.TrimRight"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"EqualFold"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"strings.EqualFold"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"StartTimeStampUpdater"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"utils.StartTimeStampUpdater"})," (new ",(0,s.jsx)(n.code,{children:"utils.Timestamp"})," provides the current value)"]})]})]})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Update your code. For example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// v2\nimport oldutils "github.com/gofiber/fiber/v2/utils"\n\nfunc demo() {\n    b := oldutils.TrimBytes([]byte(" fiber "))\n    id := oldutils.UUIDv4()\n    s := oldutils.GetString([]byte("foo"))\n}\n\n// v3\nimport (\n    "github.com/gofiber/utils/v2"\n    "strings"\n)\n\nfunc demo() {\n    b := utils.Trim([]byte(" fiber "))\n    id := utils.UUIDv4()\n    s := utils.ToString([]byte("foo"))\n    t := strings.TrimRight("bar  ", " ")\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"github.com/gofiber/utils/v2"})," module also introduces new helpers like ",(0,s.jsx)(n.code,{children:"ParseInt"}),", ",(0,s.jsx)(n.code,{children:"ParseUint"}),", ",(0,s.jsx)(n.code,{children:"Walk"}),", ",(0,s.jsx)(n.code,{children:"ReadFile"}),", and ",(0,s.jsx)(n.code,{children:"Timestamp"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"-middlewares-1",children:"\u{1F9EC} Middlewares"}),"\n",(0,s.jsx)(n.h4,{id:"important-change-for-accessing-middleware-data-1",children:"Important Change for Accessing Middleware Data"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Change:"})," In Fiber v2, some middlewares set data in ",(0,s.jsx)(n.code,{children:"c.Locals()"})," using string keys (e.g., ",(0,s.jsx)(n.code,{children:'c.Locals("requestid")'}),"). In Fiber v3, to align with Go's context best practices and prevent key collisions, these middlewares now store their specific data in the request's context using unexported keys of custom types."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Impact:"})," Directly accessing these middleware-provided values via ",(0,s.jsx)(n.code,{children:'c.Locals("some_string_key")'})," will no longer work."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Migration Action:"}),"\nThe ",(0,s.jsx)(n.code,{children:"ContextKey"})," configuration option has been removed from all middlewares. Values are no longer stored under user-defined keys. You must update your code to use the dedicated exported functions provided by each affected middleware to retrieve its data from the context."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples of new helper functions to use:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"requestid.FromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csrf.TokenFromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"csrf.HandlerFromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"session.FromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"basicauth.UsernameFromContext(c)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"keyauth.TokenFromContext(c)"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"For logging these values:"}),"\nThe recommended approach is to use the ",(0,s.jsx)(n.code,{children:"CustomTags"})," feature of the Logger middleware, which allows you to call these specific ",(0,s.jsx)(n.code,{children:"FromContext"})," functions. Refer to the ",(0,s.jsx)(n.a,{href:"#logger",children:'Logger section in "What\'s New"'})," for detailed examples."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["If you were manually setting and retrieving your own application-specific values in ",(0,s.jsx)(n.code,{children:"c.Locals()"})," using string keys, that functionality remains unchanged. This change specifically pertains to how Fiber's built-in (and some contrib) middlewares expose their data."]})}),"\n",(0,s.jsx)(n.h4,{id:"basicauth-1",children:"BasicAuth"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Authorizer"})," callback now receives the current request context. Update custom\nfunctions from:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'Authorizer: func(user, pass string) bool {\n    // v2 style\n    return user == "admin" && pass == "secret"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"to:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'Authorizer: func(user, pass string, _ fiber.Ctx) bool {\n    // v3 style with access to the Fiber context\n    return user == "admin" && pass == "secret"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Passwords configured for BasicAuth must now be pre-hashed. If no prefix is supplied the middleware expects a SHA-256 digest encoded in hex. Common prefixes like ",(0,s.jsx)(n.code,{children:"{SHA256}"})," and ",(0,s.jsx)(n.code,{children:"{SHA512}"})," and bcrypt strings are also supported. Plaintext passwords are no longer accepted. Unauthorized responses also include a ",(0,s.jsx)(n.code,{children:"Vary: Authorization"})," header for correct caching behavior."]}),"\n",(0,s.jsxs)(n.p,{children:["You can also set the optional ",(0,s.jsx)(n.code,{children:"HeaderLimit"})," and ",(0,s.jsx)(n.code,{children:"Charset"}),"\noptions to further control authentication behavior."]}),"\n",(0,s.jsx)(n.h4,{id:"keyauth-1",children:"KeyAuth"}),"\n",(0,s.jsxs)(n.p,{children:["The keyauth middleware was updated to introduce a configurable ",(0,s.jsx)(n.code,{children:"Realm"})," field for the ",(0,s.jsx)(n.code,{children:"WWW-Authenticate"})," header.\nThe old string-based ",(0,s.jsx)(n.code,{children:"KeyLookup"})," configuration has been replaced with an ",(0,s.jsx)(n.code,{children:"Extractor"})," field, and the ",(0,s.jsx)(n.code,{children:"AuthScheme"})," field has been removed. The auth scheme is now inferred from the extractor used (e.g., ",(0,s.jsx)(n.code,{children:"keyauth.FromAuthHeader"}),"). Use helper functions like ",(0,s.jsx)(n.code,{children:"keyauth.FromHeader"}),", ",(0,s.jsx)(n.code,{children:"keyauth.FromAuthHeader"}),", or ",(0,s.jsx)(n.code,{children:"keyauth.FromCookie"})," to define where the key should be retrieved from. Multiple sources can be combined with ",(0,s.jsx)(n.code,{children:"keyauth.Chain"}),".\nNew ",(0,s.jsx)(n.code,{children:"Challenge"}),", ",(0,s.jsx)(n.code,{children:"Error"}),", ",(0,s.jsx)(n.code,{children:"ErrorDescription"}),", ",(0,s.jsx)(n.code,{children:"ErrorURI"}),", and ",(0,s.jsx)(n.code,{children:"Scope"})," options let you customize challenge responses, include Bearer error parameters, and specify required scopes. ",(0,s.jsx)(n.code,{children:"ErrorURI"})," values are validated as absolute, credentials containing whitespace are rejected, and when multiple authorization extractors are chained, all schemes are advertised in the ",(0,s.jsx)(n.code,{children:"WWW-Authenticate"})," header. The middleware defers emitting ",(0,s.jsx)(n.code,{children:"WWW-Authenticate"})," until a 401 status is final, and ",(0,s.jsx)(n.code,{children:"FromAuthHeader"})," now trims surrounding whitespace."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Use(keyauth.New(keyauth.Config{\n    KeyLookup: "header:Authorization",\n    AuthScheme: "Bearer",\n    Validator: validateAPIKey,\n}))\n\n// After\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: keyauth.FromAuthHeader(fiber.HeaderAuthorization, "Bearer"),\n    Validator: validateAPIKey,\n}))\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Combine multiple sources with ",(0,s.jsx)(n.code,{children:"keyauth.Chain()"})," when needed."]}),"\n",(0,s.jsx)(n.h4,{id:"cache-1",children:"Cache"}),"\n",(0,s.jsxs)(n.p,{children:["The deprecated ",(0,s.jsx)(n.code,{children:"Store"})," and ",(0,s.jsx)(n.code,{children:"Key"})," fields were removed. Use ",(0,s.jsx)(n.code,{children:"Storage"})," and\n",(0,s.jsx)(n.code,{children:"KeyGenerator"})," instead to configure caching backends and cache keys."]}),"\n",(0,s.jsx)(n.h4,{id:"cors-1",children:"CORS"}),"\n",(0,s.jsxs)(n.p,{children:["The CORS middleware has been updated to use slices instead of strings for the ",(0,s.jsx)(n.code,{children:"AllowOrigins"}),", ",(0,s.jsx)(n.code,{children:"AllowMethods"}),", ",(0,s.jsx)(n.code,{children:"AllowHeaders"}),", and ",(0,s.jsx)(n.code,{children:"ExposeHeaders"})," fields. Here's how you can update your code:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Use(cors.New(cors.Config{\n    AllowOrigins: "https://example.com,https://example2.com",\n    AllowMethods: strings.Join([]string{fiber.MethodGet, fiber.MethodPost}, ","),\n    AllowHeaders: "Content-Type",\n    ExposeHeaders: "Content-Length",\n}))\n\n// After\napp.Use(cors.New(cors.Config{\n    AllowOrigins: []string{"https://example.com", "https://example2.com"},\n    AllowMethods: []string{fiber.MethodGet, fiber.MethodPost},\n    AllowHeaders: []string{"Content-Type"},\n    ExposeHeaders: []string{"Content-Length"},\n}))\n'})}),"\n",(0,s.jsx)(n.h4,{id:"csrf-1",children:"CSRF"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Field Renaming"}),": The ",(0,s.jsx)(n.code,{children:"Expiration"})," field in the CSRF middleware configuration has been renamed to ",(0,s.jsx)(n.code,{children:"IdleTimeout"})," to better describe its functionality. Additionally, the default value has been reduced from 1 hour to 30 minutes. Update your code as follows:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// Before\napp.Use(csrf.New(csrf.Config{\n    Expiration: 10 * time.Minute,\n}))\n\n// After\napp.Use(csrf.New(csrf.Config{\n    IdleTimeout: 10 * time.Minute,\n}))\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Session Key Removal"}),": The ",(0,s.jsx)(n.code,{children:"SessionKey"})," field has been removed from the CSRF middleware configuration. The session key is now an unexported constant within the middleware to avoid potential key collisions in the session store."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"KeyLookup Field Removal"}),": The ",(0,s.jsx)(n.code,{children:"KeyLookup"})," field has been removed from the CSRF middleware configuration. This field was deprecated and is no longer needed as the middleware now uses a more secure approach for token management."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"DisableValueRedaction Toggle"}),": CSRF redacts tokens and storage keys by default; set ",(0,s.jsx)(n.code,{children:"DisableValueRedaction"})," to ",(0,s.jsx)(n.code,{children:"true"})," when diagnostics require the raw values."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Use(csrf.New(csrf.Config{\n    KeyLookup: "header:X-Csrf-Token",\n    // other config...\n}))\n\n// After - use Extractor instead\napp.Use(csrf.New(csrf.Config{\n    Extractor: csrf.FromHeader("X-Csrf-Token"),\n    // other config...\n}))\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FromCookie Extractor Removal"}),": The ",(0,s.jsx)(n.code,{children:"csrf.FromCookie"})," extractor has been intentionally removed for security reasons. Using cookie-based extraction defeats the purpose of CSRF protection by making the extracted token always match the cookie value."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before - This was a security vulnerability\napp.Use(csrf.New(csrf.Config{\n    Extractor: csrf.FromCookie("csrf_token"), // \u274C Insecure!\n}))\n\n// After - Use secure extractors instead\napp.Use(csrf.New(csrf.Config{\n    Extractor: csrf.FromHeader("X-Csrf-Token"), // \u2705 Secure\n    // or\n    Extractor: csrf.FromForm("_csrf"),          // \u2705 Secure\n    // or\n    Extractor: csrf.FromQuery("csrf_token"),    // \u2705 Acceptable\n}))\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Security Note"}),": The removal of ",(0,s.jsx)(n.code,{children:"FromCookie"})," prevents a common misconfiguration that would completely bypass CSRF protection. The middleware uses the Double Submit Cookie pattern, which requires the token to be submitted through a different channel than the cookie to provide meaningful protection."]}),"\n",(0,s.jsx)(n.h4,{id:"idempotency-1",children:"Idempotency"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DisableValueRedaction Toggle"}),": The idempotency middleware now hides keys in logs and error paths by default, with a ",(0,s.jsx)(n.code,{children:"DisableValueRedaction"})," boolean (default ",(0,s.jsx)(n.code,{children:"false"}),") to reveal them when needed."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"timeout-1",children:"Timeout"}),"\n",(0,s.jsx)(n.p,{children:"The timeout middleware now accepts a configuration struct instead of a duration.\nUpdate your code as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// Before\napp.Use(timeout.New(handler, 2*time.Second))\n\n// After\napp.Use(timeout.New(handler, timeout.Config{Timeout: 2 * time.Second}))\n"})}),"\n",(0,s.jsx)(n.h4,{id:"filesystem-1",children:"Filesystem"}),"\n",(0,s.jsx)(n.p,{children:"You need to move filesystem middleware to static middleware due to it has been removed from the core."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Use(filesystem.New(filesystem.Config{\n    Root: http.Dir("./assets"),\n}))\n\napp.Use(filesystem.New(filesystem.Config{\n    Root:         http.Dir("./assets"),\n    Browse:       true,\n    Index:        "index.html",\n    MaxAge:       3600,\n}))\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Use(static.New("", static.Config{\n    FS: os.DirFS("./assets"),\n}))\n\napp.Use(static.New("", static.Config{\n    FS:           os.DirFS("./assets"),\n    Browse:       true,\n    IndexNames:   []string{"index.html"},\n    MaxAge:       3600,\n}))\n'})}),"\n",(0,s.jsx)(n.h4,{id:"envvar-1",children:"EnvVar"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ExcludeVars"})," option has been removed. Remove any references to it and use\n",(0,s.jsx)(n.code,{children:"ExportVars"})," to explicitly list environment variables that should be exposed."]}),"\n",(0,s.jsx)(n.h4,{id:"healthcheck-1",children:"Healthcheck"}),"\n",(0,s.jsx)(n.p,{children:"Previously, the Healthcheck middleware was configured with a combined setup for liveness and readiness probes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'//before\napp.Use(healthcheck.New(healthcheck.Config{\n    LivenessProbe: func(c fiber.Ctx) bool {\n        return true\n    },\n    LivenessEndpoint: "/live",\n    ReadinessProbe: func(c fiber.Ctx) bool {\n        return serviceA.Ready() && serviceB.Ready() && ...\n    },\n    ReadinessEndpoint: "/ready",\n}))\n'})}),"\n",(0,s.jsx)(n.p,{children:"With the new version, each health check endpoint is configured separately, allowing for more flexibility:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// after\n\n// Default liveness endpoint configuration\napp.Get(healthcheck.LivenessEndpoint, healthcheck.New(healthcheck.Config{\n    Probe: func(c fiber.Ctx) bool {\n        return true\n    },\n}))\n\n// Default readiness endpoint configuration\napp.Get(healthcheck.ReadinessEndpoint, healthcheck.New())\n\n// New default startup endpoint configuration\n// Default endpoint is /startupz\napp.Get(healthcheck.StartupEndpoint, healthcheck.New(healthcheck.Config{\n    Probe: func(c fiber.Ctx) bool {\n        return serviceA.Ready() && serviceB.Ready() && ...\n    },\n}))\n\n// Custom liveness endpoint configuration\napp.Get("/live", healthcheck.New())\n'})}),"\n",(0,s.jsx)(n.h4,{id:"monitor-1",children:"Monitor"}),"\n",(0,s.jsxs)(n.p,{children:["Since v3 the Monitor middleware has been moved to the ",(0,s.jsx)(n.a,{href:"https://github.com/gofiber/contrib/tree/main/monitor",children:"Contrib package"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\nimport "github.com/gofiber/fiber/v2/middleware/monitor"\n\napp.Use("/metrics", monitor.New())\n'})}),"\n",(0,s.jsx)(n.p,{children:"You only need to change the import path to the contrib package."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\nimport "github.com/gofiber/contrib/monitor"\n\napp.Use("/metrics", monitor.New())\n'})}),"\n",(0,s.jsx)(n.h4,{id:"proxy-1",children:"Proxy"}),"\n",(0,s.jsxs)(n.p,{children:["In previous versions, TLS settings for the proxy middleware were set using the ",(0,s.jsx)(n.code,{children:"WithTlsConfig"})," method. This method has been removed in favor of a more idiomatic configuration via the ",(0,s.jsx)(n.code,{children:"TLSConfig"})," field in the ",(0,s.jsx)(n.code,{children:"Config"})," struct."]}),"\n",(0,s.jsx)(n.h4,{id:"before-v2-usage",children:"Before (v2 usage)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'proxy.WithTlsConfig(&tls.Config{\n    InsecureSkipVerify: true,\n})\n\n// Forward to url\napp.Get("/gif", proxy.Forward("https://i.imgur.com/IWaBepg.gif"))\n'})}),"\n",(0,s.jsx)(n.h4,{id:"after-v3-usage",children:"After (v3 usage)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'proxy.WithClient(&fasthttp.Client{\n    TLSConfig: &tls.Config{InsecureSkipVerify: true},\n})\n\n// Forward to url\napp.Get("/gif", proxy.Forward("https://i.imgur.com/IWaBepg.gif"))\n'})}),"\n",(0,s.jsx)(n.h4,{id:"session-2",children:"Session"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"session.New()"})," now returns a middleware handler. When using the store pattern,\ncreate a store with ",(0,s.jsx)(n.code,{children:"session.NewStore()"})," or call ",(0,s.jsx)(n.code,{children:"Store()"})," on the middleware.\nSessions obtained from a store must be released manually via ",(0,s.jsx)(n.code,{children:"sess.Release()"}),".\nAdditionally, replace the deprecated ",(0,s.jsx)(n.code,{children:"KeyLookup"})," option with extractor\nfunctions such as ",(0,s.jsx)(n.code,{children:"session.FromCookie()"})," or ",(0,s.jsx)(n.code,{children:"session.FromHeader()"}),". Multiple\nextractors can be combined with ",(0,s.jsx)(n.code,{children:"session.Chain()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// Before\napp.Use(session.New(session.Config{\n    KeyLookup: "cookie:session_id",\n    Store:     session.NewStore(),\n}))\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'// After\napp.Use(session.New(session.Config{\n    Extractor: session.FromCookie("session_id"),\n    Store:     session.NewStore(),\n}))\n'})}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/next/middleware/session#migration-guide",children:"Session Middleware Migration Guide"}),"\nfor complete details."]})]})}function h(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},84429:function(e,n,r){r.d(n,{R:()=>d,x:()=>o});var i=r(96540);let s={},t=i.createContext(s);function d(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);