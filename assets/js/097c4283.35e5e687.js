"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["40122"],{60481:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,toc:()=>c,default:()=>g,metadata:()=>s,assets:()=>l,contentTitle:()=>r});var s=JSON.parse('{"id":"cassandra/README","title":"Cassandra","description":"A Cassandra storage driver using gocql/gocql","source":"@site/storage_versioned_docs/version-pebble_v2.x.x/cassandra/README.md","sourceDirName":"cassandra","slug":"/cassandra/","permalink":"/storage/pebble_v2.x.x/cassandra/","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/storage/edit/main/cassandra/README.md","tags":[],"version":"pebble_v2.x.x","lastUpdatedAt":1762030608000,"frontMatter":{},"sidebar":"left_sidebar","previous":{"title":"Bbolt","permalink":"/storage/pebble_v2.x.x/bbolt/"},"next":{"title":"Clickhouse","permalink":"/storage/pebble_v2.x.x/clickhouse/"}}'),o=t(74848),a=t(84429);let i={},r="Cassandra",l={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Signatures",id:"signatures",level:3},{value:"Installation",id:"installation",level:3},{value:"Running the tests",id:"running-the-tests",level:3},{value:"Local development",id:"local-development",level:3},{value:"Examples",id:"examples",level:3},{value:"Config",id:"config",level:3},{value:"Default Config",id:"default-config",level:3}];function d(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"cassandra",children:"Cassandra"})}),"\n",(0,o.jsxs)(n.p,{children:["A Cassandra storage driver using ",(0,o.jsx)(n.a,{href:"https://github.com/gocql/gocql",children:"gocql/gocql"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.img,{src:"https://img.shields.io/github/v/tag/gofiber/storage?filter=cassandra*",alt:"Release"}),"\n",(0,o.jsx)(n.a,{href:"https://gofiber.io/discord",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/discord/704680098577514527?style=flat&label=%F0%9F%92%AC%20discord&color=00ACD7",alt:"Discord"})}),"\n",(0,o.jsx)(n.img,{src:"https://img.shields.io/github/actions/workflow/status/gofiber/storage/test-cassandra.yml?label=Tests",alt:"Test"})]}),"\n",(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#signatures",children:"Signatures"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#config",children:"Config"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#default-config",children:"Default Config"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"signatures",children:"Signatures"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"func New(config ...Config) (*Storage, error)\nfunc (s *Storage) Get(key string) ([]byte, error)\nfunc (s *Storage) GetWithContext(ctx context.Context, key string) ([]byte, error)\nfunc (s *Storage) Set(key string, val []byte, exp time.Duration) error\nfunc (s *Storage) SetWithContext(ctx context.Context, key string, val []byte, exp time.Duration) error\nfunc (s *Storage) Delete(key string) error\nfunc (s *Storage) DeleteWithContext(ctx context.Context, key string) error\nfunc (s *Storage) Reset() error\nfunc (s *Storage) ResetWithContext(ctx context.Context) error\nfunc (s *Storage) Close() error\nfunc (s *Storage) Conn() *gocql.Session\n"})}),"\n",(0,o.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:"Cassandra is supported on the latest two versions of Go:"}),"\n",(0,o.jsx)(n.p,{children:"Install the cassandra implementation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"go get github.com/gofiber/storage/cassandra\n"})}),"\n",(0,o.jsx)(n.h3,{id:"running-the-tests",children:"Running the tests"}),"\n",(0,o.jsxs)(n.p,{children:["This module uses ",(0,o.jsx)(n.a,{href:"https://github.com/testcontainers/testcontainers-go/",children:"Testcontainers for Go"})," to run integration tests, which will start a local instance of Cassandra as a Docker container under the hood. To run the tests, you must have Docker (or another container runtime 100% compatible with the Docker APIs) installed on your machine."]}),"\n",(0,o.jsx)(n.h3,{id:"local-development",children:"Local development"}),"\n",(0,o.jsx)(n.p,{children:"Before running this implementation, you must ensure a Cassandra cluster is available.\nFor local development, we recommend using the Cassandra Docker image; it contains everything\nnecessary for the client to operate correctly."}),"\n",(0,o.jsx)(n.p,{children:"To start Cassandra using Docker, issue the following:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run --name cassandra -p 9042:9042 -d cassandra:latest\n"})}),"\n",(0,o.jsx)(n.p,{children:"After running this command, you're ready to start using the storage and connecting to the database."}),"\n",(0,o.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.p,{children:"You can use the following options to create a cassandra storage driver:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'import "github.com/gofiber/storage/cassandra"\n\n// Initialize default config, to connect to localhost:9042 using the memory engine and with a clean table.\nstore := New(Config{\n    Hosts:     []string{"localhost:9042"},\n    Keyspace: "test_keyspace_creation",\n    Table:    "test_kv",\n    Expiration : 10 * time.Minute,\n})\n'})}),"\n",(0,o.jsx)(n.h3,{id:"config",children:"Config"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"// Config defines the configuration options for the Cassandra storage\ntype Config struct {\n    // Optional. Default is localhost\n    // Hosts is a list of Cassandra nodes to connect to.\n    Hosts []string\n    // Optional. Default is gofiber\n    // Keyspace is the name of the Cassandra keyspace to use.\n    Keyspace string\n    // Optional. Default is kv_store\n    // Table is the name of the Cassandra table to use.\n    Table string\n    // Optional. Default is Quorum\n    // Consistency is the Cassandra consistency level.\n    Consistency gocql.Consistency\n    // Optional. PoolConfig.HostSelectionPolicy = gocql.TokenAwareHostPolicy(gocql.RoundRobinHostPolicy())\n    // PoolConfig is the Cassandra connection pool configuration.\n    PoolConfig *gocql.PoolConfig\n    // Optional. Default is false\n    // SslOpts is the SSL options for the Cassandra cluster.\n    SslOpts *gocql.SslOptions\n    // Optional. Default is 10 minutes\n    // Expiration is the time after which an entry is considered expired.\n    Expiration time.Duration\n    // Optional. Default is false\n    // Reset is a flag to reset the database.\n    Reset bool\n    // Optional. Default is 3\n    // MaxRetries is the maximum number of retries for a query.\n    MaxRetries int\n    // Optional. Default is 5 seconds\n    // ConnectTimeout is the timeout for connecting to the Cassandra cluster.\n    ConnectTimeout time.Duration\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"default-config",children:"Default Config"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'var ConfigDefault = Config{\n    Hosts:          []string{"localhost:9042"},\n    Keyspace:       "gofiber",\n    Table:          "kv_store",\n    Consistency:    gocql.Quorum,\n    Reset:          false,\n    Expiration:     10 * time.Minute,\n    MaxRetries:     3,\n    ConnectTimeout: 5 * time.Second,\n    SslOpts:        nil,\n    PoolConfig: &gocql.PoolConfig{\n        HostSelectionPolicy: gocql.TokenAwareHostPolicy(gocql.RoundRobinHostPolicy()),\n    },\n}\n'})})]})}function g(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},84429:function(e,n,t){t.d(n,{R:()=>i,x:()=>r});var s=t(96540);let o={},a=s.createContext(o);function i(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);