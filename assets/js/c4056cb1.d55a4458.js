"use strict";(self.webpackChunkfiber_docs=self.webpackChunkfiber_docs||[]).push([["7994"],{79329:function(e,r,n){n.r(r),n.d(r,{frontMatter:()=>o,toc:()=>l,default:()=>h,metadata:()=>s,assets:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"guide/extractors","title":"\u{1F52C} Extractors","description":"Learn how to use extractors in Fiber middleware","source":"@site/docs/core/guide/extractors.md","sourceDirName":"guide","slug":"/guide/extractors","permalink":"/next/guide/extractors","draft":false,"unlisted":false,"editUrl":"https://github.com/gofiber/fiber/edit/main/docs/guide/extractors.md","tags":[],"version":"current","lastUpdatedAt":1762030608000,"sidebarPosition":8.5,"frontMatter":{"id":"extractors","title":"\u{1F52C} Extractors","description":"Learn how to use extractors in Fiber middleware","sidebar_position":8.5,"toc_max_heading_level":4},"sidebar":"left_sidebar","previous":{"title":"\u{1F9F0} Utils","permalink":"/next/guide/utils"},"next":{"title":"\u{1F41B} Advanced Format","permalink":"/next/guide/advance-format"}}'),i=n(74848),t=n(84429);let o={id:"extractors",title:"\u{1F52C} Extractors",description:"Learn how to use extractors in Fiber middleware",sidebar_position:8.5,toc_max_heading_level:4},a,c={},l=[{value:"Overview",id:"overview",level:2},{value:"What Are Extractors?",id:"what-are-extractors",level:2},{value:"Available Extractors",id:"available-extractors",level:3},{value:"Extractor Structure",id:"extractor-structure",level:3},{value:"Chain Behavior",id:"chain-behavior",level:3},{value:"Why Middleware Uses Extractors",id:"why-middleware-uses-extractors",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Fallback Chains",id:"fallback-chains",level:3},{value:"Configuring Middleware That Uses Extractors",id:"configuring-middleware-that-uses-extractors",level:2},{value:"Authentication Middleware",id:"authentication-middleware",level:3},{value:"Session Middleware",id:"session-middleware",level:3},{value:"CSRF Middleware",id:"csrf-middleware",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Source Characteristics",id:"source-characteristics",level:3},{value:"Headers (Generally Preferred)",id:"headers-generally-preferred",level:4},{value:"Cookies (Good for Sessions)",id:"cookies-good-for-sessions",level:4},{value:"Query Parameters (Use Sparingly)",id:"query-parameters-use-sparingly",level:4},{value:"Form Data (Context Dependent)",id:"form-data-context-dependent",level:4},{value:"Security Best Practices",id:"security-best-practices",level:3},{value:"Chain Ordering Strategy",id:"chain-ordering-strategy",level:3},{value:"Common Security Issues",id:"common-security-issues",level:3},{value:"Leaky URLs",id:"leaky-urls",level:4},{value:"Session Tokens in Query Parameters",id:"session-tokens-in-query-parameters",level:4},{value:"Form-Only CSRF Tokens",id:"form-only-csrf-tokens",level:4},{value:"Understanding Trade-offs",id:"understanding-trade-offs",level:3},{value:"Standards Compliance",id:"standards-compliance",level:2},{value:"Authorization Header (RFC 9110 &amp; RFC 7235)",id:"authorization-header-rfc-9110--rfc-7235",level:3},{value:"RFC 9110 Compliance (Authorization Header Format)",id:"rfc-9110-compliance-authorization-header-format",level:4},{value:"RFC 7235 Token68 Validation",id:"rfc-7235-token68-validation",level:4},{value:"Security Features",id:"security-features",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Extraction Fails",id:"extraction-fails",level:3},{value:"Wrong Source Used",id:"wrong-source-used",level:3},{value:"Security Warnings",id:"security-warnings",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Extraction Logic",id:"custom-extraction-logic",level:3},{value:"Multiple Middleware Coordination",id:"multiple-middleware-coordination",level:3}];function d(e){let r={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.p,{children:"The extractors package provides shared value extraction utilities for Fiber middleware packages. It helps reduce code duplication across middleware packages while ensuring consistent behavior and security practices."}),"\n",(0,i.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"github.com/gofiber/fiber/v3/extractors"})," module provides standardized value extraction utilities integrated into Fiber's middleware ecosystem. This approach:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Reduces Code Duplication"}),": Eliminates redundant extractor implementations across middleware packages"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Ensures Consistency"}),": Maintains identical behavior and security practices across all extractors"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Simplifies Maintenance"}),": Changes to extraction logic only need to be made in one place"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Enables Direct Usage"}),": Middleware can import and use extractors directly"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Improves Performance"}),": Shared, optimized extraction functions reduce overhead"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"what-are-extractors",children:"What Are Extractors?"}),"\n",(0,i.jsx)(r.p,{children:"Extractors are utilities that middleware uses to get values from different parts of HTTP requests:"}),"\n",(0,i.jsx)(r.h3,{id:"available-extractors",children:"Available Extractors"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"FromAuthHeader(authScheme string)"}),": Extract from Authorization header with optional scheme"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"FromCookie(key string)"}),": Extract from HTTP cookies"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"FromParam(param string)"}),": Extract from URL path parameters"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"FromForm(param string)"}),": Extract from form data"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"FromHeader(header string)"}),": Extract from custom HTTP headers"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"FromQuery(param string)"}),": Extract from URL query parameters"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"FromCustom(key string, fn func(fiber.Ctx) (string, error))"}),": Define custom extraction logic with metadata"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"Chain(extractors ...Extractor)"}),": Chain multiple extractors with fallback logic"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"extractor-structure",children:"Extractor Structure"}),"\n",(0,i.jsxs)(r.p,{children:["Each ",(0,i.jsx)(r.code,{children:"Extractor"})," contains:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:"type Extractor struct {\n    Extract    func(fiber.Ctx) (string, error)  // Extraction function\n    Key        string                           // Parameter/header name\n    Source     Source                           // Source type for inspection\n    AuthScheme string                           // Auth scheme (FromAuthHeader)\n    Chain      []Extractor                      // Chained extractors\n}\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Headers"}),": ",(0,i.jsx)(r.code,{children:"Authorization"}),", ",(0,i.jsx)(r.code,{children:"X-API-Key"}),", custom headers"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Cookies"}),": Session cookies, authentication tokens"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Query Parameters"}),": URL parameters like ",(0,i.jsx)(r.code,{children:"?token=abc123"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Form Data"}),": POST body form fields"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"URL Parameters"}),": Route parameters like ",(0,i.jsx)(r.code,{children:"/users/:id"})]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"chain-behavior",children:"Chain Behavior"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"Chain"})," function creates extractors that try multiple sources in order:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Returns the first successful extraction (non-empty value with no error)"}),"\n",(0,i.jsxs)(r.li,{children:["If all extractors fail, returns the last error encountered or ",(0,i.jsx)(r.code,{children:"ErrNotFound"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Robust error handling"}),": Skips extractors with ",(0,i.jsx)(r.code,{children:"nil"})," Extract functions"]}),"\n",(0,i.jsx)(r.li,{children:"Preserves the source and key from the first extractor for metadata"}),"\n",(0,i.jsxs)(r.li,{children:["Stores a defensive copy of all chained extractors for introspection via the ",(0,i.jsx)(r.code,{children:"Chain"})," field"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"why-middleware-uses-extractors",children:"Why Middleware Uses Extractors"}),"\n",(0,i.jsx)(r.p,{children:"Middleware needs to extract values from requests for authentication, authorization, and other purposes. Extractors provide:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Security Awareness"}),": Different sources have different security implications"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Fallback Support"}),": Try multiple sources if the first one doesn't have the value"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Consistency"}),": Same extraction logic across all middleware packages"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Source Tracking"}),": Know where values came from for security decisions"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,i.jsx)(r.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// KeyAuth middleware extracts key from header\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: extractors.FromHeader("Middleware-Key"),\n}))\n'})}),"\n",(0,i.jsx)(r.h3,{id:"fallback-chains",children:"Fallback Chains"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// Try multiple sources in order\ntokenExtractor := extractors.Chain(\n    extractors.FromHeader("Middleware-Key"),  // Try header first\n    extractors.FromCookie("middleware_key"),  // Then cookie\n    extractors.FromQuery("middleware_key"),   // Finally query param\n)\n\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: tokenExtractor,\n}))\n'})}),"\n",(0,i.jsx)(r.h2,{id:"configuring-middleware-that-uses-extractors",children:"Configuring Middleware That Uses Extractors"}),"\n",(0,i.jsx)(r.h3,{id:"authentication-middleware",children:"Authentication Middleware"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// KeyAuth middleware (default: FromAuthHeader)\napp.Use(keyauth.New(keyauth.Config{\n    // Default extracts from Authorization header\n    // Extractor: extractors.FromAuthHeader("Bearer"),\n}))\n\n// Custom header extraction\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: extractors.FromHeader("X-API-Key"),\n}))\n\n// Multiple sources with secure fallback\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: extractors.Chain(\n        extractors.FromAuthHeader("Bearer"),  // Secure first\n        extractors.FromHeader("X-API-Key"),   // Then custom header\n        extractors.FromQuery("api_key"),      // Least secure last\n    ),\n}))\n'})}),"\n",(0,i.jsx)(r.h3,{id:"session-middleware",children:"Session Middleware"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// Session middleware (default: FromCookie)\napp.Use(session.New(session.Config{\n    // Default extracts from session_id cookie\n    // Extractor: extractors.FromCookie("session_id"),\n}))\n\n// Custom cookie name\napp.Use(session.New(session.Config{\n    Extractor: extractors.FromCookie("my_session"),\n}))\n'})}),"\n",(0,i.jsx)(r.h3,{id:"csrf-middleware",children:"CSRF Middleware"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// CSRF middleware (default: FromHeader)\napp.Use(csrf.New(csrf.Config{\n    // Default extracts from X-CSRF-Token header\n    // Extractor: extractors.FromHeader("X-CSRF-Token"),\n}))\n\n// Form-based CSRF (less secure, use only if needed)\napp.Use(csrf.New(csrf.Config{\n    Extractor: extractors.Chain(\n        extractors.FromHeader("X-CSRF-Token"), // Secure first\n        extractors.FromForm("_csrf"),          // Form fallback\n    ),\n}))\n'})}),"\n",(0,i.jsx)(r.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsx)(r.h3,{id:"source-characteristics",children:"Source Characteristics"}),"\n",(0,i.jsx)(r.p,{children:"Different extraction sources have different security properties and use cases:"}),"\n",(0,i.jsx)(r.h4,{id:"headers-generally-preferred",children:"Headers (Generally Preferred)"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Authorization Header"}),": Standard for authentication tokens, widely supported"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Custom Headers"}),": Application-specific, less likely to be logged by default"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Considerations"}),": Can be intercepted without HTTPS, may be stripped by proxies"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"cookies-good-for-sessions",children:"Cookies (Good for Sessions)"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Session Cookies"}),": Designed for secure client-side storage"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Considerations"}),": Require proper ",(0,i.jsx)(r.code,{children:"Secure"}),", ",(0,i.jsx)(r.code,{children:"HttpOnly"}),", and ",(0,i.jsx)(r.code,{children:"SameSite"})," flags"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Best for"}),": Session management, remember-me tokens"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"query-parameters-use-sparingly",children:"Query Parameters (Use Sparingly)"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Query parameters"}),": Convenient for simple APIs and debugging"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Considerations"}),": Always visible in URLs, logged by servers/proxies, stored in browser history"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Best for"}),": Non-sensitive parameters, public identifiers"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"form-data-context-dependent",children:"Form Data (Context Dependent)"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"POST Bodies"}),": Suitable for form submissions and API requests"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Considerations"}),": Avoid putting sensitive data in query strings; ensure request bodies aren\u2019t logged and use the correct content type"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Best for"}),": User-generated content, file uploads"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Use HTTPS"}),": Encrypt all traffic to protect extracted values in transit"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Validate Input"}),": Always validate and sanitize extracted values"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Log Carefully"}),": Avoid logging sensitive values from any source"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Choose Appropriate Sources"}),": Match the source to your security requirements"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Test Thoroughly"}),": Verify extraction works in your environment"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Monitor Security"}),": Watch for extraction failures or unusual patterns"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"chain-ordering-strategy",children:"Chain Ordering Strategy"}),"\n",(0,i.jsx)(r.p,{children:"When using multiple sources, order them by your security preferences:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// Example: Prefer headers, fall back to cookies, then query\nextractors.Chain(\n    extractors.FromAuthHeader("Bearer"),    // Standard auth\n    extractors.FromCookie("auth_token"),    // Secure storage\n    extractors.FromQuery("token"),          // Public fallback\n)\n'})}),"\n",(0,i.jsx)(r.p,{children:'The "best" source depends on your specific use case, security requirements, and application architecture.'}),"\n",(0,i.jsx)(r.h3,{id:"common-security-issues",children:"Common Security Issues"}),"\n",(0,i.jsx)(r.h4,{id:"leaky-urls",children:"Leaky URLs"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// \u274C DON\'T: API keys in URLs (visible in logs, history, bookmarks)\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: extractors.FromQuery("api_key"), // PROBLEMATIC\n}))\n\n// \u2705 DO: API keys in headers (not visible in URLs)\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: extractors.FromHeader("X-API-Key"), // BETTER\n}))\n'})}),"\n",(0,i.jsx)(r.h4,{id:"session-tokens-in-query-parameters",children:"Session Tokens in Query Parameters"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// \u274C DON\'T: Session tokens in URLs (can be bookmarked, leaked)\napp.Use(session.New(session.Config{\n    Extractor: extractors.FromQuery("session"), // PROBLEMATIC\n}))\n\n// \u2705 DO: Session tokens in cookies (designed for this purpose)\napp.Use(session.New(session.Config{\n    Extractor: extractors.FromCookie("session_id"), // BETTER\n}))\n'})}),"\n",(0,i.jsx)(r.h4,{id:"form-only-csrf-tokens",children:"Form-Only CSRF Tokens"}),"\n",(0,i.jsx)(r.p,{children:"While the default extractor uses headers, some implementations use form fields, which is fine if you don't have AJAX or API clients:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// \u274C DON\'T: CSRF tokens only in forms (breaks AJAX, API calls)\napp.Use(csrf.New(csrf.Config{\n    Extractor: extractors.FromForm("_csrf"), // LIMITED\n}))\n\n// \u2705 DO: Header-first with form fallback (works everywhere)\napp.Use(csrf.New(csrf.Config{\n    Extractor: extractors.Chain(\n        extractors.FromHeader("X-CSRF-Token"), // PREFERRED\n        extractors.FromForm("_csrf"),          // FALLBACK\n    ),\n}))\n'})}),"\n",(0,i.jsx)(r.h3,{id:"understanding-trade-offs",children:"Understanding Trade-offs"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:'No extractor is universally "secure" - security depends on:'})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Whether you're using HTTPS"}),"\n",(0,i.jsx)(r.li,{children:"How you configure cookies (Secure, HttpOnly, SameSite flags)"}),"\n",(0,i.jsx)(r.li,{children:"Your logging and monitoring setup"}),"\n",(0,i.jsx)(r.li,{children:"The sensitivity of the data being extracted"}),"\n",(0,i.jsx)(r.li,{children:"Your threat model and security requirements"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:'Choose extractors based on your specific use case and security needs, not blanket "secure" vs "insecure" labels.'}),"\n",(0,i.jsx)(r.h2,{id:"standards-compliance",children:"Standards Compliance"}),"\n",(0,i.jsx)(r.h3,{id:"authorization-header-rfc-9110--rfc-7235",children:"Authorization Header (RFC 9110 & RFC 7235)"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"FromAuthHeader"})," extractor provides comprehensive RFC compliance with strict security validation:"]}),"\n",(0,i.jsx)(r.h4,{id:"rfc-9110-compliance-authorization-header-format",children:"RFC 9110 Compliance (Authorization Header Format)"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Section 11.6.2 Format"}),": Enforces ",(0,i.jsx)(r.code,{children:"credentials = auth-scheme 1*SP token68"})," structure"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"1*SP Requirement"}),": Validates exactly one or more spaces between auth-scheme and token"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Case-insensitive scheme matching"}),": ",(0,i.jsx)(r.code,{children:"Bearer"}),", ",(0,i.jsx)(r.code,{children:"bearer"}),", ",(0,i.jsx)(r.code,{children:"BEARER"})," all work correctly"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Proper whitespace handling"}),": Rejects tabs between scheme and token (only spaces allowed)"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"rfc-7235-token68-validation",children:"RFC 7235 Token68 Validation"}),"\n",(0,i.jsx)(r.p,{children:"The extractor implements strict token68 character validation per RFC 7235:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Allowed characters"}),": ",(0,i.jsx)(r.code,{children:"A-Z"}),", ",(0,i.jsx)(r.code,{children:"a-z"}),", ",(0,i.jsx)(r.code,{children:"0-9"}),", ",(0,i.jsx)(r.code,{children:"-"}),", ",(0,i.jsx)(r.code,{children:"."}),", ",(0,i.jsx)(r.code,{children:"_"}),", ",(0,i.jsx)(r.code,{children:"~"}),", ",(0,i.jsx)(r.code,{children:"+"}),", ",(0,i.jsx)(r.code,{children:"/"}),", ",(0,i.jsx)(r.code,{children:"="})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Padding rules"}),": ",(0,i.jsx)(r.code,{children:"="})," characters only allowed at the end of tokens"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Security validation"}),": Prevents tokens starting with ",(0,i.jsx)(r.code,{children:"="})," or having non-padding characters after ",(0,i.jsx)(r.code,{children:"="})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Whitespace rejection"}),": Rejects tokens containing spaces, tabs, or any other whitespace"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"security-features",children:"Security Features"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Header injection prevention"}),": Strict parsing prevents malformed authorization headers from bypassing authentication"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Token validation"}),": Ensures extracted tokens conform to standards, preventing authentication bypass"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Consistent error handling"}),": Returns ",(0,i.jsx)(r.code,{children:"ErrNotFound"})," for all invalid cases"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// Standard usage - strict validation\nextractor := extractors.FromAuthHeader("Bearer")\n\n// \u2705 Valid cases:\n// "Bearer abc123" -> "abc123"\n// "bearer ABC123" -> "ABC123" (case-insensitive scheme)\n// "Bearer token123=" -> "token123=" (valid padding)\n// "Bearer token==" -> "token==" (valid multiple padding)\n\n// \u274C Invalid cases (all return ErrNotFound):\n// "Bearer abc def" -> rejected (space in token)\n// "Bearer abc\\tdef" -> rejected (tab in token)\n// "Bearer =abc" -> rejected (padding at start)\n// "Bearer ab=cd" -> rejected (padding in middle)\n// "Bearer  token" -> rejected (multiple spaces after scheme)\n// "Bearer\\ttoken" -> rejected (tab after scheme)\n// "Bearertoken" -> rejected (no space after scheme)\n\n// Raw header extraction (no validation)\nrawExtractor := extractors.FromAuthHeader("")\n// "CustomAuth anything goes here" -> "CustomAuth anything goes here"\n'})}),"\n",(0,i.jsx)(r.h4,{id:"benefits",children:"Benefits"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Standards Compliance"}),": Full adherence to HTTP authentication RFCs"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Security Hardening"}),": Prevents common authentication bypass vulnerabilities"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Consistent Behavior"}),": Reliable parsing across different client implementations"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Developer Confidence"}),": Clear validation rules reduce authentication bugs"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(r.h3,{id:"extraction-fails",children:"Extraction Fails"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Problem"}),': Middleware returns "value not found" or authentication fails']}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Solutions"}),":"]}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:"Check if the expected header/cookie/query parameter is present"}),"\n",(0,i.jsx)(r.li,{children:"Verify the key name matches exactly (headers are case-insensitive; params/cookies/query keys are case-sensitive)"}),"\n",(0,i.jsx)(r.li,{children:"Ensure the request uses the correct HTTP method (GET vs POST)"}),"\n",(0,i.jsx)(r.li,{children:"Check if middleware is configured with the right extractor"}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Debug Example"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// Add simple debug logging (avoid logging secrets in production)\napp.Use(func(c fiber.Ctx) error {\n    hdr := c.Get("X-API-Key")\n    cookie := c.Cookies("session_id")\n    if hdr != "" || cookie != "" {\n        log.Printf("debug: X-API-Key present=%t, session_id present=%t", hdr != "", cookie != "")\n    }\n    return c.Next()\n})\n'})}),"\n",(0,i.jsx)(r.h3,{id:"wrong-source-used",children:"Wrong Source Used"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Problem"}),": Values extracted from unexpected sources"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Solutions"}),":"]}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:"Check middleware configuration order"}),"\n",(0,i.jsx)(r.li,{children:"Verify chain order (first successful extraction wins)"}),"\n",(0,i.jsx)(r.li,{children:"Use more specific extractors when needed"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"security-warnings",children:"Security Warnings"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Problem"}),": Getting security warnings in logs"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Solutions"}),":"]}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:"Switch to more secure sources (headers/cookies)"}),"\n",(0,i.jsx)(r.li,{children:"Use HTTPS to encrypt traffic"}),"\n",(0,i.jsx)(r.li,{children:"Review if sensitive data should be in that source"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,i.jsx)(r.h3,{id:"custom-extraction-logic",children:"Custom Extraction Logic"}),"\n",(0,i.jsx)(r.p,{children:"Extractors support custom extractors for complex scenarios:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// Extract from custom logic (rarely needed)\ncustomExtractor := extractors.FromCustom("my-source", func(c fiber.Ctx) (string, error) {\n    // Complex extraction logic\n    if value := c.Locals("computed_token"); value != nil {\n        return value.(string), nil\n    }\n    return "", extractors.ErrNotFound\n})\n'})}),"\n",(0,i.jsxs)(r.admonition,{type:"warning",children:[(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Custom extractors break source awareness."})," When you use ",(0,i.jsx)(r.code,{children:"FromCustom"}),", middleware cannot determine where the value came from, which means:"]}),(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"No automatic security warnings"})," for potentially insecure sources"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"No source-based logging"})," or monitoring capabilities"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Developer responsibility"})," for ensuring the extraction is secure and appropriate"]}),"\n"]}),(0,i.jsx)(r.p,{children:(0,i.jsxs)(r.strong,{children:["Only use ",(0,i.jsx)(r.code,{children:"FromCustom"})," when:"]})}),(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Standard extractors don't meet your needs"}),"\n",(0,i.jsx)(r.li,{children:"You've carefully evaluated the security implications"}),"\n",(0,i.jsx)(r.li,{children:"You're confident in the security of your custom extraction logic"}),"\n",(0,i.jsx)(r.li,{children:"You understand that middleware cannot provide source-aware security guidance"}),"\n"]}),(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Note:"})," If you pass ",(0,i.jsx)(r.code,{children:"nil"})," as the function parameter, ",(0,i.jsx)(r.code,{children:"FromCustom"})," will return an extractor that always fails with ",(0,i.jsx)(r.code,{children:"ErrNotFound"}),"."]})]}),"\n",(0,i.jsx)(r.h3,{id:"multiple-middleware-coordination",children:"Multiple Middleware Coordination"}),"\n",(0,i.jsx)(r.p,{children:"When using multiple middleware that extract values, ensure they don't conflict:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-go",children:'// Good: Different sources for different purposes\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: extractors.FromHeader("X-API-Key"),\n}))\napp.Use(session.New(session.Config{\n    Extractor: extractors.FromCookie("session_id"),\n}))\n\n// Avoid: Same source for different middleware\napp.Use(keyauth.New(keyauth.Config{\n    Extractor: extractors.FromCookie("token"), // API auth\n}))\napp.Use(session.New(session.Config{\n    Extractor: extractors.FromCookie("token"), // Session - CONFLICT!\n}))\n'})})]})}function h(e={}){let{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},84429:function(e,r,n){n.d(r,{R:()=>o,x:()=>a});var s=n(96540);let i={},t=s.createContext(i);function o(e){let r=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);